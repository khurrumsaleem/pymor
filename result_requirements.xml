<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="0" skipped="796" tests="3841" time="1355.477" timestamp="2022-12-28T10:35:12.403278" hostname="fv-az216-302"><properties><property name="hypothesis-statistics-src/pymortests/tools.py::test_vtkio" value="c3JjL3B5bW9ydGVzdHMvdG9vbHMucHk6OnRlc3RfdnRraW86CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgxLjk3IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAzMS0xOTggbXMsIH4gMTElIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDAgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_empty" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfZW1wdHk6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjUzIHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAxLTEyNSBtcywgfiA3OSUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgOCBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_print" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfcHJpbnQ6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgxLjE1IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAxLTEyNSBtcywgfiA3NCUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMTEgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_zeros" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfemVyb3M6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgxLjU3IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAxLTEyNiBtcywgfiA3NyUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMTUgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_ones" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3Rfb25lczoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDEuNDUgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtMTI2IG1zLCB+IDc3JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAxMSBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_full" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfZnVsbDoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDEuMDQgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtMTI1IG1zLCB+IDU4JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCA5IGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_random_uniform_all" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfcmFuZG9tX3VuaWZvcm1fYWxsOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMS42NCBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMi0xMjYgbXMsIH4gODclIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDE1IGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_random_normal" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfcmFuZG9tX25vcm1hbDoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDEuNTggc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDItMTI1IG1zLCB+IDg3JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAxNCBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_from_numpy" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfZnJvbV9udW1weToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuNzQgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtMTI1IG1zLCB+IDgwJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCA4IGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_shape" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3Rfc2hhcGU6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgxLjY0IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAxLTEyNiBtcywgfiA4NyUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMTAgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_space" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3Rfc3BhY2U6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgxLjEzIHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAxLTEyNyBtcywgfiA4OCUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMTQgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_getitem_repeated" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfZ2V0aXRlbV9yZXBlYXRlZDoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDEuNTMgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtMTI2IG1zLCB+IDY5JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAxNiBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_copy" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfY29weToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuODEgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtMTI0IG1zLCB+IDc3JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCA5IGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_COW" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfQ09XOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMS44MyBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMS0xMjYgbXMsIH4gODclIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDE3IGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_copy_repeated_index" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfY29weV9yZXBlYXRlZF9pbmRleDoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDEuNTcgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtMTI3IG1zLCB+IDg0JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAxNCBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_append" value="" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_append_self" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfYXBwZW5kX3NlbGY6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgxLjE5IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAxLTEyNiBtcywgfiA3OSUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMTMgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_del" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfZGVsOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMS4xMCBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMS0xMjcgbXMsIH4gNzklIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDkgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_scal" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3Rfc2NhbDoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuNjggc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtMTI2IG1zLCB+IDYyJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAxMCBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_scal_imaginary" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3Rfc2NhbF9pbWFnaW5hcnk6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgxLjg1IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAxLTEyNyBtcywgfiA4MSUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMTUgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_axpy" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfYXhweToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDIuMzMgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDMtMTI4IG1zLCB+IDgyJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAxNCBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_axpy_one_x" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfYXhweV9vbmVfeDoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDMuMDcgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDQtMTI4IG1zLCB+IDczJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAyMyBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_axpy_self" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfYXhweV9zZWxmOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMS41OCBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMy0xMjcgbXMsIH4gNzAlIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDEyIGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_pairwise_inner" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfcGFpcndpc2VfaW5uZXI6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgxLjUxIHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAyLTEyOCBtcywgfiA2OSUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMTMgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_pairwise_inner_self" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfcGFpcndpc2VfaW5uZXJfc2VsZjoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDEuMTkgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDItMTI3IG1zLCB+IDgzJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAxMiBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_inner" value="" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_inner_self" value="" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_lincomb_1d" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfbGluY29tYl8xZDoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuOTEgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDItMTI3IG1zLCB+IDg1JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAxMiBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_lincomb_2d" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfbGluY29tYl8yZDoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDIuNDcgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDItMTI3IG1zLCB+IDgzJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAyMSBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_lincomb_wrong_coefficients" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfbGluY29tYl93cm9uZ19jb2VmZmljaWVudHM6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgyLjA0IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAyLTEyNiBtcywgfiA3OCUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMTYgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_norm" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3Rfbm9ybToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDEuMjMgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDItMTI3IG1zLCB+IDgxJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAxMiBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_norm2" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3Rfbm9ybTI6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgxLjk2IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAyLTEyOCBtcywgfiA4MyUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMTYgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_sup_norm" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3Rfc3VwX25vcm06CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgxLjEzIHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAyLTEyNiBtcywgfiA4MSUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMTIgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_dofs" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfZG9mczoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuODkgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDItMTI2IG1zLCB+IDgwJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAyNCBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_components_wrong_dof_indices" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfY29tcG9uZW50c193cm9uZ19kb2ZfaW5kaWNlczoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuNzggc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDItMTI2IG1zLCB+IDYyJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCA5IGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_amax" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfYW1heDoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDEuMjYgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtMTI2IG1zLCB+IDg2JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAyMSBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_gramian" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfZ3JhbWlhbjoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDEuMjUgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtMTI3IG1zLCB+IDg1JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAxMiBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_add" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfYWRkOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMi40OCBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMi0xMjggbXMsIH4gODYlIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDI0IGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_iadd" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfaWFkZDoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDEuMjEgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDItMTI3IG1zLCB+IDg3JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAxMCBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_sub" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3Rfc3ViOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMi4xNCBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMi0xMjkgbXMsIH4gODclIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDE5IGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_isub" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfaXN1YjoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDEuMDEgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDItMTI2IG1zLCB+IDg1JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCA4IGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_neg" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfbmVnOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMS43NCBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMS0xMjcgbXMsIH4gODIlIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDE1IGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_mul" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfbXVsOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMS4xNiBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMi0xMjcgbXMsIH4gNzglIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDEzIGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_mul_wrong_factor" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfbXVsX3dyb25nX2ZhY3RvcjoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDEuMDQgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtMTI2IG1zLCB+IDc3JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAxMSBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_rmul" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3Rfcm11bDoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuODIgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDItMTI3IG1zLCB+IDc4JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAxMCBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_imul" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfaW11bDoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDEuNzEgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDItMTI4IG1zLCB+IDg3JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAxMyBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_imul_wrong_factor" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfaW11bF93cm9uZ19mYWN0b3I6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgxLjAyIHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAxLTEyNyBtcywgfiA3NiUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMTEgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_iter" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfaXRlcjoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuODcgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtMTI2IG1zLCB+IDczJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCA2IGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_append_incompatible" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfYXBwZW5kX2luY29tcGF0aWJsZToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDEuMTQgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtMTI1IG1zLCB+IDcxJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAyMCBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_axpy_incompatible" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfYXhweV9pbmNvbXBhdGlibGU6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICg1LjYzIHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAyLTI4MCBtcywgfiA1MCUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMjEgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_inner_incompatible" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfaW5uZXJfaW5jb21wYXRpYmxlOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMi4wMCBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMS0xMjYgbXMsIH4gNTQlIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDI1IGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_pairwise_inner_incompatible" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfcGFpcndpc2VfaW5uZXJfaW5jb21wYXRpYmxlOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMi4wOSBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMi0xMjYgbXMsIH4gNjAlIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDMxIGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_add_incompatible" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfYWRkX2luY29tcGF0aWJsZToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDEuNTggc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtMTI2IG1zLCB+IDc4JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAyOCBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_iadd_incompatible" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfaWFkZF9pbmNvbXBhdGlibGU6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgxLjUxIHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAxLTEyNiBtcywgfiA3OSUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMjcgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_sub_incompatible" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3Rfc3ViX2luY29tcGF0aWJsZToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDEuNjUgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtMTI2IG1zLCB+IDc3JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAyNiBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_isub_incompatible" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfaXN1Yl9pbmNvbXBhdGlibGU6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjgxIHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAxLTEyNSBtcywgfiA3NSUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMjAgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_wrong_ind_raises_exception" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3Rfd3JvbmdfaW5kX3JhaXNlc19leGNlcHRpb246CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjY4IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAxLTEyNSBtcywgfiA4MyUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgNyBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_scal_wrong_coefficients" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3Rfc2NhbF93cm9uZ19jb2VmZmljaWVudHM6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgxLjM4IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAyLTEyOCBtcywgfiA3NCUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMTQgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_axpy_wrong_coefficients" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfYXhweV93cm9uZ19jb2VmZmljaWVudHM6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgyLjg5IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAyLTEyOCBtcywgfiA4NyUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMjYgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/vectorarray.py::test_pickle" value="c3JjL3B5bW9ydGVzdHMvdmVjdG9yYXJyYXkucHk6OnRlc3RfcGlja2xlOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMS4zNiBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMS0xMjcgbXMsIH4gODElIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDEyIGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/algorithms/basic.py::test_almost_equal" value="c3JjL3B5bW9ydGVzdHMvYWxnb3JpdGhtcy9iYXNpYy5weTo6dGVzdF9hbG1vc3RfZXF1YWw6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjczIHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAyLTEyNiBtcywgfiA2OCUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgNSBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/algorithms/basic.py::test_almost_equal_self" value="c3JjL3B5bW9ydGVzdHMvYWxnb3JpdGhtcy9iYXNpYy5weTo6dGVzdF9hbG1vc3RfZXF1YWxfc2VsZjoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDYuMDAgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDItMTI3IG1zLCB+IDg5JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCA5MiBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/algorithms/basic.py::test_almost_equal_incompatible" value="c3JjL3B5bW9ydGVzdHMvYWxnb3JpdGhtcy9iYXNpYy5weTo6dGVzdF9hbG1vc3RfZXF1YWxfaW5jb21wYXRpYmxlOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoNC41MSBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMS0xNDQgbXMsIH4gNTclIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDI4IGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/algorithms/basic.py::test_project_array" value="c3JjL3B5bW9ydGVzdHMvYWxnb3JpdGhtcy9iYXNpYy5weTo6dGVzdF9wcm9qZWN0X2FycmF5OgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMS40NiBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogNS0yODggbXMsIH4gNjElIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDExIGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDIuNzglLCBBYm9ydGVkIHRlc3QgYmVjYXVzZSB1bmFibGUgdG8gc2F0aXNmeSA8aHlwb3RoZXNpcy5zdHJhdGVnaWVzLl9pbnRlcm5hbC5jb3JlLkNvbXBvc2l0ZVN0cmF0ZWd5IG9iamVjdCBhdCAweDdlZmY4ZmViYzczMD4uZmlsdGVyKGxhbWJkYSB4OiA8dW5rbm93bj4pCiAgICAgICogMi43OCUsIEFib3J0ZWQgdGVzdCBiZWNhdXNlIHVuYWJsZSB0byBzYXRpc2Z5IDxoeXBvdGhlc2lzLnN0cmF0ZWdpZXMuX2ludGVybmFsLmNvcmUuQ29tcG9zaXRlU3RyYXRlZ3kgb2JqZWN0IGF0IDB4N2VmZjhmZWJjY2QwPi5maWx0ZXIobGFtYmRhIHg6IDx1bmtub3duPikKICAgICAgKiAyLjc4JSwgQWJvcnRlZCB0ZXN0IGJlY2F1c2UgdW5hYmxlIHRvIHNhdGlzZnkgPGh5cG90aGVzaXMuc3RyYXRlZ2llcy5faW50ZXJuYWwuY29yZS5Db21wb3NpdGVTdHJhdGVneSBvYmplY3QgYXQgMHg3ZWZmOGZlYmNlZTA+LmZpbHRlcihsYW1iZGEgeDogPHVua25vd24+KQogICAgICAqIDIuNzglLCBBYm9ydGVkIHRlc3QgYmVjYXVzZSB1bmFibGUgdG8gc2F0aXNmeSA8aHlwb3RoZXNpcy5zdHJhdGVnaWVzLl9pbnRlcm5hbC5jb3JlLkNvbXBvc2l0ZVN0cmF0ZWd5IG9iamVjdCBhdCAweDdlZmY4ZmVmOTE2MD4uZmlsdGVyKGxhbWJkYSB4OiA8dW5rbm93bj4pCiAgICAgICogMi43OCUsIEFib3J0ZWQgdGVzdCBiZWNhdXNlIHVuYWJsZSB0byBzYXRpc2Z5IDxoeXBvdGhlc2lzLnN0cmF0ZWdpZXMuX2ludGVybmFsLmNvcmUuQ29tcG9zaXRlU3RyYXRlZ3kgb2JqZWN0IGF0IDB4N2VmZjhmZWZlZmQwPi5maWx0ZXIobGFtYmRhIHg6IDx1bmtub3duPikKICAgICAgKiAyLjc4JSwgQWJvcnRlZCB0ZXN0IGJlY2F1c2UgdW5hYmxlIHRvIHNhdGlzZnkgPGh5cG90aGVzaXMuc3RyYXRlZ2llcy5faW50ZXJuYWwuY29yZS5Db21wb3NpdGVTdHJhdGVneSBvYmplY3QgYXQgMHg3ZWZmOGZmMGI2YTA+LmZpbHRlcihsYW1iZGEgeDogPHVua25vd24+KQogICAgICAqIDIuNzglLCBBYm9ydGVkIHRlc3QgYmVjYXVzZSB1bmFibGUgdG8gc2F0aXNmeSA8aHlwb3RoZXNpcy5zdHJhdGVnaWVzLl9pbnRlcm5hbC5jb3JlLkNvbXBvc2l0ZVN0cmF0ZWd5IG9iamVjdCBhdCAweDdlZmY4ZmY2NjQ2MD4uZmlsdGVyKGxhbWJkYSB4OiA8dW5rbm93bj4pCiAgICAgICogMi43OCUsIEFib3J0ZWQgdGVzdCBiZWNhdXNlIHVuYWJsZSB0byBzYXRpc2Z5IDxoeXBvdGhlc2lzLnN0cmF0ZWdpZXMuX2ludGVybmFsLmNvcmUuQ29tcG9zaXRlU3RyYXRlZ3kgb2JqZWN0IGF0IDB4N2VmZjkwMDAxNGYwPi5maWx0ZXIobGFtYmRhIHg6IDx1bmtub3duPikKICAgICAgKiAyLjc4JSwgUmV0cmllZCBkcmF3IGZyb20gPGh5cG90aGVzaXMuc3RyYXRlZ2llcy5faW50ZXJuYWwuY29yZS5Db21wb3NpdGVTdHJhdGVneSBvYmplY3QgYXQgMHg3ZWZmOGZlYmM3MzA+LmZpbHRlcihsYW1iZGEgeDogPHVua25vd24+KSB0byBzYXRpc2Z5IGZpbHRlcgogICAgICAqIDIuNzglLCBSZXRyaWVkIGRyYXcgZnJvbSA8aHlwb3RoZXNpcy5zdHJhdGVnaWVzLl9pbnRlcm5hbC5jb3JlLkNvbXBvc2l0ZVN0cmF0ZWd5IG9iamVjdCBhdCAweDdlZmY4ZmViY2NkMD4uZmlsdGVyKGxhbWJkYSB4OiA8dW5rbm93bj4pIHRvIHNhdGlzZnkgZmlsdGVyCiAgICAgICogMi43OCUsIFJldHJpZWQgZHJhdyBmcm9tIDxoeXBvdGhlc2lzLnN0cmF0ZWdpZXMuX2ludGVybmFsLmNvcmUuQ29tcG9zaXRlU3RyYXRlZ3kgb2JqZWN0IGF0IDB4N2VmZjhmZWJjZWUwPi5maWx0ZXIobGFtYmRhIHg6IDx1bmtub3duPikgdG8gc2F0aXNmeSBmaWx0ZXIKICAgICAgKiAyLjc4JSwgUmV0cmllZCBkcmF3IGZyb20gPGh5cG90aGVzaXMuc3RyYXRlZ2llcy5faW50ZXJuYWwuY29yZS5Db21wb3NpdGVTdHJhdGVneSBvYmplY3QgYXQgMHg3ZWZmOGZlZjkxNjA+LmZpbHRlcihsYW1iZGEgeDogPHVua25vd24+KSB0byBzYXRpc2Z5IGZpbHRlcgogICAgICAqIDIuNzglLCBSZXRyaWVkIGRyYXcgZnJvbSA8aHlwb3RoZXNpcy5zdHJhdGVnaWVzLl9pbnRlcm5hbC5jb3JlLkNvbXBvc2l0ZVN0cmF0ZWd5IG9iamVjdCBhdCAweDdlZmY4ZmVmZWZkMD4uZmlsdGVyKGxhbWJkYSB4OiA8dW5rbm93bj4pIHRvIHNhdGlzZnkgZmlsdGVyCiAgICAgICogMi43OCUsIFJldHJpZWQgZHJhdyBmcm9tIDxoeXBvdGhlc2lzLnN0cmF0ZWdpZXMuX2ludGVybmFsLmNvcmUuQ29tcG9zaXRlU3RyYXRlZ3kgb2JqZWN0IGF0IDB4N2VmZjhmZjBiNmEwPi5maWx0ZXIobGFtYmRhIHg6IDx1bmtub3duPikgdG8gc2F0aXNmeSBmaWx0ZXIKICAgICAgKiAyLjc4JSwgUmV0cmllZCBkcmF3IGZyb20gPGh5cG90aGVzaXMuc3RyYXRlZ2llcy5faW50ZXJuYWwuY29yZS5Db21wb3NpdGVTdHJhdGVneSBvYmplY3QgYXQgMHg3ZWZmOGZmNjY0NjA+LmZpbHRlcihsYW1iZGEgeDogPHVua25vd24+KSB0byBzYXRpc2Z5IGZpbHRlcgogICAgICAqIDIuNzglLCBSZXRyaWVkIGRyYXcgZnJvbSA8aHlwb3RoZXNpcy5zdHJhdGVnaWVzLl9pbnRlcm5hbC5jb3JlLkNvbXBvc2l0ZVN0cmF0ZWd5IG9iamVjdCBhdCAweDdlZmY5MDAwMTRmMD4uZmlsdGVyKGxhbWJkYSB4OiA8dW5rbm93bj4pIHRvIHNhdGlzZnkgZmlsdGVyCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/algorithms/gram_schmidt.py::test_gram_schmidt" value="c3JjL3B5bW9ydGVzdHMvYWxnb3JpdGhtcy9ncmFtX3NjaG1pZHQucHk6OnRlc3RfZ3JhbV9zY2htaWR0OgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMS44NiBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMi0xMzcgbXMsIH4gNjAlIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDExIGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/algorithms/gram_schmidt.py::test_gram_schmidt_with_R" value="c3JjL3B5bW9ydGVzdHMvYWxnb3JpdGhtcy9ncmFtX3NjaG1pZHQucHk6OnRlc3RfZ3JhbV9zY2htaWR0X3dpdGhfUjoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDEuMTMgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtMTI2IG1zLCB+IDY0JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAxMCBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/algorithms/gram_schmidt.py::test_gram_schmidt_biorth" value="c3JjL3B5bW9ydGVzdHMvYWxnb3JpdGhtcy9ncmFtX3NjaG1pZHQucHk6OnRlc3RfZ3JhbV9zY2htaWR0X2Jpb3J0aDoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDMuODAgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDYtMjY3IG1zLCB+IDI1JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAzIGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDMuNTclLCBBYm9ydGVkIHRlc3QgYmVjYXVzZSB1bmFibGUgdG8gc2F0aXNmeSA8aHlwb3RoZXNpcy5zdHJhdGVnaWVzLl9pbnRlcm5hbC5jb3JlLkNvbXBvc2l0ZVN0cmF0ZWd5IG9iamVjdCBhdCAweDdlZmY4Mjg5MWRjMD4uZmlsdGVyKGxhbWJkYSB4OiA8dW5rbm93bj4pCiAgICAgICogMy41NyUsIEFib3J0ZWQgdGVzdCBiZWNhdXNlIHVuYWJsZSB0byBzYXRpc2Z5IDxoeXBvdGhlc2lzLnN0cmF0ZWdpZXMuX2ludGVybmFsLmNvcmUuQ29tcG9zaXRlU3RyYXRlZ3kgb2JqZWN0IGF0IDB4N2VmZjgyOTYwNDYwPi5maWx0ZXIobGFtYmRhIHg6IDx1bmtub3duPikKICAgICAgKiAzLjU3JSwgUmV0cmllZCBkcmF3IGZyb20gPGh5cG90aGVzaXMuc3RyYXRlZ2llcy5faW50ZXJuYWwuY29yZS5Db21wb3NpdGVTdHJhdGVneSBvYmplY3QgYXQgMHg3ZWZmODI4OTFkYzA+LmZpbHRlcihsYW1iZGEgeDogPHVua25vd24+KSB0byBzYXRpc2Z5IGZpbHRlcgogICAgICAqIDMuNTclLCBSZXRyaWVkIGRyYXcgZnJvbSA8aHlwb3RoZXNpcy5zdHJhdGVnaWVzLl9pbnRlcm5hbC5jb3JlLkNvbXBvc2l0ZVN0cmF0ZWd5IG9iamVjdCBhdCAweDdlZmY4Mjk2MDQ2MD4uZmlsdGVyKGxhbWJkYSB4OiA8dW5rbm93bj4pIHRvIHNhdGlzZnkgZmlsdGVyCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/algorithms/pod.py::test_pod" value="c3JjL3B5bW9ydGVzdHMvYWxnb3JpdGhtcy9wb2QucHk6OnRlc3RfcG9kOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMi4zMyBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMS0xMzAgbXMsIH4gNzUlIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDMwIGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/algorithms/svd_va.py::test_method_of_snapshots" value="c3JjL3B5bW9ydGVzdHMvYWxnb3JpdGhtcy9zdmRfdmEucHk6OnRlc3RfbWV0aG9kX29mX3NuYXBzaG90czoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDMuMDIgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtMTI2IG1zLCB+IDc2JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCA0MCBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_reference_element_wrong_arguments" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X3JlZmVyZW5jZV9lbGVtZW50X3dyb25nX2FyZ3VtZW50czoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuMjIgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDUtMTggbXMsIH4gODglIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDEgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_reference_element_type" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X3JlZmVyZW5jZV9lbGVtZW50X3R5cGU6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjIxIHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiA1LTE5IG1zLCB+IDkwJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAyIGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_reference_element_transitivity" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X3JlZmVyZW5jZV9lbGVtZW50X3RyYW5zaXRpdml0eToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuMjEgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDQtMTggbXMsIH4gODklIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDEgaW52YWxpZCBleGFtcGxlcwogICAgLSBFdmVudHM6CiAgICAgICogMy44NSUsIFJldHJpZWQgZHJhdyBmcm9tIGludGVnZXJzKDEsIDEwMDAwKS5maWx0ZXIobGFtYmRhIHg6IChub3QgaWRlbnRpZnlfbGVmdF9yaWdodCkgb3IgeCA+IDEpIHRvIHNhdGlzZnkgZmlsdGVyCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_embeddings_wrong_arguments" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X2VtYmVkZGluZ3Nfd3JvbmdfYXJndW1lbnRzOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMC4xOCBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogNC04IG1zLCB+IDc4JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAwIGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_embeddings_shape" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X2VtYmVkZGluZ3Nfc2hhcGU6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjI4IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAyLTMzIG1zLCB+IDYyJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAwIGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDQuMDAlLCBSZXRyaWVkIGRyYXcgZnJvbSBpbnRlZ2VycygxLCAxMDAwMCkuZmlsdGVyKGxhbWJkYSB4OiAobm90IGlkZW50aWZ5X2xlZnRfcmlnaHQpIG9yIHggPiAxKSB0byBzYXRpc2Z5IGZpbHRlcgoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_embeddings_transitivity" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X2VtYmVkZGluZ3NfdHJhbnNpdGl2aXR5OgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMTYuODAgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDctMjQxMyBtcywgfiAzMSUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgNCBpbnZhbGlkIGV4YW1wbGVzCiAgICAtIEV2ZW50czoKICAgICAgKiA2LjkwJSwgUmV0cmllZCBkcmF3IGZyb20gVHVwbGVTdHJhdGVneSgoRmxvYXRTdHJhdGVneShtaW5fdmFsdWU9NTAwMDAwMDAwMDAwLjAsIG1heF92YWx1ZT01MDAwMDAwMDAwMDAuMCwgYWxsb3dfbmFuPUZhbHNlLCBzbWFsbGVzdF9ub256ZXJvX21hZ25pdHVkZT0yLjIyNTA3Mzg1ODUwNzIwMTRlLTMwOCksIEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTYuMTAzNTE1NjI1ZS0wNSwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSkpLmZpbHRlcihfZmlsdGVyKSB0byBzYXRpc2Z5IGZpbHRlcgogICAgICAqIDMuNDUlLCBBYm9ydGVkIHRlc3QgYmVjYXVzZSB1bmFibGUgdG8gc2F0aXNmeSBUdXBsZVN0cmF0ZWd5KChGbG9hdFN0cmF0ZWd5KG1pbl92YWx1ZT02LjEwMzUxNTYyNWUtMDUsIG1heF92YWx1ZT01MDAwMDAwMDAwMDAuMCwgYWxsb3dfbmFuPUZhbHNlLCBzbWFsbGVzdF9ub256ZXJvX21hZ25pdHVkZT0yLjIyNTA3Mzg1ODUwNzIwMTRlLTMwOCksIEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTYuMTAzNTE1NjI1ZS0wNSwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSkpLmZpbHRlcihfZmlsdGVyKQogICAgICAqIDMuNDUlLCBSZXRyaWVkIGRyYXcgZnJvbSBUdXBsZVN0cmF0ZWd5KChGbG9hdFN0cmF0ZWd5KG1pbl92YWx1ZT02LjEwMzUxNTYyNWUtMDUsIG1heF92YWx1ZT01MDAwMDAwMDAwMDAuMCwgYWxsb3dfbmFuPUZhbHNlLCBzbWFsbGVzdF9ub256ZXJvX21hZ25pdHVkZT0yLjIyNTA3Mzg1ODUwNzIwMTRlLTMwOCksIEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTYuMTAzNTE1NjI1ZS0wNSwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSkpLmZpbHRlcihfZmlsdGVyKSB0byBzYXRpc2Z5IGZpbHRlcgoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_jacobian_inverse_transposed_wrong_arguments" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X2phY29iaWFuX2ludmVyc2VfdHJhbnNwb3NlZF93cm9uZ19hcmd1bWVudHM6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjE5IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiA1LTggbXMsIH4gNjklIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDAgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_jacobian_inverse_transposed_shape" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X2phY29iaWFuX2ludmVyc2VfdHJhbnNwb3NlZF9zaGFwZToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDEuNjUgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDQtMjQxIG1zLCB+IDQ2JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAyIGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDMuNzAlLCBSZXRyaWVkIGRyYXcgZnJvbSBUdXBsZVN0cmF0ZWd5KChGbG9hdFN0cmF0ZWd5KG1pbl92YWx1ZT0xLjAsIG1heF92YWx1ZT01MDAwMDAwMDAwMDAuMCwgYWxsb3dfbmFuPUZhbHNlLCBzbWFsbGVzdF9ub256ZXJvX21hZ25pdHVkZT0yLjIyNTA3Mzg1ODUwNzIwMTRlLTMwOCksIEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBtYXhfdmFsdWU9NTAwMDAwMDAwMDAwLjAsIGFsbG93X25hbj1GYWxzZSwgc21hbGxlc3Rfbm9uemVyb19tYWduaXR1ZGU9Mi4yMjUwNzM4NTg1MDcyMDE0ZS0zMDgpKSkuZmlsdGVyKF9maWx0ZXIpIHRvIHNhdGlzZnkgZmlsdGVyCiAgICAgICogMy43MCUsIFJldHJpZWQgZHJhdyBmcm9tIGludGVnZXJzKDEsIDEwMDAwKS5maWx0ZXIobGFtYmRhIHg6IChub3QgaWRlbnRpZnlfbGVmdF9yaWdodCkgb3IgeCA+IDEpIHRvIHNhdGlzZnkgZmlsdGVyCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_jacobian_inverse_transposed_values" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X2phY29iaWFuX2ludmVyc2VfdHJhbnNwb3NlZF92YWx1ZXM6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgxLjM3IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiA2LTE3MCBtcywgfiA1NiUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMSBpbnZhbGlkIGV4YW1wbGVzCiAgICAtIEV2ZW50czoKICAgICAgKiAzLjg1JSwgQWJvcnRlZCB0ZXN0IGJlY2F1c2UgdW5hYmxlIHRvIHNhdGlzZnkgVHVwbGVTdHJhdGVneSgoRmxvYXRTdHJhdGVneShtaW5fdmFsdWU9MS4wLCBtYXhfdmFsdWU9NTAwMDAwMDAwMDAwLjAsIGFsbG93X25hbj1GYWxzZSwgc21hbGxlc3Rfbm9uemVyb19tYWduaXR1ZGU9Mi4yMjUwNzM4NTg1MDcyMDE0ZS0zMDgpLCBGbG9hdFN0cmF0ZWd5KG1pbl92YWx1ZT00OTk5OTk5OTk5OTkuMCwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSkpLmZpbHRlcihfZmlsdGVyKQogICAgICAqIDMuODUlLCBSZXRyaWVkIGRyYXcgZnJvbSBUdXBsZVN0cmF0ZWd5KChGbG9hdFN0cmF0ZWd5KG1pbl92YWx1ZT0xLjAsIG1heF92YWx1ZT01MDAwMDAwMDAwMDAuMCwgYWxsb3dfbmFuPUZhbHNlLCBzbWFsbGVzdF9ub256ZXJvX21hZ25pdHVkZT0yLjIyNTA3Mzg1ODUwNzIwMTRlLTMwOCksIEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTQ5OTk5OTk5OTk5OS4wLCBtYXhfdmFsdWU9NTAwMDAwMDAwMDAwLjAsIGFsbG93X25hbj1GYWxzZSwgc21hbGxlc3Rfbm9uemVyb19tYWduaXR1ZGU9Mi4yMjUwNzM4NTg1MDcyMDE0ZS0zMDgpKSkuZmlsdGVyKF9maWx0ZXIpIHRvIHNhdGlzZnkgZmlsdGVyCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_integration_elements_wrong_arguments" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X2ludGVncmF0aW9uX2VsZW1lbnRzX3dyb25nX2FyZ3VtZW50czoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuNDAgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDMtOSBtcywgfiA3NyUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMyBpbnZhbGlkIGV4YW1wbGVzCiAgICAtIEV2ZW50czoKICAgICAgKiA3LjE0JSwgQWJvcnRlZCB0ZXN0IGJlY2F1c2UgdW5hYmxlIHRvIHNhdGlzZnkgaW50ZWdlcnMoMSwgMTAwMDApLmZpbHRlcihsYW1iZGEgeDogKG5vdCBpZGVudGlmeV9sZWZ0X3JpZ2h0KSBvciB4ID4gMSkKICAgICAgKiA3LjE0JSwgUmV0cmllZCBkcmF3IGZyb20gaW50ZWdlcnMoMSwgMTAwMDApLmZpbHRlcihsYW1iZGEgeDogKG5vdCBpZGVudGlmeV9sZWZ0X3JpZ2h0KSBvciB4ID4gMSkgdG8gc2F0aXNmeSBmaWx0ZXIKICAgICAgKiAzLjU3JSwgQWJvcnRlZCB0ZXN0IGJlY2F1c2UgdW5hYmxlIHRvIHNhdGlzZnkgVHVwbGVTdHJhdGVneSgoRmxvYXRTdHJhdGVneShtaW5fdmFsdWU9MzY2MjEwOTM3LjQ5OTg3NzksIG1heF92YWx1ZT01MDAwMDAwMDAwMDAuMCwgYWxsb3dfbmFuPUZhbHNlLCBzbWFsbGVzdF9ub256ZXJvX21hZ25pdHVkZT0yLjIyNTA3Mzg1ODUwNzIwMTRlLTMwOCksIEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTM2NjIxMDkzNy40OTk4Nzc5LCBtYXhfdmFsdWU9NTAwMDAwMDAwMDAwLjAsIGFsbG93X25hbj1GYWxzZSwgc21hbGxlc3Rfbm9uemVyb19tYWduaXR1ZGU9Mi4yMjUwNzM4NTg1MDcyMDE0ZS0zMDgpKSkuZmlsdGVyKF9maWx0ZXIpCiAgICAgICogMy41NyUsIFJldHJpZWQgZHJhdyBmcm9tIFR1cGxlU3RyYXRlZ3koKEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTM2NjIxMDkzNy40OTk4Nzc5LCBtYXhfdmFsdWU9NTAwMDAwMDAwMDAwLjAsIGFsbG93X25hbj1GYWxzZSwgc21hbGxlc3Rfbm9uemVyb19tYWduaXR1ZGU9Mi4yMjUwNzM4NTg1MDcyMDE0ZS0zMDgpLCBGbG9hdFN0cmF0ZWd5KG1pbl92YWx1ZT0zNjYyMTA5MzcuNDk5ODc3OSwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSkpLmZpbHRlcihfZmlsdGVyKSB0byBzYXRpc2Z5IGZpbHRlcgoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_integration_elements_shape" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X2ludGVncmF0aW9uX2VsZW1lbnRzX3NoYXBlOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMC4xOSBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMy0xMCBtcywgfiA3NCUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMSBpbnZhbGlkIGV4YW1wbGVzCiAgICAtIEV2ZW50czoKICAgICAgKiA3LjY5JSwgUmV0cmllZCBkcmF3IGZyb20gaW50ZWdlcnMoMSwgMTAwMDApLmZpbHRlcihsYW1iZGEgeDogKG5vdCBpZGVudGlmeV9sZWZ0X3JpZ2h0KSBvciB4ID4gMSkgdG8gc2F0aXNmeSBmaWx0ZXIKICAgICAgKiAzLjg1JSwgQWJvcnRlZCB0ZXN0IGJlY2F1c2UgdW5hYmxlIHRvIHNhdGlzZnkgaW50ZWdlcnMoMSwgMTAwMDApLmZpbHRlcihsYW1iZGEgeDogKG5vdCBpZGVudGlmeV9sZWZ0X3JpZ2h0KSBvciB4ID4gMSkKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_integration_elements_values" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X2ludGVncmF0aW9uX2VsZW1lbnRzX3ZhbHVlczoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuMjAgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDQtOCBtcywgfiA3OSUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMSBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_volumes_wrong_arguments" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X3ZvbHVtZXNfd3JvbmdfYXJndW1lbnRzOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMC4xNyBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogNC03IG1zLCB+IDczJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAwIGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_volumes_shape" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X3ZvbHVtZXNfc2hhcGU6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjE3IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiA0LTEwIG1zLCB+IDc3JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAwIGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDguMDAlLCBSZXRyaWVkIGRyYXcgZnJvbSBpbnRlZ2VycygxLCAxMDAwMCkuZmlsdGVyKGxhbWJkYSB4OiAobm90IGlkZW50aWZ5X2xlZnRfcmlnaHQpIG9yIHggPiAxKSB0byBzYXRpc2Z5IGZpbHRlcgoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_volumes_values" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X3ZvbHVtZXNfdmFsdWVzOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMC4xNyBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogNC03IG1zLCB+IDg0JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAwIGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_volumes_inverse_wrong_arguments" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X3ZvbHVtZXNfaW52ZXJzZV93cm9uZ19hcmd1bWVudHM6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjI1IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiA1LTExIG1zLCB+IDc3JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAwIGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDQuMDAlLCBSZXRyaWVkIGRyYXcgZnJvbSBUdXBsZVN0cmF0ZWd5KChGbG9hdFN0cmF0ZWd5KG1pbl92YWx1ZT0xLjAsIG1heF92YWx1ZT01MDAwMDAwMDAwMDAuMCwgYWxsb3dfbmFuPUZhbHNlLCBzbWFsbGVzdF9ub256ZXJvX21hZ25pdHVkZT0yLjIyNTA3Mzg1ODUwNzIwMTRlLTMwOCksIEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTQ5OTk5OTk5OTk5OC4wLCBtYXhfdmFsdWU9NTAwMDAwMDAwMDAwLjAsIGFsbG93X25hbj1GYWxzZSwgc21hbGxlc3Rfbm9uemVyb19tYWduaXR1ZGU9Mi4yMjUwNzM4NTg1MDcyMDE0ZS0zMDgpKSkuZmlsdGVyKF9maWx0ZXIpIHRvIHNhdGlzZnkgZmlsdGVyCiAgICAgICogNC4wMCUsIFJldHJpZWQgZHJhdyBmcm9tIFR1cGxlU3RyYXRlZ3koKEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTEuMCwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSwgRmxvYXRTdHJhdGVneShtaW5fdmFsdWU9Ni4xMDM1MTU2MjVlLTA1LCBtYXhfdmFsdWU9NTAwMDAwMDAwMDAwLjAsIGFsbG93X25hbj1GYWxzZSwgc21hbGxlc3Rfbm9uemVyb19tYWduaXR1ZGU9Mi4yMjUwNzM4NTg1MDcyMDE0ZS0zMDgpKSkuZmlsdGVyKF9maWx0ZXIpIHRvIHNhdGlzZnkgZmlsdGVyCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_volumes_inverse_shape" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X3ZvbHVtZXNfaW52ZXJzZV9zaGFwZToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuMTUgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDQtNyBtcywgfiA3OSUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMCBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_volumes_inverse_values" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X3ZvbHVtZXNfaW52ZXJzZV92YWx1ZXM6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjE3IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAzLTcgbXMsIH4gODQlIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDEgaW52YWxpZCBleGFtcGxlcwogICAgLSBFdmVudHM6CiAgICAgICogMy44NSUsIEFib3J0ZWQgdGVzdCBiZWNhdXNlIHVuYWJsZSB0byBzYXRpc2Z5IGludGVnZXJzKDEsIDEwMDAwKS5maWx0ZXIobGFtYmRhIHg6IChub3QgaWRlbnRpZnlfbGVmdF9yaWdodCkgb3IgeCA+IDEpCiAgICAgICogMy44NSUsIFJldHJpZWQgZHJhdyBmcm9tIGludGVnZXJzKDEsIDEwMDAwKS5maWx0ZXIobGFtYmRhIHg6IChub3QgaWRlbnRpZnlfbGVmdF9yaWdodCkgb3IgeCA+IDEpIHRvIHNhdGlzZnkgZmlsdGVyCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_unit_outer_normals_shape" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X3VuaXRfb3V0ZXJfbm9ybWFsc19zaGFwZToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDEuNDggc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDQtMzg2IG1zLCB+IDUzJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAwIGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDQuMDAlLCBSZXRyaWVkIGRyYXcgZnJvbSBUdXBsZVN0cmF0ZWd5KChGbG9hdFN0cmF0ZWd5KG1pbl92YWx1ZT00OTk5OTk5OTk5OTguNSwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSwgRmxvYXRTdHJhdGVneShtaW5fdmFsdWU9Ni4xMDM1MTU2MjVlLTA1LCBtYXhfdmFsdWU9NTAwMDAwMDAwMDAwLjAsIGFsbG93X25hbj1GYWxzZSwgc21hbGxlc3Rfbm9uemVyb19tYWduaXR1ZGU9Mi4yMjUwNzM4NTg1MDcyMDE0ZS0zMDgpKSkuZmlsdGVyKF9maWx0ZXIpIHRvIHNhdGlzZnkgZmlsdGVyCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_unit_outer_normals_normed" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X3VuaXRfb3V0ZXJfbm9ybWFsc19ub3JtZWQ6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgxLjQzIHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiA1LTI5NCBtcywgfiA0NiUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMCBpbnZhbGlkIGV4YW1wbGVzCiAgICAtIEV2ZW50czoKICAgICAgKiA4LjAwJSwgUmV0cmllZCBkcmF3IGZyb20gaW50ZWdlcnMoMSwgMTAwMDApLmZpbHRlcihsYW1iZGEgeDogKG5vdCBpZGVudGlmeV9sZWZ0X3JpZ2h0KSBvciB4ID4gMSkgdG8gc2F0aXNmeSBmaWx0ZXIKICAgICAgKiA0LjAwJSwgUmV0cmllZCBkcmF3IGZyb20gVHVwbGVTdHJhdGVneSgoRmxvYXRTdHJhdGVneShtaW5fdmFsdWU9Ni4xMDM1MTU2MjVlLTA1LCBtYXhfdmFsdWU9NTAwMDAwMDAwMDAwLjAsIGFsbG93X25hbj1GYWxzZSwgc21hbGxlc3Rfbm9uemVyb19tYWduaXR1ZGU9Mi4yMjUwNzM4NTg1MDcyMDE0ZS0zMDgpLCBGbG9hdFN0cmF0ZWd5KG1pbl92YWx1ZT00OTk5OTk5OTk5OTguMCwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSkpLmZpbHRlcihfZmlsdGVyKSB0byBzYXRpc2Z5IGZpbHRlcgoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_unit_outer_normals_normal" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X3VuaXRfb3V0ZXJfbm9ybWFsc19ub3JtYWw6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjk1IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiA2LTY5IG1zLCB+IDQ2JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAxIGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDMuODUlLCBBYm9ydGVkIHRlc3QgYmVjYXVzZSB1bmFibGUgdG8gc2F0aXNmeSBUdXBsZVN0cmF0ZWd5KChGbG9hdFN0cmF0ZWd5KG1pbl92YWx1ZT01MDAwMDAwMDAwMDAuMCwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSwgRmxvYXRTdHJhdGVneShtaW5fdmFsdWU9MTI0OTk5OTk5OTk5Ljk5OTg4LCBtYXhfdmFsdWU9NTAwMDAwMDAwMDAwLjAsIGFsbG93X25hbj1GYWxzZSwgc21hbGxlc3Rfbm9uemVyb19tYWduaXR1ZGU9Mi4yMjUwNzM4NTg1MDcyMDE0ZS0zMDgpKSkuZmlsdGVyKF9maWx0ZXIpCiAgICAgICogMy44NSUsIFJldHJpZWQgZHJhdyBmcm9tIFR1cGxlU3RyYXRlZ3koKEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBtYXhfdmFsdWU9NTAwMDAwMDAwMDAwLjAsIGFsbG93X25hbj1GYWxzZSwgc21hbGxlc3Rfbm9uemVyb19tYWduaXR1ZGU9Mi4yMjUwNzM4NTg1MDcyMDE0ZS0zMDgpLCBGbG9hdFN0cmF0ZWd5KG1pbl92YWx1ZT0xMjQ5OTk5OTk5OTkuOTk5ODgsIG1heF92YWx1ZT01MDAwMDAwMDAwMDAuMCwgYWxsb3dfbmFuPUZhbHNlLCBzbWFsbGVzdF9ub256ZXJvX21hZ25pdHVkZT0yLjIyNTA3Mzg1ODUwNzIwMTRlLTMwOCkpKS5maWx0ZXIoX2ZpbHRlcikgdG8gc2F0aXNmeSBmaWx0ZXIKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_unit_outer_normals_neighbours" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X3VuaXRfb3V0ZXJfbm9ybWFsc19uZWlnaGJvdXJzOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoNC41MSBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogNC0xMzgzIG1zLCB+IDQ0JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAwIGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDQuMDAlLCBSZXRyaWVkIGRyYXcgZnJvbSBUdXBsZVN0cmF0ZWd5KChGbG9hdFN0cmF0ZWd5KG1pbl92YWx1ZT02LjEwMzUxNTYyNWUtMDUsIG1heF92YWx1ZT01MDAwMDAwMDAwMDAuMCwgYWxsb3dfbmFuPUZhbHNlLCBzbWFsbGVzdF9ub256ZXJvX21hZ25pdHVkZT0yLjIyNTA3Mzg1ODUwNzIwMTRlLTMwOCksIEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBtYXhfdmFsdWU9NTAwMDAwMDAwMDAwLjAsIGFsbG93X25hbj1GYWxzZSwgc21hbGxlc3Rfbm9uemVyb19tYWduaXR1ZGU9Mi4yMjUwNzM4NTg1MDcyMDE0ZS0zMDgpKSkuZmlsdGVyKF9maWx0ZXIpIHRvIHNhdGlzZnkgZmlsdGVyCiAgICAgICogNC4wMCUsIFJldHJpZWQgZHJhdyBmcm9tIGludGVnZXJzKDEsIDEwMDAwKS5maWx0ZXIobGFtYmRhIHg6IChub3QgaWRlbnRpZnlfbGVmdF9yaWdodCkgb3IgeCA+IDEpIHRvIHNhdGlzZnkgZmlsdGVyCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_centers_wrong_arguments" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X2NlbnRlcnNfd3JvbmdfYXJndW1lbnRzOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMC4zMSBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogNC0zNiBtcywgfiA3NSUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMCBpbnZhbGlkIGV4YW1wbGVzCiAgICAtIEV2ZW50czoKICAgICAgKiA0LjAwJSwgUmV0cmllZCBkcmF3IGZyb20gVHVwbGVTdHJhdGVneSgoRmxvYXRTdHJhdGVneShtaW5fdmFsdWU9MjIxMDIwNTI3NTI1LjM4NiwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSwgRmxvYXRTdHJhdGVneShtaW5fdmFsdWU9MjIxMDIwNTI3NTI1LjM4NiwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSkpLmZpbHRlcihfZmlsdGVyKSB0byBzYXRpc2Z5IGZpbHRlcgoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_centers_shape" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X2NlbnRlcnNfc2hhcGU6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjE1IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiA0LTcgbXMsIH4gODElIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDAgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_centers_values" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X2NlbnRlcnNfdmFsdWVzOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMC4xOCBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogNC0xNSBtcywgfiA3OCUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMSBpbnZhbGlkIGV4YW1wbGVzCiAgICAtIEV2ZW50czoKICAgICAgKiA3LjY5JSwgUmV0cmllZCBkcmF3IGZyb20gaW50ZWdlcnMoMSwgMTAwMDApLmZpbHRlcihsYW1iZGEgeDogKG5vdCBpZGVudGlmeV9sZWZ0X3JpZ2h0KSBvciB4ID4gMSkgdG8gc2F0aXNmeSBmaWx0ZXIKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_diameters_wrong_arguments" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X2RpYW1ldGVyc193cm9uZ19hcmd1bWVudHM6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjQ1IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiA1LTUyIG1zLCB+IDc3JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAwIGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDguMDAlLCBSZXRyaWVkIGRyYXcgZnJvbSBpbnRlZ2VycygxLCAxMDAwMCkuZmlsdGVyKGxhbWJkYSB4OiAobm90IGlkZW50aWZ5X2xlZnRfcmlnaHQpIG9yIHggPiAxKSB0byBzYXRpc2Z5IGZpbHRlcgoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_diameters_shape" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X2RpYW1ldGVyc19zaGFwZToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDEuMzcgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDYtMTA5IG1zLCB+IDMyJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAxIGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDMuODUlLCBBYm9ydGVkIHRlc3QgYmVjYXVzZSB1bmFibGUgdG8gc2F0aXNmeSBUdXBsZVN0cmF0ZWd5KChGbG9hdFN0cmF0ZWd5KG1pbl92YWx1ZT0xLjAsIG1heF92YWx1ZT01MDAwMDAwMDAwMDAuMCwgYWxsb3dfbmFuPUZhbHNlLCBzbWFsbGVzdF9ub256ZXJvX21hZ25pdHVkZT0yLjIyNTA3Mzg1ODUwNzIwMTRlLTMwOCksIEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTEuMCwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSkpLmZpbHRlcihfZmlsdGVyKQogICAgICAqIDMuODUlLCBSZXRyaWVkIGRyYXcgZnJvbSBUdXBsZVN0cmF0ZWd5KChGbG9hdFN0cmF0ZWd5KG1pbl92YWx1ZT0xLjAsIG1heF92YWx1ZT01MDAwMDAwMDAwMDAuMCwgYWxsb3dfbmFuPUZhbHNlLCBzbWFsbGVzdF9ub256ZXJvX21hZ25pdHVkZT0yLjIyNTA3Mzg1ODUwNzIwMTRlLTMwOCksIEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTEuMCwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSkpLmZpbHRlcihfZmlsdGVyKSB0byBzYXRpc2Z5IGZpbHRlcgogICAgICAqIDMuODUlLCBSZXRyaWVkIGRyYXcgZnJvbSBUdXBsZVN0cmF0ZWd5KChGbG9hdFN0cmF0ZWd5KG1pbl92YWx1ZT01MDAwMDAwMDAwMDAuMCwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSwgRmxvYXRTdHJhdGVneShtaW5fdmFsdWU9MS4wLCBtYXhfdmFsdWU9NTAwMDAwMDAwMDAwLjAsIGFsbG93X25hbj1GYWxzZSwgc21hbGxlc3Rfbm9uemVyb19tYWduaXR1ZGU9Mi4yMjUwNzM4NTg1MDcyMDE0ZS0zMDgpKSkuZmlsdGVyKF9maWx0ZXIpIHRvIHNhdGlzZnkgZmlsdGVyCiAgICAgICogMy44NSUsIFJldHJpZWQgZHJhdyBmcm9tIGludGVnZXJzKDEsIDEwMDAwKS5maWx0ZXIobGFtYmRhIHg6IChub3QgaWRlbnRpZnlfbGVmdF9yaWdodCkgb3IgeCA+IDEpIHRvIHNhdGlzZnkgZmlsdGVyCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_diameters_non_negative" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X2RpYW1ldGVyc19ub25fbmVnYXRpdmU6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjQwIHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAzLTU2IG1zLCB+IDY1JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAxIGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDMuODUlLCBBYm9ydGVkIHRlc3QgYmVjYXVzZSB1bmFibGUgdG8gc2F0aXNmeSBpbnRlZ2VycygxLCAxMDAwMCkuZmlsdGVyKGxhbWJkYSB4OiAobm90IGlkZW50aWZ5X2xlZnRfcmlnaHQpIG9yIHggPiAxKQogICAgICAqIDMuODUlLCBSZXRyaWVkIGRyYXcgZnJvbSBpbnRlZ2VycygxLCAxMDAwMCkuZmlsdGVyKGxhbWJkYSB4OiAobm90IGlkZW50aWZ5X2xlZnRfcmlnaHQpIG9yIHggPiAxKSB0byBzYXRpc2Z5IGZpbHRlcgoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_diameters_values" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X2RpYW1ldGVyc192YWx1ZXM6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjcwIHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAxLTEwMyBtcywgfiA1MyUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMSBpbnZhbGlkIGV4YW1wbGVzCiAgICAtIEV2ZW50czoKICAgICAgKiAzLjg1JSwgUmV0cmllZCBkcmF3IGZyb20gVHVwbGVTdHJhdGVneSgoRmxvYXRTdHJhdGVneShtaW5fdmFsdWU9MTE0MzkxMDkzMDIwLjU1NTA1LCBtYXhfdmFsdWU9NTAwMDAwMDAwMDAwLjAsIGFsbG93X25hbj1GYWxzZSwgc21hbGxlc3Rfbm9uemVyb19tYWduaXR1ZGU9Mi4yMjUwNzM4NTg1MDcyMDE0ZS0zMDgpLCBGbG9hdFN0cmF0ZWd5KG1pbl92YWx1ZT01MDAwMDAwMDAwMDAuMCwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSkpLmZpbHRlcihfZmlsdGVyKSB0byBzYXRpc2Z5IGZpbHRlcgoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_quadrature_points_wrong_arguments" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X3F1YWRyYXR1cmVfcG9pbnRzX3dyb25nX2FyZ3VtZW50czoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuMjUgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDQtMTggbXMsIH4gNjclIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDEgaW52YWxpZCBleGFtcGxlcwogICAgLSBFdmVudHM6CiAgICAgICogMy44NSUsIEFib3J0ZWQgdGVzdCBiZWNhdXNlIHVuYWJsZSB0byBzYXRpc2Z5IGludGVnZXJzKDEsIDEwMDAwKS5maWx0ZXIobGFtYmRhIHg6IChub3QgaWRlbnRpZnlfbGVmdF9yaWdodCkgb3IgeCA+IDEpCiAgICAgICogMy44NSUsIFJldHJpZWQgZHJhdyBmcm9tIFR1cGxlU3RyYXRlZ3koKEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBtYXhfdmFsdWU9NTAwMDAwMDAwMDAwLjAsIGFsbG93X25hbj1GYWxzZSwgc21hbGxlc3Rfbm9uemVyb19tYWduaXR1ZGU9Mi4yMjUwNzM4NTg1MDcyMDE0ZS0zMDgpLCBGbG9hdFN0cmF0ZWd5KG1pbl92YWx1ZT02LjEwMzUxNTYyNWUtMDUsIG1heF92YWx1ZT01MDAwMDAwMDAwMDAuMCwgYWxsb3dfbmFuPUZhbHNlLCBzbWFsbGVzdF9ub256ZXJvX21hZ25pdHVkZT0yLjIyNTA3Mzg1ODUwNzIwMTRlLTMwOCkpKS5maWx0ZXIoX2ZpbHRlcikgdG8gc2F0aXNmeSBmaWx0ZXIKICAgICAgKiAzLjg1JSwgUmV0cmllZCBkcmF3IGZyb20gaW50ZWdlcnMoMSwgMTAwMDApLmZpbHRlcihsYW1iZGEgeDogKG5vdCBpZGVudGlmeV9sZWZ0X3JpZ2h0KSBvciB4ID4gMSkgdG8gc2F0aXNmeSBmaWx0ZXIKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_quadrature_points_shape" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X3F1YWRyYXR1cmVfcG9pbnRzX3NoYXBlOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMC41OSBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMy00NCBtcywgfiAzNyUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMiBpbnZhbGlkIGV4YW1wbGVzCiAgICAtIEV2ZW50czoKICAgICAgKiA3LjQxJSwgQWJvcnRlZCB0ZXN0IGJlY2F1c2UgdW5hYmxlIHRvIHNhdGlzZnkgaW50ZWdlcnMoMSwgMTAwMDApLmZpbHRlcihsYW1iZGEgeDogKG5vdCBpZGVudGlmeV9sZWZ0X3JpZ2h0KSBvciB4ID4gMSkKICAgICAgKiA3LjQxJSwgUmV0cmllZCBkcmF3IGZyb20gaW50ZWdlcnMoMSwgMTAwMDApLmZpbHRlcihsYW1iZGEgeDogKG5vdCBpZGVudGlmeV9sZWZ0X3JpZ2h0KSBvciB4ID4gMSkgdG8gc2F0aXNmeSBmaWx0ZXIKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_quadrature_points_values" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X3F1YWRyYXR1cmVfcG9pbnRzX3ZhbHVlczoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuODEgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDExLTc0IG1zLCB+IDI2JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAwIGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_bounding_box" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X2JvdW5kaW5nX2JveDoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuMjkgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDItMjIgbXMsIH4gNjElIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDEgaW52YWxpZCBleGFtcGxlcwogICAgLSBFdmVudHM6CiAgICAgICogMy44NSUsIEFib3J0ZWQgdGVzdCBiZWNhdXNlIHVuYWJsZSB0byBzYXRpc2Z5IGludGVnZXJzKDEsIDEwMDAwKS5maWx0ZXIobGFtYmRhIHg6IChub3QgaWRlbnRpZnlfbGVmdF9yaWdodCkgb3IgeCA+IDEpCiAgICAgICogMy44NSUsIFJldHJpZWQgZHJhdyBmcm9tIGludGVnZXJzKDEsIDEwMDAwKS5maWx0ZXIobGFtYmRhIHg6IChub3QgaWRlbnRpZnlfbGVmdF9yaWdodCkgb3IgeCA+IDEpIHRvIHNhdGlzZnkgZmlsdGVyCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/affine_grid.py::test_orthogonal_centers" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2FmZmluZV9ncmlkLnB5Ojp0ZXN0X29ydGhvZ29uYWxfY2VudGVyczoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDQuOTQgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDMtOTYxIG1zLCB+IDU2JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAzIGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDE0LjI5JSwgUmV0cmllZCBkcmF3IGZyb20gaW50ZWdlcnMoMSwgMTAwMDApLmZpbHRlcihsYW1iZGEgeDogKG5vdCBpZGVudGlmeV9sZWZ0X3JpZ2h0KSBvciB4ID4gMSkgdG8gc2F0aXNmeSBmaWx0ZXIKICAgICAgKiAxMC43MSUsIEFib3J0ZWQgdGVzdCBiZWNhdXNlIHVuYWJsZSB0byBzYXRpc2Z5IGludGVnZXJzKDEsIDEwMDAwKS5maWx0ZXIobGFtYmRhIHg6IChub3QgaWRlbnRpZnlfbGVmdF9yaWdodCkgb3IgeCA+IDEpCiAgICAgICogMy41NyUsIFJldHJpZWQgZHJhdyBmcm9tIFR1cGxlU3RyYXRlZ3koKEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTYuMTAzNTE1NjI1ZS0wNSwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSwgRmxvYXRTdHJhdGVneShtaW5fdmFsdWU9NTAwMDAwMDAwMDAwLjAsIG1heF92YWx1ZT01MDAwMDAwMDAwMDAuMCwgYWxsb3dfbmFuPUZhbHNlLCBzbWFsbGVzdF9ub256ZXJvX21hZ25pdHVkZT0yLjIyNTA3Mzg1ODUwNzIwMTRlLTMwOCkpKS5maWx0ZXIoX2ZpbHRlcikgdG8gc2F0aXNmeSBmaWx0ZXIKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_dim" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3RfZGltOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMC4xNCBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogNC02IG1zLCB+IDg4JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAwIGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_size" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3Rfc2l6ZToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuMTcgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDQtMTIgbXMsIH4gODUlIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDAgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_subentities_wrong_arguments" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3Rfc3ViZW50aXRpZXNfd3JvbmdfYXJndW1lbnRzOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMC4xOSBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMy05IG1zLCB+IDY4JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAxIGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDMuODUlLCBBYm9ydGVkIHRlc3QgYmVjYXVzZSB1bmFibGUgdG8gc2F0aXNmeSBpbnRlZ2VycygxLCAxMDAwMCkuZmlsdGVyKGxhbWJkYSB4OiAobm90IGlkZW50aWZ5X2xlZnRfcmlnaHQpIG9yIHggPiAxKQogICAgICAqIDMuODUlLCBSZXRyaWVkIGRyYXcgZnJvbSBpbnRlZ2VycygxLCAxMDAwMCkuZmlsdGVyKGxhbWJkYSB4OiAobm90IGlkZW50aWZ5X2xlZnRfcmlnaHQpIG9yIHggPiAxKSB0byBzYXRpc2Z5IGZpbHRlcgoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_subentities_shape" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3Rfc3ViZW50aXRpZXNfc2hhcGU6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjQzIHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAxLTc5IG1zLCB+IDgwJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAwIGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_subentities_dtype" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3Rfc3ViZW50aXRpZXNfZHR5cGU6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjI4IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAxLTI0IG1zLCB+IDgwJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAwIGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_subentities_entry_value_range" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3Rfc3ViZW50aXRpZXNfZW50cnlfdmFsdWVfcmFuZ2U6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjc3IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAxLTE2NSBtcywgfiA3MCUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMCBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_subentities_entry_values_unique" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3Rfc3ViZW50aXRpZXNfZW50cnlfdmFsdWVzX3VuaXF1ZToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuNjEgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDQtNjcgbXMsIH4gNTklIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDEgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_subentities_codim_d_codim_d" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3Rfc3ViZW50aXRpZXNfY29kaW1fZF9jb2RpbV9kOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMC40NiBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogNS03MyBtcywgfiA3OCUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMCBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_subentities_transitivity" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3Rfc3ViZW50aXRpZXNfdHJhbnNpdGl2aXR5OgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMC4yNCBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMC0xOSBtcywgfiA3OSUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMCBpbnZhbGlkIGV4YW1wbGVzCiAgICAtIEV2ZW50czoKICAgICAgKiA4LjAwJSwgUmV0cmllZCBkcmF3IGZyb20gVHVwbGVTdHJhdGVneSgoRmxvYXRTdHJhdGVneShtaW5fdmFsdWU9NDk5OTk5OTk5OTk5LjY2NjcsIG1heF92YWx1ZT01MDAwMDAwMDAwMDAuMCwgYWxsb3dfbmFuPUZhbHNlLCBzbWFsbGVzdF9ub256ZXJvX21hZ25pdHVkZT0yLjIyNTA3Mzg1ODUwNzIwMTRlLTMwOCksIEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTc1MTg5MzAxODM0LjMwNTg1LCBtYXhfdmFsdWU9NTAwMDAwMDAwMDAwLjAsIGFsbG93X25hbj1GYWxzZSwgc21hbGxlc3Rfbm9uemVyb19tYWduaXR1ZGU9Mi4yMjUwNzM4NTg1MDcyMDE0ZS0zMDgpKSkuZmlsdGVyKF9maWx0ZXIpIHRvIHNhdGlzZnkgZmlsdGVyCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_superentities_wrong_arguments" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3Rfc3VwZXJlbnRpdGllc193cm9uZ19hcmd1bWVudHM6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjI2IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiA0LTE5IG1zLCB+IDcxJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCA0IGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDYuOTAlLCBBYm9ydGVkIHRlc3QgYmVjYXVzZSB1bmFibGUgdG8gc2F0aXNmeSBpbnRlZ2VycygxLCAxMDAwMCkuZmlsdGVyKGxhbWJkYSB4OiAobm90IGlkZW50aWZ5X2xlZnRfcmlnaHQpIG9yIHggPiAxKQogICAgICAqIDYuOTAlLCBSZXRyaWVkIGRyYXcgZnJvbSBpbnRlZ2VycygxLCAxMDAwMCkuZmlsdGVyKGxhbWJkYSB4OiAobm90IGlkZW50aWZ5X2xlZnRfcmlnaHQpIG9yIHggPiAxKSB0byBzYXRpc2Z5IGZpbHRlcgoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_superentities_shape" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3Rfc3VwZXJlbnRpdGllc19zaGFwZToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuMjUgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtMjEgbXMsIH4gNzQlIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDMgaW52YWxpZCBleGFtcGxlcwogICAgLSBFdmVudHM6CiAgICAgICogMTAuNzElLCBBYm9ydGVkIHRlc3QgYmVjYXVzZSB1bmFibGUgdG8gc2F0aXNmeSBUdXBsZVN0cmF0ZWd5KChGbG9hdFN0cmF0ZWd5KG1pbl92YWx1ZT01MDAwMDAwMDAwMDAuMCwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSwgRmxvYXRTdHJhdGVneShtaW5fdmFsdWU9MS4wLCBtYXhfdmFsdWU9NTAwMDAwMDAwMDAwLjAsIGFsbG93X25hbj1GYWxzZSwgc21hbGxlc3Rfbm9uemVyb19tYWduaXR1ZGU9Mi4yMjUwNzM4NTg1MDcyMDE0ZS0zMDgpKSkuZmlsdGVyKF9maWx0ZXIpCiAgICAgICogMTAuNzElLCBSZXRyaWVkIGRyYXcgZnJvbSBUdXBsZVN0cmF0ZWd5KChGbG9hdFN0cmF0ZWd5KG1pbl92YWx1ZT01MDAwMDAwMDAwMDAuMCwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSwgRmxvYXRTdHJhdGVneShtaW5fdmFsdWU9MS4wLCBtYXhfdmFsdWU9NTAwMDAwMDAwMDAwLjAsIGFsbG93X25hbj1GYWxzZSwgc21hbGxlc3Rfbm9uemVyb19tYWduaXR1ZGU9Mi4yMjUwNzM4NTg1MDcyMDE0ZS0zMDgpKSkuZmlsdGVyKF9maWx0ZXIpIHRvIHNhdGlzZnkgZmlsdGVyCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_superentities_dtype" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3Rfc3VwZXJlbnRpdGllc19kdHlwZToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuMjQgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDQtMTkgbXMsIH4gODIlIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDIgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_superentities_entry_value_range" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3Rfc3VwZXJlbnRpdGllc19lbnRyeV92YWx1ZV9yYW5nZToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuMTcgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtNyBtcywgfiA3NyUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMCBpbnZhbGlkIGV4YW1wbGVzCiAgICAtIEV2ZW50czoKICAgICAgKiA0LjAwJSwgUmV0cmllZCBkcmF3IGZyb20gaW50ZWdlcnMoMSwgMTAwMDApLmZpbHRlcihsYW1iZGEgeDogKG5vdCBpZGVudGlmeV9sZWZ0X3JpZ2h0KSBvciB4ID4gMSkgdG8gc2F0aXNmeSBmaWx0ZXIKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_superentities_entry_values_unique" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3Rfc3VwZXJlbnRpdGllc19lbnRyeV92YWx1ZXNfdW5pcXVlOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMC4yNCBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMS0xNiBtcywgfiA3NCUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMSBpbnZhbGlkIGV4YW1wbGVzCiAgICAtIEV2ZW50czoKICAgICAgKiAzLjg1JSwgQWJvcnRlZCB0ZXN0IGJlY2F1c2UgdW5hYmxlIHRvIHNhdGlzZnkgaW50ZWdlcnMoMSwgMTAwMDApLmZpbHRlcihsYW1iZGEgeDogKG5vdCBpZGVudGlmeV9sZWZ0X3JpZ2h0KSBvciB4ID4gMSkKICAgICAgKiAzLjg1JSwgUmV0cmllZCBkcmF3IGZyb20gaW50ZWdlcnMoMSwgMTAwMDApLmZpbHRlcihsYW1iZGEgeDogKG5vdCBpZGVudGlmeV9sZWZ0X3JpZ2h0KSBvciB4ID4gMSkgdG8gc2F0aXNmeSBmaWx0ZXIKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_superentities_entries_sorted" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3Rfc3VwZXJlbnRpdGllc19lbnRyaWVzX3NvcnRlZDoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuMzMgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtMzIgbXMsIH4gNjElIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDAgaW52YWxpZCBleGFtcGxlcwogICAgLSBFdmVudHM6CiAgICAgICogNC4wMCUsIFJldHJpZWQgZHJhdyBmcm9tIGludGVnZXJzKDEsIDEwMDAwKS5maWx0ZXIobGFtYmRhIHg6IChub3QgaWRlbnRpZnlfbGVmdF9yaWdodCkgb3IgeCA+IDEpIHRvIHNhdGlzZnkgZmlsdGVyCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_superentities_codim_d_codim_d" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3Rfc3VwZXJlbnRpdGllc19jb2RpbV9kX2NvZGltX2Q6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjI5IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAxLTI0IG1zLCB+IDcwJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAxIGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDMuODUlLCBBYm9ydGVkIHRlc3QgYmVjYXVzZSB1bmFibGUgdG8gc2F0aXNmeSBpbnRlZ2VycygxLCAxMDAwMCkuZmlsdGVyKGxhbWJkYSB4OiAobm90IGlkZW50aWZ5X2xlZnRfcmlnaHQpIG9yIHggPiAxKQogICAgICAqIDMuODUlLCBSZXRyaWVkIGRyYXcgZnJvbSBpbnRlZ2VycygxLCAxMDAwMCkuZmlsdGVyKGxhbWJkYSB4OiAobm90IGlkZW50aWZ5X2xlZnRfcmlnaHQpIG9yIHggPiAxKSB0byBzYXRpc2Z5IGZpbHRlcgoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_superentities_each_entry_superentity" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3Rfc3VwZXJlbnRpdGllc19lYWNoX2VudHJ5X3N1cGVyZW50aXR5OgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMC4yNiBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMS0yNiBtcywgfiA1OSUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMCBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_superentities_each_superentity_has_entry" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3Rfc3VwZXJlbnRpdGllc19lYWNoX3N1cGVyZW50aXR5X2hhc19lbnRyeToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuNTIgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtNDQgbXMsIH4gNTIlIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDEgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_superentity_indices_wrong_arguments" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3Rfc3VwZXJlbnRpdHlfaW5kaWNlc193cm9uZ19hcmd1bWVudHM6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjIxIHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiA0LTkgbXMsIH4gNTklIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDEgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_superentity_indices_shape" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3Rfc3VwZXJlbnRpdHlfaW5kaWNlc19zaGFwZToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuMjAgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtOSBtcywgfiA4MCUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMCBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_superentity_indices_dtype" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3Rfc3VwZXJlbnRpdHlfaW5kaWNlc19kdHlwZToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuMzAgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtMzMgbXMsIH4gNzclIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDAgaW52YWxpZCBleGFtcGxlcwogICAgLSBFdmVudHM6CiAgICAgICogNC4wMCUsIFJldHJpZWQgZHJhdyBmcm9tIFR1cGxlU3RyYXRlZ3koKEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTEwOTMzMTgwMTMwNi4wMjgwMiwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSwgRmxvYXRTdHJhdGVneShtaW5fdmFsdWU9NDk5OTk5OTk5OTk5Ljk5OTk0LCBtYXhfdmFsdWU9NTAwMDAwMDAwMDAwLjAsIGFsbG93X25hbj1GYWxzZSwgc21hbGxlc3Rfbm9uemVyb19tYWduaXR1ZGU9Mi4yMjUwNzM4NTg1MDcyMDE0ZS0zMDgpKSkuZmlsdGVyKF9maWx0ZXIpIHRvIHNhdGlzZnkgZmlsdGVyCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_superentity_indices_valid_entries" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3Rfc3VwZXJlbnRpdHlfaW5kaWNlc192YWxpZF9lbnRyaWVzOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMC4zNyBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMS00NSBtcywgfiA2OCUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMCBpbnZhbGlkIGV4YW1wbGVzCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_neighbours_wrong_arguments" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3RfbmVpZ2hib3Vyc193cm9uZ19hcmd1bWVudHM6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjI5IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiA4LTExIG1zLCB+IDU2JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAxIGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_neighbours_shape" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3RfbmVpZ2hib3Vyc19zaGFwZToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuMzUgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtMzQgbXMsIH4gNzglIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDEgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_neighbours_dtype" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3RfbmVpZ2hib3Vyc19kdHlwZToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuMjEgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDMtMTMgbXMsIH4gODclIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDEgaW52YWxpZCBleGFtcGxlcwogICAgLSBFdmVudHM6CiAgICAgICogMy44NSUsIEFib3J0ZWQgdGVzdCBiZWNhdXNlIHVuYWJsZSB0byBzYXRpc2Z5IGludGVnZXJzKDEsIDEwMDAwKS5maWx0ZXIobGFtYmRhIHg6IChub3QgaWRlbnRpZnlfbGVmdF9yaWdodCkgb3IgeCA+IDEpCiAgICAgICogMy44NSUsIFJldHJpZWQgZHJhdyBmcm9tIFR1cGxlU3RyYXRlZ3koKEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTEuMCwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSwgRmxvYXRTdHJhdGVneShtaW5fdmFsdWU9NTAwMDAwMDAwMDAwLjAsIG1heF92YWx1ZT01MDAwMDAwMDAwMDAuMCwgYWxsb3dfbmFuPUZhbHNlLCBzbWFsbGVzdF9ub256ZXJvX21hZ25pdHVkZT0yLjIyNTA3Mzg1ODUwNzIwMTRlLTMwOCkpKS5maWx0ZXIoX2ZpbHRlcikgdG8gc2F0aXNmeSBmaWx0ZXIKICAgICAgKiAzLjg1JSwgUmV0cmllZCBkcmF3IGZyb20gaW50ZWdlcnMoMSwgMTAwMDApLmZpbHRlcihsYW1iZGEgeDogKG5vdCBpZGVudGlmeV9sZWZ0X3JpZ2h0KSBvciB4ID4gMSkgdG8gc2F0aXNmeSBmaWx0ZXIKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_neighbours_entry_value_range" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3RfbmVpZ2hib3Vyc19lbnRyeV92YWx1ZV9yYW5nZToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuNzMgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtMTk0IG1zLCB+IDcwJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAwIGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDQuMDAlLCBSZXRyaWVkIGRyYXcgZnJvbSBUdXBsZVN0cmF0ZWd5KChGbG9hdFN0cmF0ZWd5KG1pbl92YWx1ZT0xLjAsIG1heF92YWx1ZT01MDAwMDAwMDAwMDAuMCwgYWxsb3dfbmFuPUZhbHNlLCBzbWFsbGVzdF9ub256ZXJvX21hZ25pdHVkZT0yLjIyNTA3Mzg1ODUwNzIwMTRlLTMwOCksIEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTQ5OTk5OTk5OTk5OS41LCBtYXhfdmFsdWU9NTAwMDAwMDAwMDAwLjAsIGFsbG93X25hbj1GYWxzZSwgc21hbGxlc3Rfbm9uemVyb19tYWduaXR1ZGU9Mi4yMjUwNzM4NTg1MDcyMDE0ZS0zMDgpKSkuZmlsdGVyKF9maWx0ZXIpIHRvIHNhdGlzZnkgZmlsdGVyCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_neighbours_entry_values_unique" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3RfbmVpZ2hib3Vyc19lbnRyeV92YWx1ZXNfdW5pcXVlOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMC42NiBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMS0xMDAgbXMsIH4gNjYlIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDAgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_neighbours_each_entry_neighbour" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3RfbmVpZ2hib3Vyc19lYWNoX2VudHJ5X25laWdoYm91cjoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuMjUgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDQtMTUgbXMsIH4gNzIlIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDEgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_neighbours_each_neighbour_has_entry" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3RfbmVpZ2hib3Vyc19lYWNoX25laWdoYm91cl9oYXNfZW50cnk6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjg0IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAxLTE0NyBtcywgfiA1MSUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMCBpbnZhbGlkIGV4YW1wbGVzCiAgICAtIEV2ZW50czoKICAgICAgKiA0LjAwJSwgUmV0cmllZCBkcmF3IGZyb20gaW50ZWdlcnMoMSwgMTAwMDApLmZpbHRlcihsYW1iZGEgeDogKG5vdCBpZGVudGlmeV9sZWZ0X3JpZ2h0KSBvciB4ID4gMSkgdG8gc2F0aXNmeSBmaWx0ZXIKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_neighbours_not_neighbour_of_itself" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3RfbmVpZ2hib3Vyc19ub3RfbmVpZ2hib3VyX29mX2l0c2VsZjoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuNDcgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDEtMTYgbXMsIH4gNzYlIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDEgaW52YWxpZCBleGFtcGxlcwogICAgLSBFdmVudHM6CiAgICAgICogMy44NSUsIEFib3J0ZWQgdGVzdCBiZWNhdXNlIHVuYWJsZSB0byBzYXRpc2Z5IGludGVnZXJzKDEsIDEwMDAwKS5maWx0ZXIobGFtYmRhIHg6IChub3QgaWRlbnRpZnlfbGVmdF9yaWdodCkgb3IgeCA+IDEpCiAgICAgICogMy44NSUsIFJldHJpZWQgZHJhdyBmcm9tIGludGVnZXJzKDEsIDEwMDAwKS5maWx0ZXIobGFtYmRhIHg6IChub3QgaWRlbnRpZnlfbGVmdF9yaWdodCkgb3IgeCA+IDEpIHRvIHNhdGlzZnkgZmlsdGVyCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_boundary_mask_wrong_arguments" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3RfYm91bmRhcnlfbWFza193cm9uZ19hcmd1bWVudHM6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjIxIHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiA0LTEzIG1zLCB+IDgzJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAxIGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDMuODUlLCBSZXRyaWVkIGRyYXcgZnJvbSBUdXBsZVN0cmF0ZWd5KChGbG9hdFN0cmF0ZWd5KG1pbl92YWx1ZT02LjEwMzUxNTYyNWUtMDUsIG1heF92YWx1ZT01MDAwMDAwMDAwMDAuMCwgYWxsb3dfbmFuPUZhbHNlLCBzbWFsbGVzdF9ub256ZXJvX21hZ25pdHVkZT0yLjIyNTA3Mzg1ODUwNzIwMTRlLTMwOCksIEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTQ5OTk5OTk5OTk5OS45OTk5NCwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSkpLmZpbHRlcihfZmlsdGVyKSB0byBzYXRpc2Z5IGZpbHRlcgoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_boundary_mask_shape" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3RfYm91bmRhcnlfbWFza19zaGFwZToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuNjQgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDUtOTggbXMsIH4gNzIlIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDAgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_boundary_mask_dtype" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3RfYm91bmRhcnlfbWFza19kdHlwZToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuMjIgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDUtMTUgbXMsIH4gNjQlIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDAgaW52YWxpZCBleGFtcGxlcwogICAgLSBFdmVudHM6CiAgICAgICogNC4wMCUsIFJldHJpZWQgZHJhdyBmcm9tIGludGVnZXJzKDEsIDEwMDAwKS5maWx0ZXIobGFtYmRhIHg6IChub3QgaWRlbnRpZnlfbGVmdF9yaWdodCkgb3IgeCA+IDEpIHRvIHNhdGlzZnkgZmlsdGVyCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_boundary_mask_entries_codim1" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3RfYm91bmRhcnlfbWFza19lbnRyaWVzX2NvZGltMToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuMzcgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDMtMzYgbXMsIH4gNjElIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDQgaW52YWxpZCBleGFtcGxlcwogICAgLSBFdmVudHM6CiAgICAgICogMTAuMzQlLCBBYm9ydGVkIHRlc3QgYmVjYXVzZSB1bmFibGUgdG8gc2F0aXNmeSBpbnRlZ2VycygxLCAxMDAwMCkuZmlsdGVyKGxhbWJkYSB4OiAobm90IGlkZW50aWZ5X2xlZnRfcmlnaHQpIG9yIHggPiAxKQogICAgICAqIDEwLjM0JSwgUmV0cmllZCBkcmF3IGZyb20gaW50ZWdlcnMoMSwgMTAwMDApLmZpbHRlcihsYW1iZGEgeDogKG5vdCBpZGVudGlmeV9sZWZ0X3JpZ2h0KSBvciB4ID4gMSkgdG8gc2F0aXNmeSBmaWx0ZXIKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_boundary_mask_entries_codim0" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3RfYm91bmRhcnlfbWFza19lbnRyaWVzX2NvZGltMDoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuNDEgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDUtMzMgbXMsIH4gNTIlIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDAgaW52YWxpZCBleGFtcGxlcwoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_boundary_mask_entries_codim_d" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3RfYm91bmRhcnlfbWFza19lbnRyaWVzX2NvZGltX2Q6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjQxIHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiA0LTMyIG1zLCB+IDUyJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAwIGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDQuMDAlLCBSZXRyaWVkIGRyYXcgZnJvbSBUdXBsZVN0cmF0ZWd5KChGbG9hdFN0cmF0ZWd5KG1pbl92YWx1ZT0xMjQ5OTk5OTk5OTkuOTk5ODgsIG1heF92YWx1ZT01MDAwMDAwMDAwMDAuMCwgYWxsb3dfbmFuPUZhbHNlLCBzbWFsbGVzdF9ub256ZXJvX21hZ25pdHVkZT0yLjIyNTA3Mzg1ODUwNzIwMTRlLTMwOCksIEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBtYXhfdmFsdWU9NTAwMDAwMDAwMDAwLjAsIGFsbG93X25hbj1GYWxzZSwgc21hbGxlc3Rfbm9uemVyb19tYWduaXR1ZGU9Mi4yMjUwNzM4NTg1MDcyMDE0ZS0zMDgpKSkuZmlsdGVyKF9maWx0ZXIpIHRvIHNhdGlzZnkgZmlsdGVyCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_boundaries_wrong_arguments" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3RfYm91bmRhcmllc193cm9uZ19hcmd1bWVudHM6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjIzIHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiA1LTExIG1zLCB+IDc1JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAwIGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_boundaries_shape" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3RfYm91bmRhcmllc19zaGFwZToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuMjYgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDYtMjAgbXMsIH4gNzUlIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDEgaW52YWxpZCBleGFtcGxlcwogICAgLSBFdmVudHM6CiAgICAgICogMy44NSUsIFJldHJpZWQgZHJhdyBmcm9tIFR1cGxlU3RyYXRlZ3koKEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBtYXhfdmFsdWU9NTAwMDAwMDAwMDAwLjAsIGFsbG93X25hbj1GYWxzZSwgc21hbGxlc3Rfbm9uemVyb19tYWduaXR1ZGU9Mi4yMjUwNzM4NTg1MDcyMDE0ZS0zMDgpLCBGbG9hdFN0cmF0ZWd5KG1pbl92YWx1ZT0zMTU2NDU5OTA0Ny4wNDQwMDYsIG1heF92YWx1ZT01MDAwMDAwMDAwMDAuMCwgYWxsb3dfbmFuPUZhbHNlLCBzbWFsbGVzdF9ub256ZXJvX21hZ25pdHVkZT0yLjIyNTA3Mzg1ODUwNzIwMTRlLTMwOCkpKS5maWx0ZXIoX2ZpbHRlcikgdG8gc2F0aXNmeSBmaWx0ZXIKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_boundaries_dtype" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3RfYm91bmRhcmllc19kdHlwZToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuMzEgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDYtMjIgbXMsIH4gNTYlIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDAgaW52YWxpZCBleGFtcGxlcwogICAgLSBFdmVudHM6CiAgICAgICogNC4wMCUsIFJldHJpZWQgZHJhdyBmcm9tIFR1cGxlU3RyYXRlZ3koKEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTAuMCwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSwgRmxvYXRTdHJhdGVneShtaW5fdmFsdWU9MC4wLCBtYXhfdmFsdWU9NTAwMDAwMDAwMDAwLjAsIGFsbG93X25hbj1GYWxzZSwgc21hbGxlc3Rfbm9uemVyb19tYWduaXR1ZGU9Mi4yMjUwNzM4NTg1MDcyMDE0ZS0zMDgpKSkuZmlsdGVyKF9maWx0ZXIpIHRvIHNhdGlzZnkgZmlsdGVyCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_boundaries_entry_value_range" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3RfYm91bmRhcmllc19lbnRyeV92YWx1ZV9yYW5nZToKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuMjIgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDYtMTIgbXMsIH4gNzElIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDAgaW52YWxpZCBleGFtcGxlcwogICAgLSBFdmVudHM6CiAgICAgICogNC4wMCUsIFJldHJpZWQgZHJhdyBmcm9tIFR1cGxlU3RyYXRlZ3koKEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTEuMCwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSwgRmxvYXRTdHJhdGVneShtaW5fdmFsdWU9NTAwMDAwMDAwMDAwLjAsIG1heF92YWx1ZT01MDAwMDAwMDAwMDAuMCwgYWxsb3dfbmFuPUZhbHNlLCBzbWFsbGVzdF9ub256ZXJvX21hZ25pdHVkZT0yLjIyNTA3Mzg1ODUwNzIwMTRlLTMwOCkpKS5maWx0ZXIoX2ZpbHRlcikgdG8gc2F0aXNmeSBmaWx0ZXIKICAgICAgKiA0LjAwJSwgUmV0cmllZCBkcmF3IGZyb20gVHVwbGVTdHJhdGVneSgoRmxvYXRTdHJhdGVneShtaW5fdmFsdWU9NzYwMDU0NTgxNzkuODY4NTksIG1heF92YWx1ZT01MDAwMDAwMDAwMDAuMCwgYWxsb3dfbmFuPUZhbHNlLCBzbWFsbGVzdF9ub256ZXJvX21hZ25pdHVkZT0yLjIyNTA3Mzg1ODUwNzIwMTRlLTMwOCksIEZsb2F0U3RyYXRlZ3kobWluX3ZhbHVlPTAuMCwgbWF4X3ZhbHVlPTUwMDAwMDAwMDAwMC4wLCBhbGxvd19uYW49RmFsc2UsIHNtYWxsZXN0X25vbnplcm9fbWFnbml0dWRlPTIuMjI1MDczODU4NTA3MjAxNGUtMzA4KSkpLmZpbHRlcihfZmlsdGVyKSB0byBzYXRpc2Z5IGZpbHRlcgoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_boundaries_entries" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3RfYm91bmRhcmllc19lbnRyaWVzOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMC4zNyBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogNC0zNiBtcywgfiA3MyUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMCBpbnZhbGlkIGV4YW1wbGVzCiAgICAtIEV2ZW50czoKICAgICAgKiA0LjAwJSwgUmV0cmllZCBkcmF3IGZyb20gaW50ZWdlcnMoMSwgMTAwMDApLmZpbHRlcihsYW1iZGEgeDogKG5vdCBpZGVudGlmeV9sZWZ0X3JpZ2h0KSBvciB4ID4gMSkgdG8gc2F0aXNmeSBmaWx0ZXIKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_pickle" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3RfcGlja2xlOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMC4xNyBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogNC04IG1zLCB+IDc3JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAwIGludmFsaWQgZXhhbXBsZXMKCiAgLSBTdG9wcGVkIGJlY2F1c2Ugc2V0dGluZ3MubWF4X2V4YW1wbGVzPTI1" /><property name="hypothesis-statistics-src/pymortests/discretizers/grid.py::test_visualize" value="c3JjL3B5bW9ydGVzdHMvZGlzY3JldGl6ZXJzL2dyaWQucHk6OnRlc3RfdmlzdWFsaXplOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoOS45NiBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogNzQtMTAwNiBtcywgfiAzJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAwIGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDguMDAlLCBSZXRyaWVkIGRyYXcgZnJvbSBpbnRlZ2VycygxLCAxMDAwMCkuZmlsdGVyKGxhbWJkYSB4OiAobm90IGlkZW50aWZ5X2xlZnRfcmlnaHQpIG9yIHggPiAxKSB0byBzYXRpc2Z5IGZpbHRlcgoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/parameters/parameters.py::test_parse_mu" value="c3JjL3B5bW9ydGVzdHMvcGFyYW1ldGVycy9wYXJhbWV0ZXJzLnB5Ojp0ZXN0X3BhcnNlX211OgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMC4wNiBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMC0xIG1zLCB+IDY2JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCA0IGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDQ4LjI4JSwgUmV0cmllZCBkcmF3IGZyb20gbGlzdHModHVwbGVzKHNhbXBsZWRfZnJvbShbJ3QnLCAnZm9vJywgJ2JhciddKSwgc2FtcGxlZF9mcm9tKFthcnJheShbMS5dKSwgYXJyYXkoWyAxLiwgMzIuLCAgMy5dKSwgRXhwcmVzc2lvbkZ1bmN0aW9uKCd4KzEnKSwgRXhwcmVzc2lvbkZ1bmN0aW9uKCdbMS4sIDBdICogeCArIFswLCAxLl0gKiB4KioyJyksIENvbnN0YW50RnVuY3Rpb24odmFsdWU9YXJyYXkoWzEuLCAyLiwgMy5dKSldKSksIHVuaXF1ZV9ieT1vcGVyYXRvci5pdGVtZ2V0dGVyKDApKS5tYXAoZGljdCkuZmlsdGVyKGxhbWJkYSBtdTogPHVua25vd24+KSB0byBzYXRpc2Z5IGZpbHRlcgogICAgICAqIDMuNDUlLCBBYm9ydGVkIHRlc3QgYmVjYXVzZSB1bmFibGUgdG8gc2F0aXNmeSBsaXN0cyh0dXBsZXMoc2FtcGxlZF9mcm9tKFsndCcsICdmb28nLCAnYmFyJ10pLCBzYW1wbGVkX2Zyb20oW2FycmF5KFsxLl0pLCBhcnJheShbIDEuLCAzMi4sICAzLl0pLCBFeHByZXNzaW9uRnVuY3Rpb24oJ3grMScpLCBFeHByZXNzaW9uRnVuY3Rpb24oJ1sxLiwgMF0gKiB4ICsgWzAsIDEuXSAqIHgqKjInKSwgQ29uc3RhbnRGdW5jdGlvbih2YWx1ZT1hcnJheShbMS4sIDIuLCAzLl0pKV0pKSwgdW5pcXVlX2J5PW9wZXJhdG9yLml0ZW1nZXR0ZXIoMCkpLm1hcChkaWN0KS5maWx0ZXIobGFtYmRhIG11OiA8dW5rbm93bj4pCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/parameters/parameters.py::test_mu_parameters" value="c3JjL3B5bW9ydGVzdHMvcGFyYW1ldGVycy9wYXJhbWV0ZXJzLnB5Ojp0ZXN0X211X3BhcmFtZXRlcnM6CgogIC0gZHVyaW5nIGdlbmVyYXRlIHBoYXNlICgwLjA1IHNlY29uZHMpOgogICAgLSBUeXBpY2FsIHJ1bnRpbWVzOiAwLTEgbXMsIH4gNjUlIGluIGRhdGEgZ2VuZXJhdGlvbgogICAgLSAyNSBwYXNzaW5nIGV4YW1wbGVzLCAwIGZhaWxpbmcgZXhhbXBsZXMsIDEgaW52YWxpZCBleGFtcGxlcwogICAgLSBFdmVudHM6CiAgICAgICogNDIuMzElLCBSZXRyaWVkIGRyYXcgZnJvbSBsaXN0cyh0dXBsZXMoc2FtcGxlZF9mcm9tKFsndCcsICdmb28nLCAnYmFyJ10pLCBzYW1wbGVkX2Zyb20oW2FycmF5KFsxLl0pLCBhcnJheShbIDEuLCAzMi4sICAzLl0pLCBFeHByZXNzaW9uRnVuY3Rpb24oJ3grMScpLCBFeHByZXNzaW9uRnVuY3Rpb24oJ1sxLiwgMF0gKiB4ICsgWzAsIDEuXSAqIHgqKjInKSwgQ29uc3RhbnRGdW5jdGlvbih2YWx1ZT1hcnJheShbMS4sIDIuLCAzLl0pKV0pKSwgdW5pcXVlX2J5PW9wZXJhdG9yLml0ZW1nZXR0ZXIoMCkpLm1hcChkaWN0KS5maWx0ZXIobGFtYmRhIG11OiA8dW5rbm93bj4pIHRvIHNhdGlzZnkgZmlsdGVyCgogIC0gU3RvcHBlZCBiZWNhdXNlIHNldHRpbmdzLm1heF9leGFtcGxlcz0yNQ==" /><property name="hypothesis-statistics-src/pymortests/parameters/parameters.py::test_mu_values" value="c3JjL3B5bW9ydGVzdHMvcGFyYW1ldGVycy9wYXJhbWV0ZXJzLnB5Ojp0ZXN0X211X3ZhbHVlczoKCiAgLSBkdXJpbmcgZ2VuZXJhdGUgcGhhc2UgKDAuMDUgc2Vjb25kcyk6CiAgICAtIFR5cGljYWwgcnVudGltZXM6IDAtMiBtcywgfiA2NyUgaW4gZGF0YSBnZW5lcmF0aW9uCiAgICAtIDI1IHBhc3NpbmcgZXhhbXBsZXMsIDAgZmFpbGluZyBleGFtcGxlcywgMiBpbnZhbGlkIGV4YW1wbGVzCiAgICAtIEV2ZW50czoKICAgICAgKiA0MC43NCUsIFJldHJpZWQgZHJhdyBmcm9tIGxpc3RzKHR1cGxlcyhzYW1wbGVkX2Zyb20oWyd0JywgJ2ZvbycsICdiYXInXSksIHNhbXBsZWRfZnJvbShbYXJyYXkoWzEuXSksIGFycmF5KFsgMS4sIDMyLiwgIDMuXSksIEV4cHJlc3Npb25GdW5jdGlvbigneCsxJyksIEV4cHJlc3Npb25GdW5jdGlvbignWzEuLCAwXSAqIHggKyBbMCwgMS5dICogeCoqMicpLCBDb25zdGFudEZ1bmN0aW9uKHZhbHVlPWFycmF5KFsxLiwgMi4sIDMuXSkpXSkpLCB1bmlxdWVfYnk9b3BlcmF0b3IuaXRlbWdldHRlcigwKSkubWFwKGRpY3QpLmZpbHRlcihsYW1iZGEgbXU6IDx1bmtub3duPikgdG8gc2F0aXNmeSBmaWx0ZXIKICAgICAgKiAzLjcwJSwgQWJvcnRlZCB0ZXN0IGJlY2F1c2UgdW5hYmxlIHRvIHNhdGlzZnkgbGlzdHModHVwbGVzKHNhbXBsZWRfZnJvbShbJ3QnLCAnZm9vJywgJ2JhciddKSwgc2FtcGxlZF9mcm9tKFthcnJheShbMS5dKSwgYXJyYXkoWyAxLiwgMzIuLCAgMy5dKSwgRXhwcmVzc2lvbkZ1bmN0aW9uKCd4KzEnKSwgRXhwcmVzc2lvbkZ1bmN0aW9uKCdbMS4sIDBdICogeCArIFswLCAxLl0gKiB4KioyJyksIENvbnN0YW50RnVuY3Rpb24odmFsdWU9YXJyYXkoWzEuLCAyLiwgMy5dKSldKSksIHVuaXF1ZV9ieT1vcGVyYXRvci5pdGVtZ2V0dGVyKDApKS5tYXAoZGljdCkuZmlsdGVyKGxhbWJkYSBtdTogPHVua25vd24+KQoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/parameters/parameters.py::test_mu_time_dependent" value="c3JjL3B5bW9ydGVzdHMvcGFyYW1ldGVycy9wYXJhbWV0ZXJzLnB5Ojp0ZXN0X211X3RpbWVfZGVwZW5kZW50OgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMC4wNSBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMC0xIG1zLCB+IDYyJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAyIGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDQ0LjQ0JSwgUmV0cmllZCBkcmF3IGZyb20gbGlzdHModHVwbGVzKHNhbXBsZWRfZnJvbShbJ3QnLCAnZm9vJywgJ2JhciddKSwgc2FtcGxlZF9mcm9tKFthcnJheShbMS5dKSwgYXJyYXkoWyAxLiwgMzIuLCAgMy5dKSwgRXhwcmVzc2lvbkZ1bmN0aW9uKCd4KzEnKSwgRXhwcmVzc2lvbkZ1bmN0aW9uKCdbMS4sIDBdICogeCArIFswLCAxLl0gKiB4KioyJyksIENvbnN0YW50RnVuY3Rpb24odmFsdWU9YXJyYXkoWzEuLCAyLiwgMy5dKSldKSksIHVuaXF1ZV9ieT1vcGVyYXRvci5pdGVtZ2V0dGVyKDApKS5tYXAoZGljdCkuZmlsdGVyKGxhbWJkYSBtdTogPHVua25vd24+KSB0byBzYXRpc2Z5IGZpbHRlcgoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/parameters/parameters.py::test_mu_with_changed_time" value="c3JjL3B5bW9ydGVzdHMvcGFyYW1ldGVycy9wYXJhbWV0ZXJzLnB5Ojp0ZXN0X211X3dpdGhfY2hhbmdlZF90aW1lOgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMC4wNSBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMC0xIG1zLCB+IDU5JSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAwIGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDE2LjAwJSwgUmV0cmllZCBkcmF3IGZyb20gbGlzdHModHVwbGVzKHNhbXBsZWRfZnJvbShbJ3QnLCAnZm9vJywgJ2JhciddKSwgc2FtcGxlZF9mcm9tKFthcnJheShbMS5dKSwgYXJyYXkoWyAxLiwgMzIuLCAgMy5dKSwgRXhwcmVzc2lvbkZ1bmN0aW9uKCd4KzEnKSwgRXhwcmVzc2lvbkZ1bmN0aW9uKCdbMS4sIDBdICogeCArIFswLCAxLl0gKiB4KioyJyksIENvbnN0YW50RnVuY3Rpb24odmFsdWU9YXJyYXkoWzEuLCAyLiwgMy5dKSldKSksIHVuaXF1ZV9ieT1vcGVyYXRvci5pdGVtZ2V0dGVyKDApKS5tYXAoZGljdCkuZmlsdGVyKGxhbWJkYSBtdTogPHVua25vd24+KSB0byBzYXRpc2Z5IGZpbHRlcgoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /><property name="hypothesis-statistics-src/pymortests/parameters/parameters.py::test_mu_to_numpy" value="c3JjL3B5bW9ydGVzdHMvcGFyYW1ldGVycy9wYXJhbWV0ZXJzLnB5Ojp0ZXN0X211X3RvX251bXB5OgoKICAtIGR1cmluZyBnZW5lcmF0ZSBwaGFzZSAoMC4wNSBzZWNvbmRzKToKICAgIC0gVHlwaWNhbCBydW50aW1lczogMS0yIG1zLCB+IDYyJSBpbiBkYXRhIGdlbmVyYXRpb24KICAgIC0gMjUgcGFzc2luZyBleGFtcGxlcywgMCBmYWlsaW5nIGV4YW1wbGVzLCAxIGludmFsaWQgZXhhbXBsZXMKICAgIC0gRXZlbnRzOgogICAgICAqIDQyLjMxJSwgUmV0cmllZCBkcmF3IGZyb20gbGlzdHModHVwbGVzKHNhbXBsZWRfZnJvbShbJ3QnLCAnZm9vJywgJ2JhciddKSwgc2FtcGxlZF9mcm9tKFthcnJheShbMS5dKSwgYXJyYXkoWyAxLiwgMzIuLCAgMy5dKSwgRXhwcmVzc2lvbkZ1bmN0aW9uKCd4KzEnKSwgRXhwcmVzc2lvbkZ1bmN0aW9uKCdbMS4sIDBdICogeCArIFswLCAxLl0gKiB4KioyJyksIENvbnN0YW50RnVuY3Rpb24odmFsdWU9YXJyYXkoWzEuLCAyLiwgMy5dKSldKSksIHVuaXF1ZV9ieT1vcGVyYXRvci5pdGVtZ2V0dGVyKDApKS5tYXAoZGljdCkuZmlsdGVyKGxhbWJkYSBtdTogPHVua25vd24+KSB0byBzYXRpc2Z5IGZpbHRlcgoKICAtIFN0b3BwZWQgYmVjYXVzZSBzZXR0aW5ncy5tYXhfZXhhbXBsZXM9MjU=" /></properties><testcase classname="src.pymortests.basic" name="test_importable" time="0.016" /><testcase classname="src.pymortests.complex_values" name="test_complex" time="0.014" /><testcase classname="src.pymortests.complex_values" name="test_real_imag" time="0.009" /><testcase classname="src.pymortests.complex_values" name="test_scal" time="0.009" /><testcase classname="src.pymortests.complex_values" name="test_axpy" time="0.009" /><testcase classname="src.pymortests.complex_values" name="test_inner" time="0.009" /><testcase classname="src.pymortests.complex_values" name="test_pairwise_inner" time="0.009" /><testcase classname="src.pymortests.demos" name="test_demos[elliptic:'0 0 0 0']" time="11.243" /><testcase classname="src.pymortests.demos" name="test_demos[elliptic:'1 2 0 3']" time="1.366" /><testcase classname="src.pymortests.demos" name="test_demos[elliptic:'--rect 1 2 0 3']" time="1.668" /><testcase classname="src.pymortests.demos" name="test_demos[elliptic:'0 0 2 1']" time="2.183" /><testcase classname="src.pymortests.demos" name="test_demos[elliptic:'--fv 0 0 0 0']" time="3.477" /><testcase classname="src.pymortests.demos" name="test_demos[elliptic:'--fv 1 2 0 3']" time="3.367" /><testcase classname="src.pymortests.demos" name="test_demos[elliptic:'--fv --rect 1 2 0 3']" time="1.821" /><testcase classname="src.pymortests.demos" name="test_demos[elliptic:'--fv 0 0 2 1']" time="3.414" /><testcase classname="src.pymortests.demos" name="test_demos[elliptic2:'0 20 h1']" time="1.085" /><testcase classname="src.pymortests.demos" name="test_demos[elliptic2:'0 20 l2']" time="0.198" /><testcase classname="src.pymortests.demos" name="test_demos[elliptic2:'0 20 0.5']" time="1.032" /><testcase classname="src.pymortests.demos" name="test_demos[elliptic2:'--fv 0 20 0']" time="0.325" /><testcase classname="src.pymortests.demos" name="test_demos[elliptic2:'1 20 h1']" time="1.040" /><testcase classname="src.pymortests.demos" name="test_demos[elliptic2:'1 20 l2']" time="0.205" /><testcase classname="src.pymortests.demos" name="test_demos[elliptic2:'1 20 0.5']" time="1.159" /><testcase classname="src.pymortests.demos" name="test_demos[elliptic_oned:'1 20']" time="0.264" /><testcase classname="src.pymortests.demos" name="test_demos[elliptic_oned:'--fv 1 20']" time="0.960" /><testcase classname="src.pymortests.demos" name="test_demos[burgers:'--num-flux=lax_friedrichs 0.1']" time="0.933" /><testcase classname="src.pymortests.demos" name="test_demos[burgers:'--num-flux=engquist_osher 0.1']" time="1.397" /><testcase classname="src.pymortests.demos" name="test_demos[burgers:'--num-flux=simplified_engquist_osher 0.1']" time="1.073" /><testcase classname="src.pymortests.demos" name="test_demos[parabolic:'heat 1']" time="1.385" /><testcase classname="src.pymortests.demos" name="test_demos[parabolic:'heat --rect 1']" time="1.181" /><testcase classname="src.pymortests.demos" name="test_demos[parabolic:'heat --fv 1']" time="2.090" /><testcase classname="src.pymortests.demos" name="test_demos[parabolic:'heat --rect --fv 1']" time="1.141" /><testcase classname="src.pymortests.demos" name="test_demos[parabolic:'dar 1']" time="1.350" /><testcase classname="src.pymortests.demos" name="test_demos[parabolic:'dar --rect 1']" time="1.058" /><testcase classname="src.pymortests.demos" name="test_demos[elliptic_unstructured:'6.0 16 0.1']" time="0.848" /><testcase classname="src.pymortests.demos" name="test_demos[neural_networks:'15 20 3']" time="0.008"><skipped type="pytest.skip" message="skipped test due to missing neural_">/home/runner/work/pymor/pymor/src/pymortests/demos.py:186: skipped test due to missing neural_</skipped></testcase><testcase classname="src.pymortests.demos" name="test_demos[neural_networks_fenics:'15 3']" time="0.007"><skipped type="pytest.skip" message="skipped test due to missing fenics">/home/runner/work/pymor/pymor/src/pymortests/demos.py:186: skipped test due to missing fenics</skipped></testcase><testcase classname="src.pymortests.demos" name="test_demos[neural_networks_instationary:'0 10 3 15 3']" time="0.007"><skipped type="pytest.skip" message="skipped test due to missing neural_">/home/runner/work/pymor/pymor/src/pymortests/demos.py:186: skipped test due to missing neural_</skipped></testcase><testcase classname="src.pymortests.demos" name="test_demos[neural_networks_instationary:'1 15 3 20 3']" time="0.007"><skipped type="pytest.skip" message="skipped test due to missing neural_">/home/runner/work/pymor/pymor/src/pymortests/demos.py:186: skipped test due to missing neural_</skipped></testcase><testcase classname="src.pymortests.demos" name="test_demos[thermalblock:'--plot-solutions --plot-err --plot-error-sequence 2 2 3 5']" time="4.207" /><testcase classname="src.pymortests.demos" name="test_demos[thermalblock:'--fenics 2 2 3 5']" time="0.007"><skipped type="pytest.skip" message="skipped test due to missing fenics">/home/runner/work/pymor/pymor/src/pymortests/demos.py:186: skipped test due to missing fenics</skipped></testcase><testcase classname="src.pymortests.demos" name="test_demos[thermalblock:'--no-greedy-with-error-estimator 3 1 2 5']" time="6.333" /><testcase classname="src.pymortests.demos" name="test_demos[thermalblock:'--alg=pod 2 2 3 5']" time="7.946" /><testcase classname="src.pymortests.demos" name="test_demos[thermalblock:'--alg=adaptive_greedy 2 2 10 30']" time="12.621" /><testcase classname="src.pymortests.demos" name="test_demos[thermalblock:'--alg=naive --reductor=traditional 2 2 10 5']" time="2.252" /><testcase classname="src.pymortests.demos" name="test_demos[thermalblock:'--list-vector-array 2 2 2 2']" time="1.898" /><testcase classname="src.pymortests.demos" name="test_demos[thermalblock_adaptive:'--cache-region=memory --plot-solutions --plot-error-sequence 10']" time="6.475" /><testcase classname="src.pymortests.demos" name="test_demos[thermalblock_adaptive:'--no-visualize-refinement --plot-err 10']" time="6.534" /><testcase classname="src.pymortests.demos" name="test_demos[thermalblock_simple:'pymor naive 2 5 5']" time="2.811" /><testcase classname="src.pymortests.demos" name="test_demos[thermalblock_simple:'fenics greedy 2 5 5']" time="0.008"><skipped type="pytest.skip" message="skipped test due to missing fenics">/home/runner/work/pymor/pymor/src/pymortests/demos.py:186: skipped test due to missing fenics</skipped></testcase><testcase classname="src.pymortests.demos" name="test_demos[thermalblock_simple:'ngsolve pod 2 5 5']" time="0.007"><skipped type="pytest.skip" message="skipped test due to missing ngsolve">/home/runner/work/pymor/pymor/src/pymortests/demos.py:186: skipped test due to missing ngsolve</skipped></testcase><testcase classname="src.pymortests.demos" name="test_demos[thermalblock_simple:'-- pymor_text adaptive_greedy -1 3 3']" time="4.302" /><testcase classname="src.pymortests.demos" name="test_demos[thermalblock_gui:'--testing 2 2 3 5']" time="0.666" /><testcase classname="src.pymortests.demos" name="test_demos[burgers_ei:'1 2 2 5 2 5 --plot-ei-err --plot-err --plot-solutions']" time="23.913" /><testcase classname="src.pymortests.demos" name="test_demos[burgers_ei:'1 2 2 5 2 5 --ei-alg=deim --plot-error-landscape']" time="19.840" /><testcase classname="src.pymortests.demos" name="test_demos[parabolic_mor:'pymor greedy 2 3 1']" time="1.679" /><testcase classname="src.pymortests.demos" name="test_demos[parabolic_mor:'pymor pod 2 3 1']" time="1.350" /><testcase classname="src.pymortests.demos" name="test_demos[parabolic_mor:'fenics adaptive_greedy 2 3 1']" time="0.008"><skipped type="pytest.skip" message="skipped test due to missing fenics">/home/runner/work/pymor/pymor/src/pymortests/demos.py:186: skipped test due to missing fenics</skipped></testcase><testcase classname="src.pymortests.demos" name="test_demos[heat:'0.2 2']" time="10.116" /><testcase classname="src.pymortests.demos" name="test_demos[delay:'1 2']" time="3.864" /><testcase classname="src.pymortests.demos" name="test_demos[string_equation:'5 2']" time="12.194" /><testcase classname="src.pymortests.demos" name="test_demos[parametric_heat:'0.02 2']" time="48.102" /><testcase classname="src.pymortests.demos" name="test_demos[parametric_delay:'2']" time="8.046" /><testcase classname="src.pymortests.demos" name="test_demos[parametric_string:'5 2']" time="42.728" /><testcase classname="src.pymortests.demos" name="test_demos[parametric_synthetic:'10 2']" time="19.113" /><testcase classname="src.pymortests.demos" name="test_demos[unstable_heat:'50 10']" time="1.954" /><testcase classname="src.pymortests.demos" name="test_demos[hapod:'--snap=3 0.01 10 100']" time="2.588" /><testcase classname="src.pymortests.demos" name="test_demos[hapod:'--snap=3 --threads=2 0.01 10 100']" time="2.659" /><testcase classname="src.pymortests.demos" name="test_demos[hapod:'--snap=3 --procs=2 --arity=2 0.01 10 100']" time="3.480" /><testcase classname="src.pymortests.demos" name="test_demos[fenics_nonlinear:'2 10 2']" time="0.010"><skipped type="pytest.skip" message="skipped test due to missing fenics">/home/runner/work/pymor/pymor/src/pymortests/demos.py:186: skipped test due to missing fenics</skipped></testcase><testcase classname="src.pymortests.demos" name="test_demos[fenics_nonlinear:'3 5 1']" time="0.008"><skipped type="pytest.skip" message="skipped test due to missing fenics">/home/runner/work/pymor/pymor/src/pymortests/demos.py:186: skipped test due to missing fenics</skipped></testcase><testcase classname="src.pymortests.demos" name="test_demos[function_ei:'--grid=10 3 2 3 2 --plot-ei-err --plot-solutions']" time="38.976" /><testcase classname="src.pymortests.demos" name="test_demos[linear_optimization:'40 20']" time="3.075" /><testcase classname="src.pymortests.demos" name="test_demos[output_error_estimation:'0 10 4 10 0']" time="3.100" /><testcase classname="src.pymortests.demos" name="test_demos[output_error_estimation:'0 10 4 10 1']" time="3.536" /><testcase classname="src.pymortests.demos" name="test_demos[output_error_estimation:'1 10 4 10 1']" time="3.514" /><testcase classname="src.pymortests.demos" name="test_demos[output_error_estimation:'2 10 4 10 0']" time="3.181" /><testcase classname="src.pymortests.demos" name="test_demos[output_error_estimation:'2 10 4 10 1']" time="3.503" /><testcase classname="src.pymortests.demos" name="test_demos[output_error_estimation:'3 10 10 10 1']" time="6.656" /><testcase classname="src.pymortests.demos" name="test_demos[output_error_estimation:'4 10 10 10 1']" time="6.609" /><testcase classname="src.pymortests.demos" name="test_demos[output_error_estimation_with_dwr:'0 10 4 12']" time="21.850" /><testcase classname="src.pymortests.demos" name="test_demos[output_error_estimation_with_dwr:'1 10 4 8']" time="23.730" /><testcase classname="src.pymortests.demos" name="test_demos[burgers_dmd:'1.5 --grid=10 --nt=100']" time="6.124" /><testcase classname="src.pymortests.demos" name="test_demos[dmd_identification:'--n=4 --m=10']" time="0.020" /><testcase classname="src.pymortests.demos" name="test_demos[phlti:'--n=10']" time="0.946" /><testcase classname="src.pymortests.demos" name="test_demos[symplectic_wave_equation:'1.0 10']" time="1.600" /><testcase classname="src.pymortests.demos" name="test_analyze_pickle1" time="3.635" /><testcase classname="src.pymortests.demos" name="test_analyze_pickle2" time="6.865" /><testcase classname="src.pymortests.demos" name="test_analyze_pickle3" time="4.462" /><testcase classname="src.pymortests.demos" name="test_analyze_pickle4" time="4.468" /><testcase classname="src.pymortests.demos" name="test_thermalblock_ipython[ipy_args0]" time="29.231" /><testcase classname="src.pymortests.demos" name="test_thermalblock_ipython[ipy_args1]" time="0.014"><skipped type="pytest.skip" message="skipped test due to missing fenics">/home/runner/work/pymor/pymor/src/pymortests/demos.py:186: skipped test due to missing fenics</skipped></testcase><testcase classname="src.pymortests.demos" name="test_thermalblock_results[thermalblock:'--plot-solutions --plot-err --plot-error-sequence 2 2 3 5']" time="3.961" /><testcase classname="src.pymortests.demos" name="test_thermalblock_results[thermalblock:'--fenics 2 2 3 5']" time="0.009"><skipped type="pytest.skip" message="skipped test due to missing fenics">/home/runner/work/pymor/pymor/src/pymortests/demos.py:186: skipped test due to missing fenics</skipped></testcase><testcase classname="src.pymortests.demos" name="test_thermalblock_results[thermalblock:'--no-greedy-with-error-estimator 3 1 2 5']" time="6.413" /><testcase classname="src.pymortests.demos" name="test_thermalblock_results[thermalblock:'--alg=pod 2 2 3 5']" time="8.117" /><testcase classname="src.pymortests.demos" name="test_thermalblock_results[thermalblock:'--alg=adaptive_greedy 2 2 10 30']" time="12.753" /><testcase classname="src.pymortests.demos" name="test_thermalblock_results[thermalblock:'--alg=naive --reductor=traditional 2 2 10 5']" time="2.278" /><testcase classname="src.pymortests.demos" name="test_thermalblock_results[thermalblock:'--list-vector-array 2 2 2 2']" time="1.895" /><testcase classname="src.pymortests.demos" name="test_burgers_ei_results" time="101.161" /><testcase classname="src.pymortests.demos" name="test_parabolic_mor_results" time="9.596" /><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[DEALII]" time="0.005"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[DUNEGDT]" time="0.004"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[FENICS]" time="0.004"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[GL]" time="0.004"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[IPYTHON]" time="0.004"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[MATPLOTLIB]" time="0.004"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[VTKIO]" time="0.004"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[MESHIO]" time="0.005"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[IPYWIDGETS]" time="0.004"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[MPI]" time="0.004"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[NGSOLVE]" time="0.004"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[NUMPY]" time="0.004"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[PYMESS]" time="0.004"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[PYTEST]" time="0.004"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[PYTHREEJS]" time="0.004"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[QT]" time="0.005"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[QTOPENGL]" time="0.016"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[SCIKIT_FEM]" time="0.004"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[SCIPY]" time="0.004"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[SCIPY_LSMR]" time="0.004"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[SLYCOT]" time="0.004"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[SPHINX]" time="0.004"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[TORCH]" time="0.004"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_config[TYPER]" time="0.005"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:12: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_no_dune_warnings" time="0.004"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:19: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.docker_ci_smoketest" name="test_dune_warnings" time="0.004"><skipped type="pytest.skip" message="Guarantee only valid in the docker container">/home/runner/work/pymor/pymor/src/pymortests/docker_ci_smoketest.py:25: Guarantee only valid in the docker container</skipped></testcase><testcase classname="src.pymortests.neural_network" name="test_linear_function_fitting" time="0.013"><skipped type="pytest.skip" message="skipped test due to missing dependency TORCH">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency TORCH</skipped></testcase><testcase classname="src.pymortests.neural_network" name="test_no_training_data" time="0.013"><skipped type="pytest.skip" message="skipped test due to missing dependency TORCH">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency TORCH</skipped></testcase><testcase classname="src.pymortests.neural_network" name="test_issue_1649" time="0.014"><skipped type="pytest.skip" message="skipped test due to missing dependency TORCH">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency TORCH</skipped></testcase><testcase classname="src.pymortests.tools" name="test_rng_state_deterministic_a" time="0.013" /><testcase classname="src.pymortests.tools" name="test_rng_state_deterministic_b" time="0.013" /><testcase classname="src.pymortests.tools" name="test_quadrature_polynomials" time="0.016" /><testcase classname="src.pymortests.tools" name="test_quadrature_other_functions" time="0.014" /><testcase classname="src.pymortests.tools" name="test_quadrature_weights" time="0.013" /><testcase classname="src.pymortests.tools" name="test_quadrature_points" time="0.014" /><testcase classname="src.pymortests.tools" name="test_float_cmp" time="0.015" /><testcase classname="src.pymortests.tools" name="test_almost_less" time="0.014" /><testcase classname="src.pymortests.tools" name="test_vtkio" time="1.995" /><testcase classname="src.pymortests.tools" name="testTimingContext" time="0.018" /><testcase classname="src.pymortests.tools" name="testTimingDecorator" time="0.030" /><testcase classname="src.pymortests.tools" name="testTiming" time="0.029" /><testcase classname="src.pymortests.tools" name="testDeprecated" time="0.014" /><testcase classname="src.pymortests.tools" name="test_formatsrc" time="0.163" /><testcase classname="src.pymortests.tools" name="test_formatsrc_nopygments" time="0.017" /><testcase classname="src.pymortests.tools" name="test_load_matrix" time="0.027" /><testcase classname="src.pymortests.tools" name="test_save_load_matrix[.mat]" time="0.016" /><testcase classname="src.pymortests.tools" name="test_save_load_matrix[.mtx]" time="0.016" /><testcase classname="src.pymortests.tools" name="test_save_load_matrix[.mtz.gz]" time="0.016" /><testcase classname="src.pymortests.tools" name="test_save_load_matrix[.npy]" time="0.016" /><testcase classname="src.pymortests.tools" name="test_save_load_matrix[.npz]" time="0.017" /><testcase classname="src.pymortests.tools" name="test_save_load_matrix[.txt]" time="0.017" /><testcase classname="src.pymortests.tools" name="test_cwd_ctx_manager" time="0.014" /><testcase classname="src.pymortests.tools" name="test_plot_spikes[linear-linear]" time="0.030" /><testcase classname="src.pymortests.tools" name="test_plot_spikes[linear-log]" time="0.039" /><testcase classname="src.pymortests.tools" name="test_plot_spikes[log-linear]" time="0.035" /><testcase classname="src.pymortests.tools" name="test_plot_spikes[log-log]" time="0.043" /><testcase classname="src.pymortests.tools" name="test_plot_spikes_multiple[linear-linear]" time="0.069" /><testcase classname="src.pymortests.tools" name="test_plot_spikes_multiple[linear-log]" time="0.075" /><testcase classname="src.pymortests.tools" name="test_plot_spikes_multiple[log-linear]" time="0.100" /><testcase classname="src.pymortests.tools" name="test_plot_spikes_multiple[log-log]" time="0.096" /><testcase classname="src.pymortests.tools" name="test_plot_complex[linear-linear]" time="0.032" /><testcase classname="src.pymortests.tools" name="test_plot_complex[linear-log]" time="0.042" /><testcase classname="src.pymortests.tools" name="test_plot_complex[log-linear]" time="0.035" /><testcase classname="src.pymortests.tools" name="test_plot_complex[log-log]" time="0.040" /><testcase classname="src.pymortests.vectorarray" name="test_empty" time="0.548" /><testcase classname="src.pymortests.vectorarray" name="test_print" time="1.171" /><testcase classname="src.pymortests.vectorarray" name="test_zeros" time="1.596" /><testcase classname="src.pymortests.vectorarray" name="test_ones" time="1.476" /><testcase classname="src.pymortests.vectorarray" name="test_full" time="1.062" /><testcase classname="src.pymortests.vectorarray" name="test_random_uniform_all" time="1.663" /><testcase classname="src.pymortests.vectorarray" name="test_random_normal" time="1.602" /><testcase classname="src.pymortests.vectorarray" name="test_from_numpy" time="0.761" /><testcase classname="src.pymortests.vectorarray" name="test_shape" time="1.661" /><testcase classname="src.pymortests.vectorarray" name="test_space" time="1.144" /><testcase classname="src.pymortests.vectorarray" name="test_getitem_repeated" time="1.554" /><testcase classname="src.pymortests.vectorarray" name="test_copy" time="0.836" /><testcase classname="src.pymortests.vectorarray" name="test_COW" time="1.859" /><testcase classname="src.pymortests.vectorarray" name="test_copy_repeated_index" time="1.590" /><testcase classname="src.pymortests.vectorarray" name="test_append" time="1.724" /><testcase classname="src.pymortests.vectorarray" name="test_append_self" time="1.215" /><testcase classname="src.pymortests.vectorarray" name="test_del" time="1.124" /><testcase classname="src.pymortests.vectorarray" name="test_scal" time="0.712" /><testcase classname="src.pymortests.vectorarray" name="test_scal_imaginary" time="1.869" /><testcase classname="src.pymortests.vectorarray" name="test_axpy" time="2.358" /><testcase classname="src.pymortests.vectorarray" name="test_axpy_one_x" time="3.100" /><testcase classname="src.pymortests.vectorarray" name="test_axpy_self" time="1.608" /><testcase classname="src.pymortests.vectorarray" name="test_pairwise_inner" time="1.533" /><testcase classname="src.pymortests.vectorarray" name="test_pairwise_inner_self" time="1.211" /><testcase classname="src.pymortests.vectorarray" name="test_inner" time="3.403" /><testcase classname="src.pymortests.vectorarray" name="test_inner_self" time="2.157" /><testcase classname="src.pymortests.vectorarray" name="test_lincomb_1d" time="0.931" /><testcase classname="src.pymortests.vectorarray" name="test_lincomb_2d" time="2.490" /><testcase classname="src.pymortests.vectorarray" name="test_lincomb_wrong_coefficients" time="2.066" /><testcase classname="src.pymortests.vectorarray" name="test_norm" time="1.255" /><testcase classname="src.pymortests.vectorarray" name="test_norm2" time="1.979" /><testcase classname="src.pymortests.vectorarray" name="test_sup_norm" time="1.153" /><testcase classname="src.pymortests.vectorarray" name="test_dofs" time="0.920" /><testcase classname="src.pymortests.vectorarray" name="test_components_wrong_dof_indices" time="0.801" /><testcase classname="src.pymortests.vectorarray" name="test_amax" time="1.278" /><testcase classname="src.pymortests.vectorarray" name="test_gramian" time="1.269" /><testcase classname="src.pymortests.vectorarray" name="test_add" time="2.503" /><testcase classname="src.pymortests.vectorarray" name="test_iadd" time="1.225" /><testcase classname="src.pymortests.vectorarray" name="test_sub" time="2.159" /><testcase classname="src.pymortests.vectorarray" name="test_isub" time="1.035" /><testcase classname="src.pymortests.vectorarray" name="test_neg" time="1.759" /><testcase classname="src.pymortests.vectorarray" name="test_mul" time="1.184" /><testcase classname="src.pymortests.vectorarray" name="test_mul_wrong_factor" time="1.056" /><testcase classname="src.pymortests.vectorarray" name="test_rmul" time="0.839" /><testcase classname="src.pymortests.vectorarray" name="test_imul" time="1.732" /><testcase classname="src.pymortests.vectorarray" name="test_imul_wrong_factor" time="1.043" /><testcase classname="src.pymortests.vectorarray" name="test_iter" time="0.888" /><testcase classname="src.pymortests.vectorarray" name="test_append_incompatible" time="1.162" /><testcase classname="src.pymortests.vectorarray" name="test_axpy_incompatible" time="5.654" /><testcase classname="src.pymortests.vectorarray" name="test_inner_incompatible" time="2.021" /><testcase classname="src.pymortests.vectorarray" name="test_pairwise_inner_incompatible" time="2.105" /><testcase classname="src.pymortests.vectorarray" name="test_add_incompatible" time="1.601" /><testcase classname="src.pymortests.vectorarray" name="test_iadd_incompatible" time="1.533" /><testcase classname="src.pymortests.vectorarray" name="test_sub_incompatible" time="1.668" /><testcase classname="src.pymortests.vectorarray" name="test_isub_incompatible" time="0.832" /><testcase classname="src.pymortests.vectorarray" name="test_wrong_ind_raises_exception" time="0.696" /><testcase classname="src.pymortests.vectorarray" name="test_scal_wrong_coefficients" time="1.401" /><testcase classname="src.pymortests.vectorarray" name="test_axpy_wrong_coefficients" time="2.911" /><testcase classname="src.pymortests.vectorarray" name="test_pickle" time="1.384" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal" time="0.757" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;0]" time="0.060" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;1]" time="0.052" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;2]" time="0.060" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;3]" time="0.052" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;4]" time="0.059" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;5]" time="0.053" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;6]" time="0.059" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;7]" time="0.052" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;8]" time="0.059" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;9]" time="0.053" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;10]" time="0.060" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;11]" time="0.052" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;12]" time="0.055" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;13]" time="0.049" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;14]" time="0.058" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;15]" time="0.051" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;16]" time="0.055" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;17]" time="0.048" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;18]" time="0.059" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;19]" time="0.052" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;20]" time="0.058" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;21]" time="0.051" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;22]" time="0.058" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;23]" time="0.052" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;24]" time="0.054" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;25]" time="0.032" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;26]" time="0.034" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;27]" time="0.065" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;28]" time="0.064" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;29]" time="0.046" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;30]" time="0.031" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;31]" time="0.031" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;32]" time="0.075" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;33]" time="0.064" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;34]" time="0.033" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;35]" time="0.062" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;36]" time="0.015" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;37]" time="0.015" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_product[&lt;lambda&gt;38]" time="0.037" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self" time="6.039" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;0]" time="0.173" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;1]" time="0.166" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;2]" time="0.171" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;3]" time="0.166" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;4]" time="0.169" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;5]" time="0.166" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;6]" time="0.169" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;7]" time="0.166" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;8]" time="0.169" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;9]" time="0.165" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;10]" time="0.168" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;11]" time="0.165" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;12]" time="0.147" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;13]" time="0.141" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;14]" time="0.169" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;15]" time="0.166" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;16]" time="0.146" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;17]" time="0.137" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;18]" time="0.169" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;19]" time="0.167" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;20]" time="0.167" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;21]" time="0.165" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;22]" time="0.169" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;23]" time="0.165" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;24]" time="0.154" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;25]" time="0.183" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;26]" time="0.133" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;27]" time="0.167" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;28]" time="0.118" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;29]" time="0.115" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;30]" time="0.115" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;31]" time="0.114" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;32]" time="0.395" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;33]" time="0.313" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;34]" time="0.124" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;35]" time="0.311" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;36]" time="0.192" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;37]" time="0.083" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_self_product[&lt;lambda&gt;38]" time="0.133" /><testcase classname="src.pymortests.algorithms.basic" name="test_almost_equal_incompatible" time="4.528" /><testcase classname="src.pymortests.algorithms.basic" name="test_project_array" time="1.484" /><testcase classname="src.pymortests.algorithms.basic" name="test_project_array_with_product" time="0.018" /><testcase classname="src.pymortests.algorithms.bernoulli" name="test_bernoulli[False-False-10]" time="0.023" /><testcase classname="src.pymortests.algorithms.bernoulli" name="test_bernoulli[False-False-20]" time="0.023" /><testcase classname="src.pymortests.algorithms.bernoulli" name="test_bernoulli[False-False-30]" time="0.026" /><testcase classname="src.pymortests.algorithms.bernoulli" name="test_bernoulli[False-True-10]" time="0.021" /><testcase classname="src.pymortests.algorithms.bernoulli" name="test_bernoulli[False-True-20]" time="0.023" /><testcase classname="src.pymortests.algorithms.bernoulli" name="test_bernoulli[False-True-30]" time="0.026" /><testcase classname="src.pymortests.algorithms.bernoulli" name="test_bernoulli[True-False-10]" time="0.021" /><testcase classname="src.pymortests.algorithms.bernoulli" name="test_bernoulli[True-False-20]" time="0.023" /><testcase classname="src.pymortests.algorithms.bernoulli" name="test_bernoulli[True-False-30]" time="0.026" /><testcase classname="src.pymortests.algorithms.bernoulli" name="test_bernoulli[True-True-10]" time="0.021" /><testcase classname="src.pymortests.algorithms.bernoulli" name="test_bernoulli[True-True-20]" time="0.023" /><testcase classname="src.pymortests.algorithms.bernoulli" name="test_bernoulli[True-True-30]" time="0.026" /><testcase classname="src.pymortests.algorithms.bernoulli" name="test_bernoulli_stabilize[False-10]" time="0.024" /><testcase classname="src.pymortests.algorithms.bernoulli" name="test_bernoulli_stabilize[False-20]" time="0.024" /><testcase classname="src.pymortests.algorithms.bernoulli" name="test_bernoulli_stabilize[False-30]" time="0.026" /><testcase classname="src.pymortests.algorithms.bernoulli" name="test_bernoulli_stabilize[True-10]" time="0.022" /><testcase classname="src.pymortests.algorithms.bernoulli" name="test_bernoulli_stabilize[True-20]" time="0.023" /><testcase classname="src.pymortests.algorithms.bernoulli" name="test_bernoulli_stabilize[True-30]" time="0.025" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_restricted_to_full[&lt;lambda&gt;0]" time="0.496" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_restricted_to_full[&lt;lambda&gt;1]" time="2.068" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;0]" time="0.016" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;1]" time="0.016" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;2]" time="0.016" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;3]" time="0.016" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;4]" time="0.016" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;5]" time="0.016" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;6]" time="0.016" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;7]" time="0.016" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;8]" time="0.040" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;9]" time="0.033" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;10]" time="0.041" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;11]" time="0.034" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;12]" time="0.040" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;13]" time="0.033" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;14]" time="0.040" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;15]" time="0.033" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;16]" time="0.040" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;17]" time="0.033" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;18]" time="0.040" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;19]" time="0.033" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;20]" time="0.040" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;21]" time="0.034" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;22]" time="0.040" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;23]" time="0.033" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;24]" time="0.040" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;25]" time="0.033" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;26]" time="0.040" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;27]" time="0.033" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;28]" time="0.039" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;29]" time="0.033" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;30]" time="0.039" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;31]" time="0.033" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;32]" time="0.017" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;33]" time="0.016" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;34]" time="0.017" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;35]" time="0.017" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;36]" time="0.017" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;37]" time="0.016" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;38]" time="0.016" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;39]" time="0.016" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;40]" time="0.018" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;41]" time="0.021" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;42]" time="0.018" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;43]" time="0.018" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;44]" time="0.015" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;45]" time="0.015" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_op_creation[&lt;lambda&gt;46]" time="0.026" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_rom[&lt;lambda&gt;0]" time="0.112" /><testcase classname="src.pymortests.algorithms.ei" name="test_ei_rom[&lt;lambda&gt;1]" time="0.220" /><testcase classname="src.pymortests.algorithms.eigs" name="test_eigs[None-1-100]" time="0.101" /><testcase classname="src.pymortests.algorithms.eigs" name="test_eigs[None-1-200]" time="0.058" /><testcase classname="src.pymortests.algorithms.eigs" name="test_eigs[None-7-100]" time="0.641" /><testcase classname="src.pymortests.algorithms.eigs" name="test_eigs[None-7-200]" time="0.470" /><testcase classname="src.pymortests.algorithms.eigs" name="test_eigs[0-1-100]" time="0.070" /><testcase classname="src.pymortests.algorithms.eigs" name="test_eigs[0-1-200]" time="0.254" /><testcase classname="src.pymortests.algorithms.eigs" name="test_eigs[0-7-100]" time="0.262" /><testcase classname="src.pymortests.algorithms.eigs" name="test_eigs[0-7-200]" time="0.314" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt" time="1.883" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_R" time="1.156" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;0]" time="0.048" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;1]" time="0.040" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;2]" time="0.048" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;3]" time="0.040" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;4]" time="0.046" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;5]" time="0.040" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;6]" time="0.047" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;7]" time="0.040" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;8]" time="0.047" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;9]" time="0.040" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;10]" time="0.048" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;11]" time="0.040" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;12]" time="0.048" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;13]" time="0.041" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;14]" time="0.048" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;15]" time="0.042" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;16]" time="0.044" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;17]" time="0.037" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;18]" time="0.048" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;19]" time="0.043" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;20]" time="0.048" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;21]" time="0.042" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;22]" time="0.047" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;23]" time="0.040" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;24]" time="0.022" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;25]" time="0.021" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;26]" time="0.021" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;27]" time="0.020" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;28]" time="0.020" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;29]" time="0.020" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;30]" time="0.019" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;31]" time="0.020" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;32]" time="0.035" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;33]" time="0.032" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;34]" time="0.022" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;35]" time="0.031" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;36]" time="0.018" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;37]" time="0.017" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product[&lt;lambda&gt;38]" time="0.040" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;0]" time="0.086" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;1]" time="0.042" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;2]" time="0.049" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;3]" time="0.041" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;4]" time="0.047" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;5]" time="0.041" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;6]" time="0.046" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;7]" time="0.040" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;8]" time="0.047" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;9]" time="0.040" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;10]" time="0.047" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;11]" time="0.040" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;12]" time="0.047" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;13]" time="0.041" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;14]" time="0.048" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;15]" time="0.042" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;16]" time="0.043" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;17]" time="0.037" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;18]" time="0.048" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;19]" time="0.042" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;20]" time="0.048" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;21]" time="0.042" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;22]" time="0.047" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;23]" time="0.040" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;24]" time="0.037" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;25]" time="0.044" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;26]" time="0.044" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;27]" time="0.045" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;28]" time="0.037" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;29]" time="0.038" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;30]" time="0.020" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;31]" time="0.020" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;32]" time="0.035" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;33]" time="0.033" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;34]" time="0.022" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;35]" time="0.032" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;36]" time="0.018" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;37]" time="0.017" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_with_product_and_R[&lt;lambda&gt;38]" time="0.026" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth" time="3.824" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;0]" time="0.046" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;1]" time="0.037" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;2]" time="0.047" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;3]" time="0.038" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;4]" time="0.044" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;5]" time="0.037" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;6]" time="0.044" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;7]" time="0.037" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;8]" time="0.044" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;9]" time="0.036" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;10]" time="0.044" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;11]" time="0.037" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;12]" time="0.044" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;13]" time="0.038" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;14]" time="0.047" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;15]" time="0.040" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;16]" time="0.040" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;17]" time="0.033" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;18]" time="0.046" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;19]" time="0.039" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;20]" time="0.046" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;21]" time="0.039" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;22]" time="0.044" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;23]" time="0.037" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;24]" time="0.022" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;25]" time="0.021" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;26]" time="0.021" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;27]" time="0.019" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;28]" time="0.019" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;29]" time="0.019" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;30]" time="0.019" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;31]" time="0.018" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;32]" time="0.029" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;33]" time="0.030" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;34]" time="0.022" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;35]" time="0.027" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;36]" time="0.016" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;37]" time="0.015" /><testcase classname="src.pymortests.algorithms.gram_schmidt" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;38]" time="0.025" /><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-scipy-False-False-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-scipy-False-False-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-scipy-False-True-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-scipy-False-True-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-scipy-True-False-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-scipy-True-False-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-scipy-True-True-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-scipy-True-True-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-slycot_bartels-stewart-False-False-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-slycot_bartels-stewart-False-False-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-slycot_bartels-stewart-False-True-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-slycot_bartels-stewart-False-True-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-slycot_bartels-stewart-True-False-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-slycot_bartels-stewart-True-False-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-slycot_bartels-stewart-True-True-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-slycot_bartels-stewart-True-True-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-pymess_glyap-False-False-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-pymess_glyap-False-False-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-pymess_glyap-False-True-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-pymess_glyap-False-True-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-pymess_glyap-True-False-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-pymess_glyap-True-False-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-pymess_glyap-True-True-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[10-pymess_glyap-True-True-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-scipy-False-False-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-scipy-False-False-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-scipy-False-True-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-scipy-False-True-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-scipy-True-False-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-scipy-True-False-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-scipy-True-True-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-scipy-True-True-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-slycot_bartels-stewart-False-False-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-slycot_bartels-stewart-False-False-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-slycot_bartels-stewart-False-True-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-slycot_bartels-stewart-False-True-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-slycot_bartels-stewart-True-False-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-slycot_bartels-stewart-True-False-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-slycot_bartels-stewart-True-True-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-slycot_bartels-stewart-True-True-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-pymess_glyap-False-False-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-pymess_glyap-False-False-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-pymess_glyap-False-True-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-pymess_glyap-False-True-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-pymess_glyap-True-False-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-pymess_glyap-True-False-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-pymess_glyap-True-True-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[20-pymess_glyap-True-True-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[300-pymess_lradi-False-False-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[300-pymess_lradi-False-False-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[300-pymess_lradi-False-True-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[300-pymess_lradi-False-True-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[300-pymess_lradi-True-False-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[300-pymess_lradi-True-False-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[300-pymess_lradi-True-True-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[300-pymess_lradi-True-True-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[300-lradi-False-False-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[300-lradi-False-False-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[300-lradi-False-True-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[300-lradi-False-True-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[300-lradi-True-False-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[300-lradi-True-False-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[300-lradi-True-True-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_lrcf[300-lradi-True-True-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[scipy-False-False-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[scipy-False-False-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[scipy-False-False-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[scipy-False-False-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[scipy-False-True-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[scipy-False-True-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[scipy-False-True-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[scipy-False-True-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[scipy-True-False-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[scipy-True-False-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[scipy-True-False-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[scipy-True-False-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[scipy-True-True-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[scipy-True-True-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[scipy-True-True-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[scipy-True-True-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[slycot_bartels-stewart-False-False-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[slycot_bartels-stewart-False-False-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[slycot_bartels-stewart-False-False-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[slycot_bartels-stewart-False-False-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[slycot_bartels-stewart-False-True-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[slycot_bartels-stewart-False-True-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[slycot_bartels-stewart-False-True-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[slycot_bartels-stewart-False-True-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[slycot_bartels-stewart-True-False-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[slycot_bartels-stewart-True-False-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[slycot_bartels-stewart-True-False-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[slycot_bartels-stewart-True-False-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[slycot_bartels-stewart-True-True-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[slycot_bartels-stewart-True-True-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[slycot_bartels-stewart-True-True-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_lrcf[slycot_bartels-stewart-True-True-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[scipy-False-False-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[scipy-False-False-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[scipy-False-False-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[scipy-False-False-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[scipy-False-True-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[scipy-False-True-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[scipy-False-True-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[scipy-False-True-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[scipy-True-False-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[scipy-True-False-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[scipy-True-False-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[scipy-True-False-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[scipy-True-True-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[scipy-True-True-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[scipy-True-True-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[scipy-True-True-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[slycot_bartels-stewart-False-False-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[slycot_bartels-stewart-False-False-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[slycot_bartels-stewart-False-False-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[slycot_bartels-stewart-False-False-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[slycot_bartels-stewart-False-True-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[slycot_bartels-stewart-False-True-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[slycot_bartels-stewart-False-True-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[slycot_bartels-stewart-False-True-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[slycot_bartels-stewart-True-False-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[slycot_bartels-stewart-True-False-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[slycot_bartels-stewart-True-False-2-10]" time="0.017"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[slycot_bartels-stewart-True-False-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[slycot_bartels-stewart-True-True-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[slycot_bartels-stewart-True-True-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[slycot_bartels-stewart-True-True-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[slycot_bartels-stewart-True-True-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[pymess_glyap-False-False-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[pymess_glyap-False-False-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[pymess_glyap-False-False-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[pymess_glyap-False-False-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[pymess_glyap-False-True-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[pymess_glyap-False-True-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[pymess_glyap-False-True-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[pymess_glyap-False-True-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[pymess_glyap-True-False-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[pymess_glyap-True-False-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[pymess_glyap-True-False-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[pymess_glyap-True-False-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[pymess_glyap-True-True-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[pymess_glyap-True-True-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[pymess_glyap-True-True-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_cont_dense[pymess_glyap-True-True-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[scipy-False-False-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[scipy-False-False-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[scipy-False-False-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[scipy-False-False-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[scipy-False-True-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[scipy-False-True-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[scipy-False-True-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[scipy-False-True-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[scipy-True-False-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[scipy-True-False-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[scipy-True-False-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[scipy-True-False-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[scipy-True-True-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[scipy-True-True-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[scipy-True-True-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[scipy-True-True-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[slycot_bartels-stewart-False-False-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[slycot_bartels-stewart-False-False-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[slycot_bartels-stewart-False-False-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[slycot_bartels-stewart-False-False-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[slycot_bartels-stewart-False-True-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[slycot_bartels-stewart-False-True-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[slycot_bartels-stewart-False-True-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[slycot_bartels-stewart-False-True-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[slycot_bartels-stewart-True-False-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[slycot_bartels-stewart-True-False-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[slycot_bartels-stewart-True-False-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[slycot_bartels-stewart-True-False-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[slycot_bartels-stewart-True-True-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[slycot_bartels-stewart-True-True-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[slycot_bartels-stewart-True-True-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.lyapunov" name="test_disc_dense[slycot_bartels-stewart-True-True-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.pod" name="test_pod" time="2.356" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;0-method_of_snapshots]" time="0.046" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;0-qr_svd]" time="0.045" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;1-method_of_snapshots]" time="0.037" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;1-qr_svd]" time="0.038" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;2-method_of_snapshots]" time="0.046" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;2-qr_svd]" time="0.046" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;3-method_of_snapshots]" time="0.038" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;3-qr_svd]" time="0.039" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;4-method_of_snapshots]" time="0.044" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;4-qr_svd]" time="0.045" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;5-method_of_snapshots]" time="0.037" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;5-qr_svd]" time="0.039" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;6-method_of_snapshots]" time="0.045" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;6-qr_svd]" time="0.045" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;7-method_of_snapshots]" time="0.037" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;7-qr_svd]" time="0.038" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;8-method_of_snapshots]" time="0.044" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;8-qr_svd]" time="0.044" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;9-method_of_snapshots]" time="0.037" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;9-qr_svd]" time="0.038" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;10-method_of_snapshots]" time="0.043" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;10-qr_svd]" time="0.044" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;11-method_of_snapshots]" time="0.037" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;11-qr_svd]" time="0.038" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;12-method_of_snapshots]" time="0.042" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;12-qr_svd]" time="0.045" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;13-method_of_snapshots]" time="0.035" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;13-qr_svd]" time="0.039" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;14-method_of_snapshots]" time="0.044" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;14-qr_svd]" time="0.045" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;15-method_of_snapshots]" time="0.038" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;15-qr_svd]" time="0.039" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;16-method_of_snapshots]" time="0.042" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;16-qr_svd]" time="0.043" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;17-method_of_snapshots]" time="0.035" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;17-qr_svd]" time="0.036" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;18-method_of_snapshots]" time="0.044" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;18-qr_svd]" time="0.045" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;19-method_of_snapshots]" time="0.038" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;19-qr_svd]" time="0.039" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;20-method_of_snapshots]" time="0.044" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;20-qr_svd]" time="0.045" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;21-method_of_snapshots]" time="0.038" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;21-qr_svd]" time="0.039" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;22-method_of_snapshots]" time="0.043" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;22-qr_svd]" time="0.045" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;23-method_of_snapshots]" time="0.037" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;23-qr_svd]" time="0.038" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;24-method_of_snapshots]" time="0.023" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;24-qr_svd]" time="0.020" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;25-method_of_snapshots]" time="0.018" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;25-qr_svd]" time="0.020" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;26-method_of_snapshots]" time="0.019" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;26-qr_svd]" time="0.020" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;27-method_of_snapshots]" time="0.019" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;27-qr_svd]" time="0.020" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;28-method_of_snapshots]" time="0.019" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;28-qr_svd]" time="0.020" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;29-method_of_snapshots]" time="0.018" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;29-qr_svd]" time="0.020" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;30-method_of_snapshots]" time="0.019" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;30-qr_svd]" time="0.022" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;31-method_of_snapshots]" time="0.021" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;31-qr_svd]" time="0.020" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;32-method_of_snapshots]" time="0.021" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;32-qr_svd]" time="0.028" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;33-method_of_snapshots]" time="0.023" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;33-qr_svd]" time="0.028" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;34-method_of_snapshots]" time="0.021" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;34-qr_svd]" time="0.022" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;35-method_of_snapshots]" time="0.021" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;35-qr_svd]" time="0.027" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;36-method_of_snapshots]" time="0.018" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;36-qr_svd]" time="0.018" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;37-method_of_snapshots]" time="0.017" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;37-qr_svd]" time="0.018" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;38-method_of_snapshots]" time="0.029" /><testcase classname="src.pymortests.algorithms.pod" name="test_pod_with_product[&lt;lambda&gt;38-qr_svd]" time="0.039" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;0]" time="0.036" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;1]" time="0.032" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;2]" time="0.016" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;3]" time="0.016" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;4]" time="0.016" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;5]" time="0.016" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;6]" time="0.016" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;7]" time="0.016" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;8]" time="0.043" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;9]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;10]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;11]" time="0.035" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;12]" time="0.042" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;13]" time="0.035" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;14]" time="0.040" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;15]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;16]" time="0.040" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;17]" time="0.033" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;18]" time="0.040" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;19]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;20]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;21]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;22]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;23]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;24]" time="0.040" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;25]" time="0.033" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;26]" time="0.040" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;27]" time="0.033" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;28]" time="0.040" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;29]" time="0.035" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;30]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;31]" time="0.033" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;32]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;33]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;34]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;35]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;36]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;37]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;38]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;39]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;40]" time="0.019" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;41]" time="0.022" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;42]" time="0.019" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;43]" time="0.019" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;44]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;45]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project[&lt;lambda&gt;46]" time="0.021" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;0]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;1]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;2]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;3]" time="0.016" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;4]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;5]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;6]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;7]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;8]" time="0.046" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;9]" time="0.036" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;10]" time="0.042" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;11]" time="0.035" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;12]" time="0.048" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;13]" time="0.038" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;14]" time="0.040" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;15]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;16]" time="0.040" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;17]" time="0.033" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;18]" time="0.040" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;19]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;20]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;21]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;22]" time="0.042" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;23]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;24]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;25]" time="0.035" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;26]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;27]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;28]" time="0.042" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;29]" time="0.035" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;30]" time="0.043" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;31]" time="0.036" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;32]" time="0.022" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;33]" time="0.018" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;34]" time="0.018" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;35]" time="0.018" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;36]" time="0.018" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;37]" time="0.020" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;38]" time="0.020" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;39]" time="0.020" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;40]" time="0.019" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;41]" time="0.028" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;42]" time="0.022" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;43]" time="0.022" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;44]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;45]" time="0.018" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_2[&lt;lambda&gt;46]" time="0.022" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;0]" time="0.042" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;1]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;2]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;3]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;4]" time="0.042" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;5]" time="0.035" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;6]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;7]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;8]" time="0.040" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;9]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;10]" time="0.040" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;11]" time="0.033" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;12]" time="0.040" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;13]" time="0.035" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;14]" time="0.042" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;15]" time="0.035" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;16]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;17]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;18]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;19]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;20]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;21]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;22]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;23]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;24]" time="0.022" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;25]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;26]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;27]" time="0.018" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;28]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;29]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;30]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;31]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;32]" time="0.019" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;33]" time="0.022" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;34]" time="0.020" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;35]" time="0.019" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;36]" time="0.016" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;37]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product[&lt;lambda&gt;38]" time="0.022" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;0]" time="0.046" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;1]" time="0.037" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;2]" time="0.043" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;3]" time="0.035" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;4]" time="0.048" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;5]" time="0.038" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;6]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;7]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;8]" time="0.040" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;9]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;10]" time="0.042" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;11]" time="0.035" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;12]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;13]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;14]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;15]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;16]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;17]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;18]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;19]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;20]" time="0.040" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;21]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;22]" time="0.043" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;23]" time="0.036" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;24]" time="0.019" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;25]" time="0.018" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;26]" time="0.018" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;27]" time="0.018" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;28]" time="0.018" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;29]" time="0.020" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;30]" time="0.019" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;31]" time="0.020" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;32]" time="0.020" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;33]" time="0.028" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;34]" time="0.022" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;35]" time="0.022" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;36]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;37]" time="0.018" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_with_product_2[&lt;lambda&gt;38]" time="0.022" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;0]" time="0.021" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;1]" time="0.021" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;2]" time="0.021" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;3]" time="0.021" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;4]" time="0.022" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;5]" time="0.023" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;6]" time="0.023" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;7]" time="0.022" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;8]" time="0.072" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;9]" time="0.052" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;10]" time="0.048" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;11]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;12]" time="0.078" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;13]" time="0.057" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;14]" time="0.047" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;15]" time="0.040" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;16]" time="0.046" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;17]" time="0.040" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;18]" time="0.049" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;19]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;20]" time="0.047" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;21]" time="0.039" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;22]" time="0.046" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;23]" time="0.039" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;24]" time="0.045" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;25]" time="0.039" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;26]" time="0.045" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;27]" time="0.039" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;28]" time="0.046" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;29]" time="0.039" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;30]" time="0.050" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;31]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;32]" time="0.027" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;33]" time="0.023" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;34]" time="0.023" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;35]" time="0.024" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;36]" time="0.024" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;37]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;38]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;39]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;40]" time="0.027" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;41]" time="0.063" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;42]" time="0.042" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;43]" time="0.042" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;44]" time="0.020" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;45]" time="0.023" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis[&lt;lambda&gt;46]" time="0.027" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;0]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;1]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;2]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;3]" time="0.024" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;4]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;5]" time="0.018" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;6]" time="0.018" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;7]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;8]" time="0.048" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;9]" time="0.038" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;10]" time="0.043" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;11]" time="0.036" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;12]" time="0.057" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;13]" time="0.043" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;14]" time="0.042" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;15]" time="0.035" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;16]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;17]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;18]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;19]" time="0.035" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;20]" time="0.042" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;21]" time="0.035" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;22]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;23]" time="0.035" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;24]" time="0.042" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;25]" time="0.035" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;26]" time="0.042" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;27]" time="0.035" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;28]" time="0.042" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;29]" time="0.036" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;30]" time="0.044" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;31]" time="0.036" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;32]" time="0.022" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;33]" time="0.019" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;34]" time="0.019" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;35]" time="0.019" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;36]" time="0.019" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;37]" time="0.021" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;38]" time="0.021" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;39]" time="0.021" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;40]" time="0.022" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;41]" time="0.033" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;42]" time="0.026" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;43]" time="0.024" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;44]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;45]" time="0.018" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_range_basis[&lt;lambda&gt;46]" time="0.023" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;0]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;1]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;2]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;3]" time="0.017" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;4]" time="0.018" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;5]" time="0.018" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;6]" time="0.018" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;7]" time="0.018" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;8]" time="0.052" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;9]" time="0.039" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;10]" time="0.043" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;11]" time="0.036" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;12]" time="0.053" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;13]" time="0.041" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;14]" time="0.042" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;15]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;16]" time="0.040" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;17]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;18]" time="0.042" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;19]" time="0.037" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;20]" time="0.043" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;21]" time="0.035" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;22]" time="0.042" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;23]" time="0.035" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;24]" time="0.042" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;25]" time="0.036" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;26]" time="0.042" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;27]" time="0.035" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;28]" time="0.042" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;29]" time="0.035" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;30]" time="0.048" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;31]" time="0.037" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;32]" time="0.023" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;33]" time="0.019" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;34]" time="0.020" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;35]" time="0.018" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;36]" time="0.018" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;37]" time="0.021" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;38]" time="0.021" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;39]" time="0.021" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;40]" time="0.021" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;41]" time="0.034" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;42]" time="0.025" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;43]" time="0.026" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;44]" time="0.018" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;45]" time="0.019" /><testcase classname="src.pymortests.algorithms.projection" name="test_project_to_subbasis_no_source_basis[&lt;lambda&gt;46]" time="0.022" /><testcase classname="src.pymortests.algorithms.rand_la" name="test_adaptive_rrf" time="0.044" /><testcase classname="src.pymortests.algorithms.rand_la" name="test_rrf" time="0.093" /><testcase classname="src.pymortests.algorithms.rand_la" name="test_random_generalized_svd" time="0.046" /><testcase classname="src.pymortests.algorithms.rand_la" name="test_random_ghep" time="0.027" /><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-False-False-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-False-False-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-False-False-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-False-False-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-False-False-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-False-False-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-False-False-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-False-False-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-False-True-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-False-True-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-False-True-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-False-True-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-False-True-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-False-True-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-False-True-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-False-True-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-True-False-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-True-False-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-True-False-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-True-False-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-True-False-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-True-False-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-True-False-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-True-False-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-True-True-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-True-True-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-True-True-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-True-True-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-True-True-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-True-True-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-True-True-True-2-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-10-True-True-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-False-False-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-False-False-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-False-False-False-2-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-False-False-False-2-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-False-False-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-False-False-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-False-False-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-False-False-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-False-True-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-False-True-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-False-True-False-2-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-False-True-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-False-True-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-False-True-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-False-True-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-False-True-True-2-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-True-False-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-True-False-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-True-False-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-True-False-False-2-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-True-False-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-True-False-True-1-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-True-False-True-2-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-True-False-True-2-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-True-True-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-True-True-False-1-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-True-True-False-2-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-True-True-False-2-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-True-True-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-True-True-True-1-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-True-True-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[scipy-20-True-True-True-2-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-False-False-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-False-False-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-False-False-False-2-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-False-False-False-2-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-False-False-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-False-False-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-False-False-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-False-False-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-False-True-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-False-True-False-1-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-False-True-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-False-True-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-False-True-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-False-True-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-False-True-True-2-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-False-True-True-2-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-True-False-False-1-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-True-False-False-1-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-True-False-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-True-False-False-2-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-True-False-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-True-False-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-True-False-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-True-False-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-True-True-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-True-True-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-True-True-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-True-True-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-True-True-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-True-True-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-True-True-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-10-True-True-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-False-False-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-False-False-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-False-False-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-False-False-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-False-False-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-False-False-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-False-False-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-False-False-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-False-True-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-False-True-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-False-True-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-False-True-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-False-True-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-False-True-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-False-True-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-False-True-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-True-False-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-True-False-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-True-False-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-True-False-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-True-False-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-True-False-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-True-False-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-True-False-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-True-True-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-True-True-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-True-True-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-True-True-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-True-True-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-True-True-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-True-True-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_dense[slycot-20-True-True-True-2-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-False-False-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-False-False-False-1-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-False-False-False-2-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-False-False-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-False-False-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-False-False-True-1-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-False-False-True-2-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-False-False-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-False-True-False-1-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-False-True-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-False-True-False-2-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-False-True-False-2-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-False-True-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-False-True-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-False-True-True-2-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-False-True-True-2-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-True-False-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-True-False-False-1-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-True-False-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-True-False-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-True-False-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-True-False-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-True-False-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-True-False-True-2-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-True-True-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-True-True-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-True-True-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-True-True-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-True-True-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-True-True-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-True-True-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-scipy-True-True-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-False-False-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-False-False-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-False-False-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-False-False-False-2-2]" time="0.020"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-False-False-True-1-1]" time="0.020"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-False-False-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-False-False-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-False-False-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-False-True-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-False-True-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-False-True-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-False-True-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-False-True-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-False-True-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-False-True-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-False-True-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-True-False-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-True-False-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-True-False-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-True-False-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-True-False-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-True-False-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-True-False-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-True-False-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-True-True-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-True-True-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-True-True-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-True-True-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-True-True-True-1-1]" time="0.017"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-True-True-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-True-True-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-slycot-True-True-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-True-2-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-True-2-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-False-False-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-False-False-False-1-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-False-False-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-False-False-False-2-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-False-False-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-False-False-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-False-False-True-2-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-False-False-True-2-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-False-True-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-False-True-False-1-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-False-True-False-2-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-False-True-False-2-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-False-True-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-False-True-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-False-True-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-False-True-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-True-False-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-True-False-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-True-False-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-True-False-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-True-False-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-True-False-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-True-False-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-True-False-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-True-True-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-True-True-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-True-True-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-True-True-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-True-True-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-True-True-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-True-True-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-scipy-True-True-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-False-False-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-False-False-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-False-False-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-False-False-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-False-False-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-False-False-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-False-False-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-False-False-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-False-True-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-False-True-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-False-True-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-False-True-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-False-True-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-False-True-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-False-True-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-False-True-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-True-False-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-True-False-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-True-False-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-True-False-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-True-False-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-True-False-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-True-False-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-True-False-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-True-True-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-True-True-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-True-True-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-True-True-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-True-True-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-True-True-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-True-True-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-slycot-True-True-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-True-1-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-True-2-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-True-2-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-False-False-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-False-False-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-False-False-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-False-False-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-False-False-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-False-False-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-False-False-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-False-False-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-False-True-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-False-True-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-False-True-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-False-True-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-False-True-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-False-True-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-False-True-True-2-1]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-False-True-True-2-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-True-False-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-True-False-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-True-False-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-True-False-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-True-False-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-True-False-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-True-False-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-True-False-True-2-2]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-True-True-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-True-True-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-True-True-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-True-True-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-True-True-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-True-True-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-True-True-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-pymess_lrnm-True-True-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-False-False-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-False-False-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-False-False-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-False-False-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-False-False-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-False-False-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-False-False-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-False-False-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-False-True-False-1-1]" time="0.017"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-False-True-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-False-True-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-False-True-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-False-True-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-False-True-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-False-True-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-False-True-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-True-False-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-True-False-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-True-False-False-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-True-False-False-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-True-False-True-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-True-False-True-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-True-False-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-True-False-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-True-True-False-1-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-True-True-False-1-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-True-True-False-2-1]" time="0.018"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-True-True-False-2-2]" time="0.018"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-True-True-True-1-1]" time="0.018"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-True-True-True-1-2]" time="0.017"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-True-True-True-2-1]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_ricc_lrcf[250-lrradi-True-True-True-2-2]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-False-False-1-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-False-False-1-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-False-False-1-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-False-False-1-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-False-False-2-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-False-False-2-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-False-False-2-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-False-False-2-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-False-True-1-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-False-True-1-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-False-True-1-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-False-True-1-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-False-True-2-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-False-True-2-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-False-True-2-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-False-True-2-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-True-False-1-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-True-False-1-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-True-False-1-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-True-False-1-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-True-False-2-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-True-False-2-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-True-False-2-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-True-False-2-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-True-True-1-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-True-True-1-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-True-True-1-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-True-True-1-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-True-True-2-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-True-True-2-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-True-True-2-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-False-True-True-2-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-False-False-1-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-False-False-1-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-False-False-1-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-False-False-1-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-False-False-2-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-False-False-2-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-False-False-2-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-False-False-2-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-False-True-1-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-False-True-1-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-False-True-1-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-False-True-1-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-False-True-2-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-False-True-2-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-False-True-2-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-False-True-2-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-True-False-1-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-True-False-1-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-True-False-1-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-True-False-1-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-True-False-2-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-True-False-2-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-True-False-2-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-True-False-2-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-True-True-1-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-True-True-1-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-True-True-1-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-True-True-1-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-True-True-2-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-True-True-2-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-True-True-2-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[scipy-True-True-True-2-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-False-False-1-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-False-False-1-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-False-False-1-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-False-False-1-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-False-False-2-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-False-False-2-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-False-False-2-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-False-False-2-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-False-True-1-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-False-True-1-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-False-True-1-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-False-True-1-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-False-True-2-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-False-True-2-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-False-True-2-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-False-True-2-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-True-False-1-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-True-False-1-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-True-False-1-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-True-False-1-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-True-False-2-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-True-False-2-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-True-False-2-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-True-False-2-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-True-True-1-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-True-True-1-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-True-True-1-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-True-True-1-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-True-True-2-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-True-True-2-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-True-True-2-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-False-True-True-2-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-False-False-1-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-False-False-1-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-False-False-1-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-False-False-1-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-False-False-2-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-False-False-2-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-False-False-2-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-False-False-2-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-False-True-1-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-False-True-1-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-False-True-1-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-False-True-1-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-False-True-2-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-False-True-2-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-False-True-2-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-False-True-2-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-True-False-1-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-True-False-1-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-True-False-1-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-True-False-1-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-True-False-2-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-True-False-2-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-True-False-2-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-True-False-2-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-True-True-1-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-True-True-1-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-True-True-1-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-True-True-1-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-True-True-2-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-True-True-2-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-True-True-2-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[slycot-True-True-True-2-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-1-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-1-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-1-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-1-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-2-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-2-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-2-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-2-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-True-1-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-True-1-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-True-1-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-True-1-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-True-2-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-True-2-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-True-2-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-True-2-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-1-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-1-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-1-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-1-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-2-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-2-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-2-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-2-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-1-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-1-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-1-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-1-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-2-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-2-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-2-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-2-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-1-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-1-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-1-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-1-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-2-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-2-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-2-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-2-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-True-1-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-True-1-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-True-1-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-True-1-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-True-2-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-True-2-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-True-2-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-True-2-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-1-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-1-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-1-2-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-1-2-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-2-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-2-1-20]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-2-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-2-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-1-1-10]" time="0.016"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-1-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-1-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-1-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-2-1-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-2-1-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-2-2-10]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.riccati" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-2-2-20]" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency PYMESS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency PYMESS</skipped></testcase><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NR-15-2-1-50]" time="0.633" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NR-15-2-1-100]" time="0.567" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NR-15-2-2-50]" time="0.654" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NR-15-2-2-100]" time="0.619" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NR-15-3-1-50]" time="0.515" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NR-15-3-1-100]" time="0.596" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NR-15-3-2-50]" time="0.625" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NR-15-3-2-100]" time="0.633" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NR-20-2-1-50]" time="0.953" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NR-20-2-1-100]" time="0.825" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NR-20-2-2-50]" time="0.890" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NR-20-2-2-100]" time="1.005" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NR-20-3-1-50]" time="0.865" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NR-20-3-1-100]" time="0.905" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NR-20-3-2-50]" time="0.922" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NR-20-3-2-100]" time="0.896" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NS-15-2-1-50]" time="0.580" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NS-15-2-1-100]" time="0.564" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NS-15-2-2-50]" time="0.651" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NS-15-2-2-100]" time="0.610" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NS-15-3-1-50]" time="0.512" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NS-15-3-1-100]" time="0.631" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NS-15-3-2-50]" time="0.624" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NS-15-3-2-100]" time="0.629" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NS-20-2-1-50]" time="0.927" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NS-20-2-1-100]" time="0.827" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NS-20-2-2-50]" time="0.886" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NS-20-2-2-100]" time="0.994" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NS-20-3-1-50]" time="0.860" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NS-20-3-1-100]" time="0.966" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NS-20-3-2-50]" time="0.922" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NS-20-3-2-100]" time="0.889" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NM-15-2-1-50]" time="0.751" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NM-15-2-1-100]" time="0.953" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NM-15-2-2-50]" time="0.814" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NM-15-2-2-100]" time="1.032" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NM-15-3-1-50]" time="1.013" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NM-15-3-1-100]" time="0.978" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NM-15-3-2-50]" time="1.024" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NM-15-3-2-100]" time="1.037" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NM-20-2-1-50]" time="1.053" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NM-20-2-1-100]" time="1.311" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NM-20-2-2-50]" time="1.195" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NM-20-2-2-100]" time="1.313" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NM-20-3-1-50]" time="1.152" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NM-20-3-1-100]" time="1.186" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NM-20-3-2-50]" time="1.427" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[False-NM-20-3-2-100]" time="1.287" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NR-15-2-1-50]" time="0.672" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NR-15-2-1-100]" time="0.496" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NR-15-2-2-50]" time="0.639" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NR-15-2-2-100]" time="0.614" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NR-15-3-1-50]" time="0.509" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NR-15-3-1-100]" time="0.540" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NR-15-3-2-50]" time="0.653" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NR-15-3-2-100]" time="0.578" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NR-20-2-1-50]" time="0.789" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NR-20-2-1-100]" time="0.808" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NR-20-2-2-50]" time="0.952" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NR-20-2-2-100]" time="1.037" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NR-20-3-1-50]" time="0.896" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NR-20-3-1-100]" time="0.836" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NR-20-3-2-50]" time="0.989" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NR-20-3-2-100]" time="0.885" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NS-15-2-1-50]" time="0.561" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NS-15-2-1-100]" time="0.502" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NS-15-2-2-50]" time="0.635" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NS-15-2-2-100]" time="0.615" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NS-15-3-1-50]" time="0.533" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NS-15-3-1-100]" time="0.537" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NS-15-3-2-50]" time="0.588" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NS-15-3-2-100]" time="0.583" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NS-20-2-1-50]" time="0.827" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NS-20-2-1-100]" time="0.814" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NS-20-2-2-50]" time="0.941" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NS-20-2-2-100]" time="0.921" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NS-20-3-1-50]" time="0.741" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NS-20-3-1-100]" time="0.863" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NS-20-3-2-50]" time="0.878" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NS-20-3-2-100]" time="0.881" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NM-15-2-1-50]" time="0.765" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NM-15-2-1-100]" time="0.903" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NM-15-2-2-50]" time="0.805" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NM-15-2-2-100]" time="0.905" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NM-15-3-1-50]" time="0.735" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NM-15-3-1-100]" time="0.897" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NM-15-3-2-50]" time="0.898" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NM-15-3-2-100]" time="1.092" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NM-20-2-1-50]" time="1.039" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NM-20-2-1-100]" time="1.269" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NM-20-2-2-50]" time="1.115" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NM-20-2-2-100]" time="1.300" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NM-20-3-1-50]" time="1.071" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NM-20-3-1-100]" time="1.042" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NM-20-3-2-50]" time="1.078" /><testcase classname="src.pymortests.algorithms.samdp" name="test_samdp[True-NM-20-3-2-100]" time="1.513" /><testcase classname="src.pymortests.algorithms.simplify" name="test_expand" time="0.024" /><testcase classname="src.pymortests.algorithms.simplify" name="test_expand_matrix_operator" time="0.015" /><testcase classname="src.pymortests.algorithms.simplify" name="test_contract" time="0.017" /><testcase classname="src.pymortests.algorithms.solver" name="test_generic_solvers[generic_lgmres]" time="0.019" /><testcase classname="src.pymortests.algorithms.solver" name="test_generic_solvers[generic_least_squares_lsmr]" time="0.020" /><testcase classname="src.pymortests.algorithms.solver" name="test_generic_solvers[generic_least_squares_lsqr]" time="0.020" /><testcase classname="src.pymortests.algorithms.solver" name="test_numpy_dense_solvers" time="0.015" /><testcase classname="src.pymortests.algorithms.solver" name="test_numpy_sparse_solvers[generic_lgmres]" time="0.020" /><testcase classname="src.pymortests.algorithms.solver" name="test_numpy_sparse_solvers[generic_least_squares_lsmr]" time="0.022" /><testcase classname="src.pymortests.algorithms.solver" name="test_numpy_sparse_solvers[generic_least_squares_lsqr]" time="0.022" /><testcase classname="src.pymortests.algorithms.solver" name="test_numpy_sparse_solvers[scipy_bicgstab]" time="0.017" /><testcase classname="src.pymortests.algorithms.solver" name="test_numpy_sparse_solvers[scipy_lgmres]" time="0.017" /><testcase classname="src.pymortests.algorithms.solver" name="test_numpy_sparse_solvers[scipy_least_squares_lsmr]" time="0.017" /><testcase classname="src.pymortests.algorithms.solver" name="test_numpy_sparse_solvers[scipy_spsolve]" time="0.016" /><testcase classname="src.pymortests.algorithms.solver" name="test_numpy_sparse_solvers[scipy_bicgstab_spilu]" time="0.016" /><testcase classname="src.pymortests.algorithms.solver" name="test_numpy_sparse_solvers[scipy_least_squares_lsqr]" time="0.017" /><testcase classname="src.pymortests.algorithms.stuff" name="test_newton[update-1]" time="0.017" /><testcase classname="src.pymortests.algorithms.stuff" name="test_newton[update-2]" time="0.034" /><testcase classname="src.pymortests.algorithms.stuff" name="test_newton[update-3]" time="0.045" /><testcase classname="src.pymortests.algorithms.stuff" name="test_newton[update-4]" time="0.056" /><testcase classname="src.pymortests.algorithms.stuff" name="test_newton[update-5]" time="0.067" /><testcase classname="src.pymortests.algorithms.stuff" name="test_newton[update-6]" time="0.077" /><testcase classname="src.pymortests.algorithms.stuff" name="test_newton[update-7]" time="0.086" /><testcase classname="src.pymortests.algorithms.stuff" name="test_newton[residual-1]" time="0.017" /><testcase classname="src.pymortests.algorithms.stuff" name="test_newton[residual-2]" time="0.034" /><testcase classname="src.pymortests.algorithms.stuff" name="test_newton[residual-3]" time="0.038" /><testcase classname="src.pymortests.algorithms.stuff" name="test_newton[residual-4]" time="0.040" /><testcase classname="src.pymortests.algorithms.stuff" name="test_newton[residual-5]" time="0.040" /><testcase classname="src.pymortests.algorithms.stuff" name="test_newton[residual-6]" time="0.041" /><testcase classname="src.pymortests.algorithms.stuff" name="test_newton[residual-7]" time="0.042" /><testcase classname="src.pymortests.algorithms.stuff" name="test_newton_fail" time="0.016" /><testcase classname="src.pymortests.algorithms.stuff" name="test_newton_with_line_search" time="0.101" /><testcase classname="src.pymortests.algorithms.stuff" name="test_newton_fail_without_line_search" time="0.125" /><testcase classname="src.pymortests.algorithms.stuff" name="test_newton_unknown_line_search" time="0.016" /><testcase classname="src.pymortests.algorithms.stuff" name="test_newton_residual_is_zero" time="0.016" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots" time="3.044" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;0-method_of_snapshots]" time="0.045" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;0-qr_svd]" time="0.047" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;1-method_of_snapshots]" time="0.037" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;1-qr_svd]" time="0.039" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;2-method_of_snapshots]" time="0.044" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;2-qr_svd]" time="0.047" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;3-method_of_snapshots]" time="0.037" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;3-qr_svd]" time="0.040" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;4-method_of_snapshots]" time="0.044" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;4-qr_svd]" time="0.046" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;5-method_of_snapshots]" time="0.035" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;5-qr_svd]" time="0.039" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;6-method_of_snapshots]" time="0.042" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;6-qr_svd]" time="0.046" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;7-method_of_snapshots]" time="0.037" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;7-qr_svd]" time="0.039" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;8-method_of_snapshots]" time="0.043" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;8-qr_svd]" time="0.046" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;9-method_of_snapshots]" time="0.037" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;9-qr_svd]" time="0.039" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;10-method_of_snapshots]" time="0.043" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;10-qr_svd]" time="0.046" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;11-method_of_snapshots]" time="0.036" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;11-qr_svd]" time="0.039" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;12-method_of_snapshots]" time="0.043" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;12-qr_svd]" time="0.047" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;13-method_of_snapshots]" time="0.035" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;13-qr_svd]" time="0.039" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;14-method_of_snapshots]" time="0.042" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;14-qr_svd]" time="0.046" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;15-method_of_snapshots]" time="0.037" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;15-qr_svd]" time="0.040" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;16-method_of_snapshots]" time="0.044" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;16-qr_svd]" time="0.044" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;17-method_of_snapshots]" time="0.035" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;17-qr_svd]" time="0.037" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;18-method_of_snapshots]" time="0.042" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;18-qr_svd]" time="0.047" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;19-method_of_snapshots]" time="0.037" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;19-qr_svd]" time="0.041" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;20-method_of_snapshots]" time="0.042" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;20-qr_svd]" time="0.046" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;21-method_of_snapshots]" time="0.036" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;21-qr_svd]" time="0.040" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;22-method_of_snapshots]" time="0.043" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;22-qr_svd]" time="0.046" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;23-method_of_snapshots]" time="0.036" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;23-qr_svd]" time="0.039" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;24-method_of_snapshots]" time="0.022" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;24-qr_svd]" time="0.020" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;25-method_of_snapshots]" time="0.018" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;25-qr_svd]" time="0.020" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;26-method_of_snapshots]" time="0.018" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;26-qr_svd]" time="0.020" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;27-method_of_snapshots]" time="0.018" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;27-qr_svd]" time="0.019" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;28-method_of_snapshots]" time="0.018" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;28-qr_svd]" time="0.020" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;29-method_of_snapshots]" time="0.018" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;29-qr_svd]" time="0.020" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;30-method_of_snapshots]" time="0.018" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;30-qr_svd]" time="0.020" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;31-method_of_snapshots]" time="0.019" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;31-qr_svd]" time="0.020" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;32-method_of_snapshots]" time="0.021" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;32-qr_svd]" time="0.028" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;33-method_of_snapshots]" time="0.022" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;33-qr_svd]" time="0.028" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;34-method_of_snapshots]" time="0.020" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;34-qr_svd]" time="0.022" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;35-method_of_snapshots]" time="0.021" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;35-qr_svd]" time="0.026" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;36-method_of_snapshots]" time="0.018" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;36-qr_svd]" time="0.018" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;37-method_of_snapshots]" time="0.017" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;37-qr_svd]" time="0.017" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;38-method_of_snapshots]" time="0.023" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_method_of_snapshots_with_product[&lt;lambda&gt;38-qr_svd]" time="0.021" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_not_too_many_modes[method_of_snapshots]" time="0.016" /><testcase classname="src.pymortests.algorithms.svd_va" name="test_not_too_many_modes[qr_svd]" time="0.017" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V[1-1-100]" time="0.024" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V[1-1-1000]" time="0.025" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V[1-10-100]" time="0.030" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V[1-10-1000]" time="0.036" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V[1-20-100]" time="0.043" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V[1-20-1000]" time="0.056" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V[2-1-100]" time="0.018" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V[2-1-1000]" time="0.018" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V[2-10-100]" time="0.030" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V[2-10-1000]" time="0.036" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V[2-20-100]" time="0.042" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V[2-20-1000]" time="0.055" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V_E[1-1-100]" time="0.018" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V_E[1-1-1000]" time="0.019" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V_E[1-10-100]" time="0.032" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V_E[1-10-1000]" time="0.040" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V_E[1-20-100]" time="0.047" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V_E[1-20-1000]" time="0.060" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V_E[2-1-100]" time="0.018" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V_E[2-1-1000]" time="0.019" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V_E[2-10-100]" time="0.032" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V_E[2-10-1000]" time="0.038" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V_E[2-20-100]" time="0.047" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_V_E[2-20-1000]" time="0.060" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W[1-1-100]" time="0.019" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W[1-1-1000]" time="0.020" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W[1-10-100]" time="0.032" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W[1-10-1000]" time="0.039" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W[1-20-100]" time="0.047" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W[1-20-1000]" time="0.061" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W[2-1-100]" time="0.018" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W[2-1-1000]" time="0.019" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W[2-10-100]" time="0.032" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W[2-10-1000]" time="0.038" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W[2-20-100]" time="0.047" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W[2-20-1000]" time="0.061" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W_E[1-1-100]" time="0.018" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W_E[1-1-1000]" time="0.019" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W_E[1-10-100]" time="0.037" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W_E[1-10-1000]" time="0.046" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W_E[1-20-100]" time="0.059" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W_E[1-20-1000]" time="0.076" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W_E[2-1-100]" time="0.019" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W_E[2-1-1000]" time="0.019" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W_E[2-10-100]" time="0.038" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W_E[2-10-1000]" time="0.046" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W_E[2-20-100]" time="0.058" /><testcase classname="src.pymortests.algorithms.sylvester" name="test_sylv_schur_W_E[2-20-1000]" time="0.077" /><testcase classname="src.pymortests.algorithms.symplectic" name="test_symplecticity[psd_cotengent_lift]" time="0.025" /><testcase classname="src.pymortests.algorithms.symplectic" name="test_symplecticity[psd_complex_svd]" time="0.024" /><testcase classname="src.pymortests.algorithms.symplectic" name="test_symplecticity[psd_svd_like_decomp]" time="0.027" /><testcase classname="src.pymortests.algorithms.symplectic" name="test_orthonormality[psd_cotengent_lift]" time="0.024" /><testcase classname="src.pymortests.algorithms.symplectic" name="test_orthonormality[psd_complex_svd]" time="0.039" /><testcase classname="src.pymortests.algorithms.symplectic" name="test_symplectic_gram_schmidt[False-False]" time="0.108" /><testcase classname="src.pymortests.algorithms.symplectic" name="test_symplectic_gram_schmidt[False-True]" time="0.089" /><testcase classname="src.pymortests.algorithms.symplectic" name="test_symplectic_gram_schmidt[True-False]" time="0.097" /><testcase classname="src.pymortests.algorithms.symplectic" name="test_symplectic_gram_schmidt[True-True]" time="0.147" /><testcase classname="src.pymortests.algorithms.to_matrix" name="test_to_matrix_NumpyMatrixOperator" time="0.017" /><testcase classname="src.pymortests.algorithms.to_matrix" name="test_to_matrix_BlockOperator" time="0.026" /><testcase classname="src.pymortests.algorithms.to_matrix" name="test_to_matrix_BlockDiagonalOperator" time="0.024" /><testcase classname="src.pymortests.algorithms.to_matrix" name="test_to_matrix_AdjointOperator" time="0.044" /><testcase classname="src.pymortests.algorithms.to_matrix" name="test_to_matrix_ComponentProjectionOperator" time="0.016" /><testcase classname="src.pymortests.algorithms.to_matrix" name="test_to_matrix_ConcatenationOperator" time="0.022" /><testcase classname="src.pymortests.algorithms.to_matrix" name="test_to_matrix_IdentityOperator" time="0.016" /><testcase classname="src.pymortests.algorithms.to_matrix" name="test_to_matrix_LincombOperator" time="0.033" /><testcase classname="src.pymortests.algorithms.to_matrix" name="test_to_matrix_LowRankOperator" time="0.018" /><testcase classname="src.pymortests.algorithms.to_matrix" name="test_to_matrix_LowRankUpdatedOperator" time="0.019" /><testcase classname="src.pymortests.algorithms.to_matrix" name="test_to_matrix_VectorArrayOperator" time="0.017" /><testcase classname="src.pymortests.algorithms.to_matrix" name="test_to_matrix_ZeroOperator" time="0.016" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle[analytical_problem0]" time="0.057" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle[analytical_problem1]" time="0.036" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle[analytical_problem2]" time="0.017" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle[analytical_problem3]" time="0.027" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle[analytical_problem4]" time="0.026" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle[analytical_problem5]" time="0.054" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle[analytical_problem6]" time="0.036" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle[analytical_problem7]" time="0.018" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle[analytical_problem8]" time="0.027" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle[analytical_problem9]" time="0.023" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle[analytical_problem10]" time="0.021" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle[analytical_problem11]" time="0.020" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle[analytical_problem12]" time="0.020" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle[analytical_problem13]" time="0.020" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle[analytical_problem14]" time="0.021" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle[analytical_problem15]" time="0.020" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle_without_dumps_function[picklable_analytical_problem0]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle_without_dumps_function[picklable_analytical_problem1]" time="0.016" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle_without_dumps_function[picklable_analytical_problem2]" time="0.054" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle_without_dumps_function[picklable_analytical_problem3]" time="0.036" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle_without_dumps_function[picklable_analytical_problem4]" time="0.017" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle_without_dumps_function[picklable_analytical_problem5]" time="0.027" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle_without_dumps_function[picklable_analytical_problem6]" time="0.020" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle_without_dumps_function[picklable_analytical_problem7]" time="0.020" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle_without_dumps_function[picklable_analytical_problem8]" time="0.020" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle_without_dumps_function[picklable_analytical_problem9]" time="0.019" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle_without_dumps_function[picklable_analytical_problem10]" time="0.021" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_pickle_without_dumps_function[picklable_analytical_problem11]" time="0.020" /><testcase classname="src.pymortests.analyticalproblems.analyticalproblem" name="test_missing_font" time="0.021" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_evaluate[function0]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_evaluate[function1]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_evaluate[function2]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_evaluate[function3]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_evaluate[function4]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_evaluate[function5]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_evaluate[function6]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_evaluate[function7]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_evaluate[function8]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_evaluate[function9]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_evaluate[function10]" time="0.016" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_evaluate[function11]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_lincomb_function" time="0.044" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle[function0]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle[function1]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle[function2]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle[function3]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle[function4]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle[function5]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle[function6]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle[function7]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle[function8]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle[function9]" time="0.016" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle[function10]" time="0.016" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle[function11]" time="0.016" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle_without_dumps_function[picklable_function0]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle_without_dumps_function[picklable_function1]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle_without_dumps_function[picklable_function2]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle_without_dumps_function[picklable_function3]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle_without_dumps_function[picklable_function4]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle_without_dumps_function[picklable_function5]" time="0.016" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle_without_dumps_function[picklable_function6]" time="0.016" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle_without_dumps_function[picklable_function7]" time="0.016" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle_by_evaluation[function0]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle_by_evaluation[function1]" time="0.016" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle_by_evaluation[function2]" time="0.016" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle_by_evaluation[function3]" time="0.016" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle_by_evaluation[function4]" time="0.016" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle_by_evaluation[function5]" time="0.016" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle_by_evaluation[function6]" time="0.016" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle_by_evaluation[function7]" time="0.016" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle_by_evaluation[function8]" time="0.015" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle_by_evaluation[function9]" time="0.016" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle_by_evaluation[function10]" time="0.016" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_pickle_by_evaluation[function11]" time="0.017" /><testcase classname="src.pymortests.analyticalproblems.function" name="test_invalid_expressions" time="0.016" /><testcase classname="src.pymortests.analyticalproblems.polygonal_chain" name="test_polygonal_chain_boundary_function" time="0.015" /><testcase classname="src.pymortests.bindings.fenics_expressions" name="test_fenics_expression_vectorized" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency FENICS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency FENICS</skipped></testcase><testcase classname="src.pymortests.bindings.fenics_expressions" name="test_fenics_expression_vectorized2" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency FENICS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency FENICS</skipped></testcase><testcase classname="src.pymortests.bindings.fenics_expressions" name="test_fenics_expression_scalar" time="0.015"><skipped type="pytest.skip" message="skipped test due to missing dependency FENICS">/home/runner/work/pymor/pymor/src/pymortests/base.py:122: skipped test due to missing dependency FENICS</skipped></testcase><testcase classname="src.pymortests.bindings.skfem" name="test_skfem1d" time="0.406" /><testcase classname="src.pymortests.bindings.skfem" name="test_skfem2d" time="1.624" /><testcase classname="src.pymortests.core.base" name="test_with_newtype" time="0.018" /><testcase classname="src.pymortests.core.cache" name="test_runtime[IamMemoryCached]" time="0.217" /><testcase classname="src.pymortests.core.cache" name="test_runtime[IamDiskCached]" time="0.219" /><testcase classname="src.pymortests.core.cache" name="test_region_api" time="0.027" /><testcase classname="src.pymortests.core.cache" name="test_memory_region_safety" time="0.018" /><testcase classname="src.pymortests.core.config" name="test_repr" time="0.760" /><testcase classname="src.pymortests.core.config" name="test_entries" time="0.017" /><testcase classname="src.pymortests.core.config" name="test_dir" time="0.016" /><testcase classname="src.pymortests.core.config" name="test_require_numpy" time="0.016" /><testcase classname="src.pymortests.core.config" name="test_require_fail_foo" time="0.016" /><testcase classname="src.pymortests.core.config" name="test_require_fail_missing_dependency" time="0.016" /><testcase classname="src.pymortests.core.defaults" name="test_defaults" time="0.016" /><testcase classname="src.pymortests.core.defaults" name="test_print_defaults" time="0.374" /><testcase classname="src.pymortests.core.defaults" name="test_write_defaults_to_file" time="0.037" /><testcase classname="src.pymortests.core.defaults" name="test_load_defaults_from_file" time="0.038" /><testcase classname="src.pymortests.core.logger" name="test_logger" time="0.018" /><testcase classname="src.pymortests.core.logger" name="test_empty_log_message" time="0.017" /><testcase classname="src.pymortests.core.logger" name="test_log_levels" time="0.018" /><testcase classname="src.pymortests.core.logger" name="test_once[info]" time="0.017" /><testcase classname="src.pymortests.core.logger" name="test_once[error]" time="0.017" /><testcase classname="src.pymortests.core.logger" name="test_once[fatal]" time="0.017" /><testcase classname="src.pymortests.core.logger" name="test_once[debug]" time="0.017" /><testcase classname="src.pymortests.core.logger" name="test_once[block]" time="0.017" /><testcase classname="src.pymortests.core.logger" name="test_once[info2]" time="0.017" /><testcase classname="src.pymortests.core.logger" name="test_once[info3]" time="0.017" /><testcase classname="src.pymortests.core.logger" name="test_once[warning]" time="0.017" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_reference_element_wrong_arguments" time="0.249" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_reference_element_type" time="0.228" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_reference_element_transitivity" time="0.233" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_embeddings_wrong_arguments" time="0.199" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_embeddings_shape" time="0.300" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_embeddings_transitivity" time="16.825" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_jacobian_inverse_transposed_wrong_arguments" time="0.216" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_jacobian_inverse_transposed_shape" time="1.669" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_jacobian_inverse_transposed_values" time="1.389" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_integration_elements_wrong_arguments" time="0.423" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_integration_elements_shape" time="0.212" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_integration_elements_values" time="0.227" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_volumes_wrong_arguments" time="0.189" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_volumes_shape" time="0.194" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_volumes_values" time="0.191" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_volumes_inverse_wrong_arguments" time="0.270" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_volumes_inverse_shape" time="0.170" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_volumes_inverse_values" time="0.186" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_unit_outer_normals_shape" time="1.498" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_unit_outer_normals_normed" time="1.453" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_unit_outer_normals_normal" time="0.970" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_unit_outer_normals_neighbours" time="4.533" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_centers_wrong_arguments" time="0.327" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_centers_shape" time="0.171" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_centers_values" time="0.203" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_diameters_wrong_arguments" time="0.470" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_diameters_shape" time="1.391" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_diameters_non_negative" time="0.425" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_diameters_values" time="0.718" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_quadrature_points_wrong_arguments" time="0.279" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_quadrature_points_shape" time="0.615" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_quadrature_points_values" time="0.831" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_bounding_box" time="0.313" /><testcase classname="src.pymortests.discretizers.affine_grid" name="test_orthogonal_centers" time="4.960" /><testcase classname="src.pymortests.discretizers.grid" name="test_dim" time="0.156" /><testcase classname="src.pymortests.discretizers.grid" name="test_size" time="0.188" /><testcase classname="src.pymortests.discretizers.grid" name="test_subentities_wrong_arguments" time="0.213" /><testcase classname="src.pymortests.discretizers.grid" name="test_subentities_shape" time="0.447" /><testcase classname="src.pymortests.discretizers.grid" name="test_subentities_dtype" time="0.299" /><testcase classname="src.pymortests.discretizers.grid" name="test_subentities_entry_value_range" time="0.795" /><testcase classname="src.pymortests.discretizers.grid" name="test_subentities_entry_values_unique" time="0.629" /><testcase classname="src.pymortests.discretizers.grid" name="test_subentities_codim_d_codim_d" time="0.484" /><testcase classname="src.pymortests.discretizers.grid" name="test_subentities_transitivity" time="0.260" /><testcase classname="src.pymortests.discretizers.grid" name="test_superentities_wrong_arguments" time="0.282" /><testcase classname="src.pymortests.discretizers.grid" name="test_superentities_shape" time="0.275" /><testcase classname="src.pymortests.discretizers.grid" name="test_superentities_dtype" time="0.265" /><testcase classname="src.pymortests.discretizers.grid" name="test_superentities_entry_value_range" time="0.186" /><testcase classname="src.pymortests.discretizers.grid" name="test_superentities_entry_values_unique" time="0.260" /><testcase classname="src.pymortests.discretizers.grid" name="test_superentities_entries_sorted" time="0.350" /><testcase classname="src.pymortests.discretizers.grid" name="test_superentities_codim_d_codim_d" time="0.311" /><testcase classname="src.pymortests.discretizers.grid" name="test_superentities_each_entry_superentity" time="0.277" /><testcase classname="src.pymortests.discretizers.grid" name="test_superentities_each_superentity_has_entry" time="0.541" /><testcase classname="src.pymortests.discretizers.grid" name="test_superentity_indices_wrong_arguments" time="0.235" /><testcase classname="src.pymortests.discretizers.grid" name="test_superentity_indices_shape" time="0.220" /><testcase classname="src.pymortests.discretizers.grid" name="test_superentity_indices_dtype" time="0.321" /><testcase classname="src.pymortests.discretizers.grid" name="test_superentity_indices_valid_entries" time="0.392" /><testcase classname="src.pymortests.discretizers.grid" name="test_neighbours_wrong_arguments" time="0.311" /><testcase classname="src.pymortests.discretizers.grid" name="test_neighbours_shape" time="0.374" /><testcase classname="src.pymortests.discretizers.grid" name="test_neighbours_dtype" time="0.233" /><testcase classname="src.pymortests.discretizers.grid" name="test_neighbours_entry_value_range" time="0.755" /><testcase classname="src.pymortests.discretizers.grid" name="test_neighbours_entry_values_unique" time="0.677" /><testcase classname="src.pymortests.discretizers.grid" name="test_neighbours_each_entry_neighbour" time="0.273" /><testcase classname="src.pymortests.discretizers.grid" name="test_neighbours_each_neighbour_has_entry" time="0.863" /><testcase classname="src.pymortests.discretizers.grid" name="test_neighbours_not_neighbour_of_itself" time="0.493" /><testcase classname="src.pymortests.discretizers.grid" name="test_boundary_mask_wrong_arguments" time="0.226" /><testcase classname="src.pymortests.discretizers.grid" name="test_boundary_mask_shape" time="0.663" /><testcase classname="src.pymortests.discretizers.grid" name="test_boundary_mask_dtype" time="0.240" /><testcase classname="src.pymortests.discretizers.grid" name="test_boundary_mask_entries_codim1" time="0.393" /><testcase classname="src.pymortests.discretizers.grid" name="test_boundary_mask_entries_codim0" time="0.433" /><testcase classname="src.pymortests.discretizers.grid" name="test_boundary_mask_entries_codim_d" time="0.430" /><testcase classname="src.pymortests.discretizers.grid" name="test_boundaries_wrong_arguments" time="0.249" /><testcase classname="src.pymortests.discretizers.grid" name="test_boundaries_shape" time="0.283" /><testcase classname="src.pymortests.discretizers.grid" name="test_boundaries_dtype" time="0.328" /><testcase classname="src.pymortests.discretizers.grid" name="test_boundaries_entry_value_range" time="0.240" /><testcase classname="src.pymortests.discretizers.grid" name="test_boundaries_entries" time="0.388" /><testcase classname="src.pymortests.discretizers.grid" name="test_pickle" time="0.191" /><testcase classname="src.pymortests.discretizers.grid" name="test_visualize" time="9.984" /><testcase classname="src.pymortests.discretizers.gui" name="test_visualize_patch[backend_gridtype0]" time="1.278" /><testcase classname="src.pymortests.discretizers.gui" name="test_visualize_patch[backend_gridtype1]" time="0.765" /><testcase classname="src.pymortests.discretizers.gui" name="test_visualize_patch[backend_gridtype2]" time="1.061" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-LTIModel-LTIModel]" time="0.041" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-LTIModel-SecondOrderModel]" time="0.055" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-LTIModel-LinearDelayModel]" time="0.041" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-LTIModel-TransferFunction]" time="0.024" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-LTIModel-FactorizedTransferFunction]" time="0.039" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-SecondOrderModel-LTIModel]" time="0.054" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-SecondOrderModel-SecondOrderModel]" time="0.046" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-SecondOrderModel-LinearDelayModel]" time="0.058" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-SecondOrderModel-TransferFunction]" time="0.028" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-SecondOrderModel-FactorizedTransferFunction]" time="0.045" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-LinearDelayModel-LTIModel]" time="0.042" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-LinearDelayModel-SecondOrderModel]" time="0.059" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-LinearDelayModel-LinearDelayModel]" time="0.042" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-LinearDelayModel-TransferFunction]" time="0.025" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-LinearDelayModel-FactorizedTransferFunction]" time="0.040" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-TransferFunction-LTIModel]" time="0.024" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-TransferFunction-SecondOrderModel]" time="0.027" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-TransferFunction-LinearDelayModel]" time="0.023" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-TransferFunction-TransferFunction]" time="0.018" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-TransferFunction-FactorizedTransferFunction]" time="0.021" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-FactorizedTransferFunction-LTIModel]" time="0.038" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-FactorizedTransferFunction-SecondOrderModel]" time="0.044" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-FactorizedTransferFunction-LinearDelayModel]" time="0.039" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-FactorizedTransferFunction-TransferFunction]" time="0.021" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[0-FactorizedTransferFunction-FactorizedTransferFunction]" time="0.035" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-LTIModel-LTIModel]" time="0.039" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-LTIModel-SecondOrderModel]" time="0.055" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-LTIModel-LinearDelayModel]" time="0.040" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-LTIModel-TransferFunction]" time="0.023" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-LTIModel-FactorizedTransferFunction]" time="0.039" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-SecondOrderModel-LTIModel]" time="0.054" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-SecondOrderModel-SecondOrderModel]" time="0.047" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-SecondOrderModel-LinearDelayModel]" time="0.058" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-SecondOrderModel-TransferFunction]" time="0.028" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-SecondOrderModel-FactorizedTransferFunction]" time="0.044" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-LinearDelayModel-LTIModel]" time="0.041" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-LinearDelayModel-SecondOrderModel]" time="0.058" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-LinearDelayModel-LinearDelayModel]" time="0.041" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-LinearDelayModel-TransferFunction]" time="0.024" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-LinearDelayModel-FactorizedTransferFunction]" time="0.039" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-TransferFunction-LTIModel]" time="0.024" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-TransferFunction-SecondOrderModel]" time="0.027" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-TransferFunction-LinearDelayModel]" time="0.024" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-TransferFunction-TransferFunction]" time="0.018" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-TransferFunction-FactorizedTransferFunction]" time="0.021" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-FactorizedTransferFunction-LTIModel]" time="0.039" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-FactorizedTransferFunction-SecondOrderModel]" time="0.045" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-FactorizedTransferFunction-LinearDelayModel]" time="0.040" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-FactorizedTransferFunction-TransferFunction]" time="0.022" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add[1-FactorizedTransferFunction-FactorizedTransferFunction]" time="0.036" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-LTIModel-LTIModel]" time="0.042" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-LTIModel-SecondOrderModel]" time="0.055" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-LTIModel-LinearDelayModel]" time="0.041" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-LTIModel-TransferFunction]" time="0.029" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-LTIModel-FactorizedTransferFunction]" time="0.039" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-SecondOrderModel-LTIModel]" time="0.056" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-SecondOrderModel-SecondOrderModel]" time="0.049" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-SecondOrderModel-LinearDelayModel]" time="0.060" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-SecondOrderModel-TransferFunction]" time="0.036" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-SecondOrderModel-FactorizedTransferFunction]" time="0.046" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-LinearDelayModel-LTIModel]" time="0.042" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-LinearDelayModel-SecondOrderModel]" time="0.059" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-LinearDelayModel-LinearDelayModel]" time="0.042" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-LinearDelayModel-TransferFunction]" time="0.031" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-LinearDelayModel-FactorizedTransferFunction]" time="0.041" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-TransferFunction-LTIModel]" time="0.024" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-TransferFunction-SecondOrderModel]" time="0.027" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-TransferFunction-LinearDelayModel]" time="0.024" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-TransferFunction-TransferFunction]" time="0.019" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-TransferFunction-FactorizedTransferFunction]" time="0.022" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-FactorizedTransferFunction-LTIModel]" time="0.041" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-FactorizedTransferFunction-SecondOrderModel]" time="0.046" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-FactorizedTransferFunction-LinearDelayModel]" time="0.041" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-FactorizedTransferFunction-TransferFunction]" time="0.026" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[0-FactorizedTransferFunction-FactorizedTransferFunction]" time="0.036" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-LTIModel-LTIModel]" time="0.040" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-LTIModel-SecondOrderModel]" time="0.056" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-LTIModel-LinearDelayModel]" time="0.042" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-LTIModel-TransferFunction]" time="0.029" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-LTIModel-FactorizedTransferFunction]" time="0.040" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-SecondOrderModel-LTIModel]" time="0.056" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-SecondOrderModel-SecondOrderModel]" time="0.049" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-SecondOrderModel-LinearDelayModel]" time="0.061" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-SecondOrderModel-TransferFunction]" time="0.036" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-SecondOrderModel-FactorizedTransferFunction]" time="0.047" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-LinearDelayModel-LTIModel]" time="0.043" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-LinearDelayModel-SecondOrderModel]" time="0.059" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-LinearDelayModel-LinearDelayModel]" time="0.042" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-LinearDelayModel-TransferFunction]" time="0.029" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-LinearDelayModel-FactorizedTransferFunction]" time="0.040" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-TransferFunction-LTIModel]" time="0.024" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-TransferFunction-SecondOrderModel]" time="0.028" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-TransferFunction-LinearDelayModel]" time="0.024" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-TransferFunction-TransferFunction]" time="0.019" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-TransferFunction-FactorizedTransferFunction]" time="0.022" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-FactorizedTransferFunction-LTIModel]" time="0.040" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-FactorizedTransferFunction-SecondOrderModel]" time="0.046" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-FactorizedTransferFunction-LinearDelayModel]" time="0.041" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-FactorizedTransferFunction-TransferFunction]" time="0.026" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub[1-FactorizedTransferFunction-FactorizedTransferFunction]" time="0.036" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-LTIModel-LTIModel]" time="0.056" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-LTIModel-SecondOrderModel]" time="0.082" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-LTIModel-LinearDelayModel]" time="0.056" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-LTIModel-TransferFunction]" time="0.025" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-LTIModel-FactorizedTransferFunction]" time="0.058" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-SecondOrderModel-LTIModel]" time="0.082" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-SecondOrderModel-SecondOrderModel]" time="0.072" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-SecondOrderModel-LinearDelayModel]" time="0.082" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-SecondOrderModel-TransferFunction]" time="0.029" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-SecondOrderModel-FactorizedTransferFunction]" time="0.066" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-LinearDelayModel-LTIModel]" time="0.057" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-LinearDelayModel-SecondOrderModel]" time="0.082" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-LinearDelayModel-LinearDelayModel]" time="0.057" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-LinearDelayModel-TransferFunction]" time="0.025" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-LinearDelayModel-FactorizedTransferFunction]" time="0.058" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-TransferFunction-LTIModel]" time="0.025" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-TransferFunction-SecondOrderModel]" time="0.028" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-TransferFunction-LinearDelayModel]" time="0.024" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-TransferFunction-TransferFunction]" time="0.019" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-TransferFunction-FactorizedTransferFunction]" time="0.021" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-FactorizedTransferFunction-LTIModel]" time="0.057" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-FactorizedTransferFunction-SecondOrderModel]" time="0.063" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-FactorizedTransferFunction-LinearDelayModel]" time="0.058" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-FactorizedTransferFunction-TransferFunction]" time="0.022" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[0-FactorizedTransferFunction-FactorizedTransferFunction]" time="0.053" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-LTIModel-LTIModel]" time="0.056" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-LTIModel-SecondOrderModel]" time="0.081" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-LTIModel-LinearDelayModel]" time="0.056" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-LTIModel-TransferFunction]" time="0.024" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-LTIModel-FactorizedTransferFunction]" time="0.058" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-SecondOrderModel-LTIModel]" time="0.083" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-SecondOrderModel-SecondOrderModel]" time="0.072" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-SecondOrderModel-LinearDelayModel]" time="0.082" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-SecondOrderModel-TransferFunction]" time="0.028" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-SecondOrderModel-FactorizedTransferFunction]" time="0.065" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-LinearDelayModel-LTIModel]" time="0.056" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-LinearDelayModel-SecondOrderModel]" time="0.080" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-LinearDelayModel-LinearDelayModel]" time="0.056" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-LinearDelayModel-TransferFunction]" time="0.025" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-LinearDelayModel-FactorizedTransferFunction]" time="0.059" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-TransferFunction-LTIModel]" time="0.024" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-TransferFunction-SecondOrderModel]" time="0.028" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-TransferFunction-LinearDelayModel]" time="0.025" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-TransferFunction-TransferFunction]" time="0.020" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-TransferFunction-FactorizedTransferFunction]" time="0.022" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-FactorizedTransferFunction-LTIModel]" time="0.058" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-FactorizedTransferFunction-SecondOrderModel]" time="0.063" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-FactorizedTransferFunction-LinearDelayModel]" time="0.058" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-FactorizedTransferFunction-TransferFunction]" time="0.022" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul[1-FactorizedTransferFunction-FactorizedTransferFunction]" time="0.054" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add_ph[True-LTIModel]" time="0.048" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add_ph[True-SecondOrderModel]" time="0.062" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add_ph[True-LinearDelayModel]" time="0.049" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add_ph[True-TransferFunction]" time="0.028" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add_ph[True-FactorizedTransferFunction]" time="0.047" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add_ph[True-PHLTIModel]" time="0.057" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add_ph[False-LTIModel]" time="0.048" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add_ph[False-SecondOrderModel]" time="0.062" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add_ph[False-LinearDelayModel]" time="0.049" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add_ph[False-TransferFunction]" time="0.028" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add_ph[False-FactorizedTransferFunction]" time="0.047" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_add_ph[False-PHLTIModel]" time="0.058" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub_ph[True-LTIModel]" time="0.048" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub_ph[True-SecondOrderModel]" time="0.063" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub_ph[True-LinearDelayModel]" time="0.050" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub_ph[True-TransferFunction]" time="0.029" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub_ph[True-FactorizedTransferFunction]" time="0.048" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub_ph[True-PHLTIModel]" time="0.053" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub_ph[False-LTIModel]" time="0.048" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub_ph[False-SecondOrderModel]" time="0.063" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub_ph[False-LinearDelayModel]" time="0.050" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub_ph[False-TransferFunction]" time="0.034" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub_ph[False-FactorizedTransferFunction]" time="0.046" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_sub_ph[False-PHLTIModel]" time="0.055" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul_ph[True-LTIModel]" time="0.066" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul_ph[True-SecondOrderModel]" time="0.090" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul_ph[True-LinearDelayModel]" time="0.067" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul_ph[True-TransferFunction]" time="0.034" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul_ph[True-FactorizedTransferFunction]" time="0.066" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul_ph[True-PHLTIModel]" time="0.073" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul_ph[False-LTIModel]" time="0.066" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul_ph[False-SecondOrderModel]" time="0.090" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul_ph[False-LinearDelayModel]" time="0.066" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul_ph[False-TransferFunction]" time="0.029" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul_ph[False-FactorizedTransferFunction]" time="0.071" /><testcase classname="src.pymortests.models.iosys_add_sub_mul" name="test_mul_ph[False-PHLTIModel]" time="0.074" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_matrices_lti[False-False]" time="0.018" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_matrices_lti[False-True]" time="0.018" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_matrices_lti[True-False]" time="0.018" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_matrices_lti[True-True]" time="0.017" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_files_lti[False-False]" time="0.022" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_files_lti[False-True]" time="0.022" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_files_lti[True-False]" time="0.023" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_files_lti[True-True]" time="0.024" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_mat_file_lti[False-False]" time="0.020" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_mat_file_lti[False-True]" time="0.019" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_mat_file_lti[True-False]" time="0.020" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_mat_file_lti[True-True]" time="0.020" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_mat_file_lti_C" time="0.018" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_abcde_files[False-False]" time="0.022" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_abcde_files[False-True]" time="0.022" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_abcde_files[True-False]" time="0.022" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_abcde_files[True-True]" time="0.023" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_matrices_so[False-False]" time="0.024" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_matrices_so[False-True]" time="0.019" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_matrices_so[True-False]" time="0.021" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_matrices_so[True-True]" time="0.048" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_files_so[False-False]" time="0.026" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_files_so[False-True]" time="0.027" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_files_so[True-False]" time="0.027" /><testcase classname="src.pymortests.models.iosys_save_load" name="test_files_so[True-True]" time="0.027" /><testcase classname="src.pymortests.models.model" name="test_pickle[&lt;lambda&gt;0]" time="0.302" /><testcase classname="src.pymortests.models.model" name="test_pickle[&lt;lambda&gt;1]" time="1.055" /><testcase classname="src.pymortests.models.model" name="test_pickle[&lt;lambda&gt;2]" time="0.255" /><testcase classname="src.pymortests.models.model" name="test_pickle[&lt;lambda&gt;3]" time="0.874" /><testcase classname="src.pymortests.models.model" name="test_pickle[&lt;lambda&gt;4]" time="0.174" /><testcase classname="src.pymortests.models.model" name="test_pickle[&lt;lambda&gt;5]" time="0.576" /><testcase classname="src.pymortests.models.model" name="test_pickle[&lt;lambda&gt;6]" time="0.222" /><testcase classname="src.pymortests.models.model" name="test_pickle[&lt;lambda&gt;7]" time="0.751" /><testcase classname="src.pymortests.models.model" name="test_pickle[&lt;lambda&gt;8]" time="0.025" /><testcase classname="src.pymortests.models.model" name="test_pickle[&lt;lambda&gt;9]" time="0.023" /><testcase classname="src.pymortests.models.model" name="test_pickle[&lt;lambda&gt;10]" time="0.024" /><testcase classname="src.pymortests.models.model" name="test_pickle[&lt;lambda&gt;11]" time="0.024" /><testcase classname="src.pymortests.models.model" name="test_pickle[&lt;lambda&gt;12]" time="0.023" /><testcase classname="src.pymortests.models.model" name="test_pickle[&lt;lambda&gt;13]" time="0.023" /><testcase classname="src.pymortests.models.model" name="test_pickle[&lt;lambda&gt;14]" time="0.023" /><testcase classname="src.pymortests.models.model" name="test_pickle[&lt;lambda&gt;15]" time="0.022" /><testcase classname="src.pymortests.models.model" name="test_pickle[&lt;lambda&gt;16]" time="0.025" /><testcase classname="src.pymortests.models.model" name="test_pickle[&lt;lambda&gt;17]" time="0.026" /><testcase classname="src.pymortests.models.model" name="test_pickle[&lt;lambda&gt;18]" time="0.033" /><testcase classname="src.pymortests.models.model" name="test_pickle[&lt;lambda&gt;19]" time="0.039" /><testcase classname="src.pymortests.models.model" name="test_pickle[&lt;lambda&gt;20]" time="0.065" /><testcase classname="src.pymortests.models.model" name="test_pickle[&lt;lambda&gt;21]" time="0.099" /><testcase classname="src.pymortests.models.model" name="test_pickle_without_dumps_function[&lt;lambda&gt;0]" time="0.303" /><testcase classname="src.pymortests.models.model" name="test_pickle_without_dumps_function[&lt;lambda&gt;1]" time="1.053" /><testcase classname="src.pymortests.models.model" name="test_pickle_without_dumps_function[&lt;lambda&gt;2]" time="0.253" /><testcase classname="src.pymortests.models.model" name="test_pickle_without_dumps_function[&lt;lambda&gt;3]" time="0.872" /><testcase classname="src.pymortests.models.model" name="test_pickle_without_dumps_function[&lt;lambda&gt;4]" time="0.174" /><testcase classname="src.pymortests.models.model" name="test_pickle_without_dumps_function[&lt;lambda&gt;5]" time="0.574" /><testcase classname="src.pymortests.models.model" name="test_pickle_without_dumps_function[&lt;lambda&gt;6]" time="0.220" /><testcase classname="src.pymortests.models.model" name="test_pickle_without_dumps_function[&lt;lambda&gt;7]" time="0.748" /><testcase classname="src.pymortests.models.model" name="test_pickle_without_dumps_function[&lt;lambda&gt;8]" time="0.024" /><testcase classname="src.pymortests.models.model" name="test_pickle_without_dumps_function[&lt;lambda&gt;9]" time="0.023" /><testcase classname="src.pymortests.models.model" name="test_pickle_without_dumps_function[&lt;lambda&gt;10]" time="0.026" /><testcase classname="src.pymortests.models.model" name="test_pickle_without_dumps_function[&lt;lambda&gt;11]" time="0.025" /><testcase classname="src.pymortests.models.model" name="test_pickle_without_dumps_function[&lt;lambda&gt;12]" time="0.023" /><testcase classname="src.pymortests.models.model" name="test_pickle_without_dumps_function[&lt;lambda&gt;13]" time="0.023" /><testcase classname="src.pymortests.models.model" name="test_pickle_without_dumps_function[&lt;lambda&gt;14]" time="0.024" /><testcase classname="src.pymortests.models.model" name="test_pickle_without_dumps_function[&lt;lambda&gt;15]" time="0.024" /><testcase classname="src.pymortests.models.model" name="test_pickle_without_dumps_function[&lt;lambda&gt;16]" time="0.026" /><testcase classname="src.pymortests.models.model" name="test_pickle_without_dumps_function[&lt;lambda&gt;17]" time="0.026" /><testcase classname="src.pymortests.models.model" name="test_pickle_without_dumps_function[&lt;lambda&gt;18]" time="0.033" /><testcase classname="src.pymortests.models.model" name="test_pickle_without_dumps_function[&lt;lambda&gt;19]" time="0.038" /><testcase classname="src.pymortests.models.model" name="test_pickle_by_solving[&lt;lambda&gt;0]" time="0.386" /><testcase classname="src.pymortests.models.model" name="test_pickle_by_solving[&lt;lambda&gt;1]" time="1.488" /><testcase classname="src.pymortests.models.model" name="test_pickle_by_solving[&lt;lambda&gt;2]" time="0.336" /><testcase classname="src.pymortests.models.model" name="test_pickle_by_solving[&lt;lambda&gt;3]" time="1.289" /><testcase classname="src.pymortests.models.model" name="test_pickle_by_solving[&lt;lambda&gt;4]" time="0.252" /><testcase classname="src.pymortests.models.model" name="test_pickle_by_solving[&lt;lambda&gt;5]" time="0.987" /><testcase classname="src.pymortests.models.model" name="test_pickle_by_solving[&lt;lambda&gt;6]" time="0.303" /><testcase classname="src.pymortests.models.model" name="test_pickle_by_solving[&lt;lambda&gt;7]" time="1.178" /><testcase classname="src.pymortests.models.model" name="test_pickle_by_solving[&lt;lambda&gt;8]" time="0.140" /><testcase classname="src.pymortests.models.model" name="test_pickle_by_solving[&lt;lambda&gt;9]" time="0.141" /><testcase classname="src.pymortests.models.model" name="test_pickle_by_solving[&lt;lambda&gt;10]" time="0.167" /><testcase classname="src.pymortests.models.model" name="test_pickle_by_solving[&lt;lambda&gt;11]" time="0.170" /><testcase classname="src.pymortests.models.model" name="test_pickle_by_solving[&lt;lambda&gt;12]" time="0.140" /><testcase classname="src.pymortests.models.model" name="test_pickle_by_solving[&lt;lambda&gt;13]" time="0.142" /><testcase classname="src.pymortests.models.model" name="test_pickle_by_solving[&lt;lambda&gt;14]" time="0.139" /><testcase classname="src.pymortests.models.model" name="test_pickle_by_solving[&lt;lambda&gt;15]" time="0.141" /><testcase classname="src.pymortests.models.model" name="test_pickle_by_solving[&lt;lambda&gt;16]" time="0.488" /><testcase classname="src.pymortests.models.model" name="test_pickle_by_solving[&lt;lambda&gt;17]" time="0.893" /><testcase classname="src.pymortests.models.model" name="test_pickle_by_solving[&lt;lambda&gt;18]" time="0.544" /><testcase classname="src.pymortests.models.model" name="test_pickle_by_solving[&lt;lambda&gt;19]" time="0.956" /><testcase classname="src.pymortests.models.model" name="test_pickle_by_solving[&lt;lambda&gt;20]" time="0.082" /><testcase classname="src.pymortests.models.model" name="test_pickle_by_solving[&lt;lambda&gt;21]" time="0.129" /><testcase classname="src.pymortests.models.model" name="test_StationaryModel_deaffinize" time="0.059" /><testcase classname="src.pymortests.models.model" name="test_quadratic_hamiltonian_model[False]" time="0.042" /><testcase classname="src.pymortests.models.model" name="test_quadratic_hamiltonian_model[True]" time="0.039" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[0-1-1-4-4]" time="0.024" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[0-1-1-4-5]" time="0.024" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[0-1-1-5-4]" time="0.024" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[0-1-1-5-5]" time="0.024" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[0-1-2-4-4]" time="0.024" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[0-1-2-4-5]" time="0.024" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[0-1-2-5-4]" time="0.024" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[0-1-2-5-5]" time="0.024" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[0-2-1-4-4]" time="0.026" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[0-2-1-4-5]" time="0.027" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[0-2-1-5-4]" time="0.026" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[0-2-1-5-5]" time="0.027" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[0-2-2-4-4]" time="0.026" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[0-2-2-4-5]" time="0.027" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[0-2-2-5-4]" time="0.026" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[0-2-2-5-5]" time="0.027" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[1-1-1-4-4]" time="0.025" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[1-1-1-4-5]" time="0.025" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[1-1-1-5-4]" time="0.025" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[1-1-1-5-5]" time="0.025" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[1-1-2-4-4]" time="0.024" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[1-1-2-4-5]" time="0.024" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[1-1-2-5-4]" time="0.025" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[1-1-2-5-5]" time="0.025" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[1-2-1-4-4]" time="0.028" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[1-2-1-4-5]" time="0.028" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[1-2-1-5-4]" time="0.029" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[1-2-1-5-5]" time="0.030" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[1-2-2-4-4]" time="0.028" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[1-2-2-4-5]" time="0.028" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[1-2-2-5-4]" time="0.030" /><testcase classname="src.pymortests.models.model" name="test_lti_solve[1-2-2-5-5]" time="0.029" /><testcase classname="src.pymortests.models.transforms" name="test_inv[BilinearTransformation]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_inv[CayleyTransformation]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_inv[MoebiusTransformation]" time="0.016" /><testcase classname="src.pymortests.models.transforms" name="test_matmul[BilinearTransformation-BilinearTransformation]" time="0.016" /><testcase classname="src.pymortests.models.transforms" name="test_matmul[BilinearTransformation-CayleyTransformation]" time="0.016" /><testcase classname="src.pymortests.models.transforms" name="test_matmul[BilinearTransformation-MoebiusTransformation]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_matmul[CayleyTransformation-BilinearTransformation]" time="0.016" /><testcase classname="src.pymortests.models.transforms" name="test_matmul[CayleyTransformation-CayleyTransformation]" time="0.016" /><testcase classname="src.pymortests.models.transforms" name="test_matmul[CayleyTransformation-MoebiusTransformation]" time="0.016" /><testcase classname="src.pymortests.models.transforms" name="test_matmul[MoebiusTransformation-BilinearTransformation]" time="0.016" /><testcase classname="src.pymortests.models.transforms" name="test_matmul[MoebiusTransformation-CayleyTransformation]" time="0.016" /><testcase classname="src.pymortests.models.transforms" name="test_matmul[MoebiusTransformation-MoebiusTransformation]" time="0.016" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p20-p10]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p20-p11]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p20-p12]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p20-p13]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p20-p14]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p20-p15]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p20-p16]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p20-p17]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p20-p18]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p20-p19]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p20-p110]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p20-p111]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p20-p112]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p20-p113]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p20-p114]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p20-p115]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p20-p116]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p20-p117]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p20-p118]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p20-p119]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p21-p10]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p21-p11]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p21-p12]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p21-p13]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p21-p14]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p21-p15]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p21-p16]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p21-p17]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p21-p18]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p21-p19]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p21-p110]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p21-p111]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p21-p112]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p21-p113]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p21-p114]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p21-p115]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p21-p116]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p21-p117]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p21-p118]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p21-p119]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p22-p10]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p22-p11]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p22-p12]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p22-p13]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p22-p14]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p22-p15]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p22-p16]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p22-p17]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p22-p18]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p22-p19]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p22-p110]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p22-p111]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p22-p112]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p22-p113]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p22-p114]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p22-p115]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p22-p116]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p22-p117]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p22-p118]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p22-p119]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p23-p10]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p23-p11]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p23-p12]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p23-p13]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p23-p14]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p23-p15]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p23-p16]" time="0.016" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p23-p17]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p23-p18]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p23-p19]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p23-p110]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p23-p111]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p23-p112]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p23-p113]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p23-p114]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p23-p115]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p23-p116]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p23-p117]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p23-p118]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p23-p119]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p24-p10]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p24-p11]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p24-p12]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p24-p13]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p24-p14]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p24-p15]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p24-p16]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p24-p17]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p24-p18]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p24-p19]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p24-p110]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p24-p111]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p24-p112]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p24-p113]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p24-p114]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p24-p115]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p24-p116]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p24-p117]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p24-p118]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p24-p119]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p25-p10]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p25-p11]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p25-p12]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p25-p13]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p25-p14]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p25-p15]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p25-p16]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p25-p17]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p25-p18]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p25-p19]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p25-p110]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p25-p111]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p25-p112]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p25-p113]" time="0.018" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p25-p114]" time="0.018" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p25-p115]" time="0.018" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p25-p116]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p25-p117]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p25-p118]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p25-p119]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p26-p10]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p26-p11]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p26-p12]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p26-p13]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p26-p14]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p26-p15]" time="0.018" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p26-p16]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p26-p17]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p26-p18]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p26-p19]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p26-p110]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p26-p111]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p26-p112]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p26-p113]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p26-p114]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p26-p115]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p26-p116]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p26-p117]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p26-p118]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p26-p119]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p27-p10]" time="0.016" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p27-p11]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p27-p12]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p27-p13]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p27-p14]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p27-p15]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p27-p16]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p27-p17]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p27-p18]" time="0.016" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p27-p19]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p27-p110]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p27-p111]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p27-p112]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p27-p113]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p27-p114]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p27-p115]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p27-p116]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p27-p117]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p27-p118]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p27-p119]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p28-p10]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p28-p11]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p28-p12]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p28-p13]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p28-p14]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p28-p15]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p28-p16]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p28-p17]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p28-p18]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p28-p19]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p28-p110]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p28-p111]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p28-p112]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p28-p113]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p28-p114]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p28-p115]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p28-p116]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p28-p117]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p28-p118]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p28-p119]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p29-p10]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p29-p11]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p29-p12]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p29-p13]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p29-p14]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p29-p15]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p29-p16]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p29-p17]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p29-p18]" time="0.018" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p29-p19]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p29-p110]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p29-p111]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p29-p112]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p29-p113]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p29-p114]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p29-p115]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p29-p116]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p29-p117]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p29-p118]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p29-p119]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p210-p10]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p210-p11]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p210-p12]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p210-p13]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p210-p14]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p210-p15]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p210-p16]" time="0.018" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p210-p17]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p210-p18]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p210-p19]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p210-p110]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p210-p111]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p210-p112]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p210-p113]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p210-p114]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p210-p115]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p210-p116]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p210-p117]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p210-p118]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p210-p119]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p211-p10]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p211-p11]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p211-p12]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p211-p13]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p211-p14]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p211-p15]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p211-p16]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p211-p17]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p211-p18]" time="0.016" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p211-p19]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p211-p110]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p211-p111]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p211-p112]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p211-p113]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p211-p114]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p211-p115]" time="0.016" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p211-p116]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p211-p117]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p211-p118]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p211-p119]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p212-p10]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p212-p11]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p212-p12]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p212-p13]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p212-p14]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p212-p15]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p212-p16]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p212-p17]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p212-p18]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p212-p19]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p212-p110]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p212-p111]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p212-p112]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p212-p113]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p212-p114]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p212-p115]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p212-p116]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p212-p117]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p212-p118]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p212-p119]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p213-p10]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p213-p11]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p213-p12]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p213-p13]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p213-p14]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p213-p15]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p213-p16]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p213-p17]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p213-p18]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p213-p19]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p213-p110]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p213-p111]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p213-p112]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p213-p113]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p213-p114]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p213-p115]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p213-p116]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p213-p117]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p213-p118]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p213-p119]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p214-p10]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p214-p11]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p214-p12]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p214-p13]" time="0.016" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p214-p14]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p214-p15]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p214-p16]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p214-p17]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p214-p18]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p214-p19]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p214-p110]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p214-p111]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p214-p112]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p214-p113]" time="0.018" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p214-p114]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p214-p115]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p214-p116]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p214-p117]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p214-p118]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p214-p119]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p215-p10]" time="0.018" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p215-p11]" time="0.018" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p215-p12]" time="0.018" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p215-p13]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p215-p14]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p215-p15]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p215-p16]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p215-p17]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p215-p18]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p215-p19]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p215-p110]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p215-p111]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p215-p112]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p215-p113]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p215-p114]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p215-p115]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p215-p116]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p215-p117]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p215-p118]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p215-p119]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p216-p10]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p216-p11]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p216-p12]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p216-p13]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p216-p14]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p216-p15]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p216-p16]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p216-p17]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p216-p18]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p216-p19]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p216-p110]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p216-p111]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p216-p112]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p216-p113]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p216-p114]" time="0.016" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p216-p115]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p216-p116]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p216-p117]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p216-p118]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p216-p119]" time="0.016" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p217-p10]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p217-p11]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p217-p12]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p217-p13]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p217-p14]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p217-p15]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p217-p16]" time="0.016" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p217-p17]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p217-p18]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p217-p19]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p217-p110]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p217-p111]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p217-p112]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p217-p113]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p217-p114]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p217-p115]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p217-p116]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p217-p117]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p217-p118]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p217-p119]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p218-p10]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p218-p11]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p218-p12]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p218-p13]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p218-p14]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p218-p15]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p218-p16]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p218-p17]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p218-p18]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p218-p19]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p218-p110]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p218-p111]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p218-p112]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p218-p113]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p218-p114]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p218-p115]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p218-p116]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p218-p117]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p218-p118]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p218-p119]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p219-p10]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p219-p11]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p219-p12]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p219-p13]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p219-p14]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p219-p15]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p219-p16]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p219-p17]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p219-p18]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p219-p19]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p219-p110]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p219-p111]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p219-p112]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p219-p113]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p219-p114]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p219-p115]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p219-p116]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p219-p117]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p219-p118]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_from_points[p219-p119]" time="0.017" /><testcase classname="src.pymortests.models.transforms" name="test_substitution[0]" time="0.018" /><testcase classname="src.pymortests.models.transforms" name="test_substitution[0.01]" time="0.018" /><testcase classname="src.pymortests.models.transforms" name="test_substitution[2]" time="0.018" /><testcase classname="src.pymortests.operators.block" name="test_apply" time="0.017" /><testcase classname="src.pymortests.operators.block" name="test_apply_adjoint" time="0.017" /><testcase classname="src.pymortests.operators.block" name="test_block_diagonal" time="0.016" /><testcase classname="src.pymortests.operators.block" name="test_blk_diag_apply_inverse" time="0.017" /><testcase classname="src.pymortests.operators.block" name="test_blk_diag_apply_inverse_adjoint" time="0.017" /><testcase classname="src.pymortests.operators.la" name="test_induced" time="0.022" /><testcase classname="src.pymortests.operators.low_rank_op" name="test_low_rank_apply" time="0.017" /><testcase classname="src.pymortests.operators.low_rank_op" name="test_low_rank_apply_adjoint" time="0.017" /><testcase classname="src.pymortests.operators.low_rank_op" name="test_low_rank_updated_apply_inverse" time="0.018" /><testcase classname="src.pymortests.operators.low_rank_op" name="test_low_rank_updated_apply_inverse_adjoint" time="0.018" /><testcase classname="src.pymortests.operators.low_rank_op" name="test_low_rank_assemble" time="0.018" /><testcase classname="src.pymortests.operators.low_rank_op" name="test_low_rank_updated_assemble" time="0.018" /><testcase classname="src.pymortests.operators.low_rank_op" name="test_low_rank_updated_assemble_apply" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_selection_op" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_lincomb_op" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_lincomb_op_with_zero_coefficients" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_lincomb_adjoint" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_identity_lincomb" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_identity_numpy_lincomb" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_block_identity_lincomb" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;0]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;1]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;2]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;3]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;4]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;5]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;6]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;7]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;8]" time="0.044" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;9]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;10]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;11]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;12]" time="0.045" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;13]" time="0.037" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;14]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;15]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;16]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;17]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;18]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;19]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;20]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;21]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;22]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;23]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;24]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;25]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;26]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;27]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;28]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;29]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;30]" time="0.045" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;31]" time="0.037" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;32]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;33]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;34]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;35]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;36]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;37]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;38]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;39]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;40]" time="0.028" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;41]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;42]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;43]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;44]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;45]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_pickle[&lt;lambda&gt;46]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;0]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;1]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;2]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;3]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;4]" time="0.024" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;5]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;6]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;7]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;8]" time="0.044" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;9]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;10]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;11]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;12]" time="0.045" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;13]" time="0.037" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;14]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;15]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;16]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;17]" time="0.038" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;18]" time="0.044" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;19]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;20]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;21]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;22]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;23]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;24]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;25]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;26]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;27]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;28]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;29]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;30]" time="0.044" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;31]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;32]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;33]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;34]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;35]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;36]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;37]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;38]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;39]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;40]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;41]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;42]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;43]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;44]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_pickle_without_dumps_function[&lt;lambda&gt;45]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;0]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;1]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;2]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;3]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;4]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;5]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;6]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;7]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;8]" time="0.054" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;9]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;10]" time="0.047" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;11]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;12]" time="0.054" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;13]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;14]" time="0.044" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;15]" time="0.038" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;16]" time="0.044" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;17]" time="0.038" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;18]" time="0.045" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;19]" time="0.038" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;20]" time="0.045" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;21]" time="0.038" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;22]" time="0.045" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;23]" time="0.038" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;24]" time="0.045" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;25]" time="0.039" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;26]" time="0.046" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;27]" time="0.039" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;28]" time="0.046" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;29]" time="0.039" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;30]" time="0.054" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;31]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;32]" time="0.027" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;33]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;34]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;35]" time="0.024" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;36]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;37]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;38]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;39]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;40]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;41]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;42]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;43]" time="0.027" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;44]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;45]" time="0.030" /><testcase classname="src.pymortests.operators.operators" name="test_apply[&lt;lambda&gt;46]" time="0.026" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;0]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;1]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;2]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;3]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;4]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;5]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;6]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;7]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;8]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;9]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;10]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;11]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;12]" time="0.044" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;13]" time="0.037" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;14]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;15]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;16]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;17]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;18]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;19]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;20]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;21]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;22]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;23]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;24]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;25]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;26]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;27]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;28]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;29]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;30]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;31]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;32]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;33]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;34]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;35]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;36]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;37]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;38]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;39]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;40]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;41]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;42]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;43]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;44]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;45]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_mul[&lt;lambda&gt;46]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;0]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;1]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;2]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;3]" time="0.025" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;4]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;5]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;6]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;7]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;8]" time="0.044" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;9]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;10]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;11]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;12]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;13]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;14]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;15]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;16]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;17]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;18]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;19]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;20]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;21]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;22]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;23]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;24]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;25]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;26]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;27]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;28]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;29]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;30]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;31]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;32]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;33]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;34]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;35]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;36]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;37]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;38]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;39]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;40]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;41]" time="0.024" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;42]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;43]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;44]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;45]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_rmul[&lt;lambda&gt;46]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;0]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;1]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;2]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;3]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;4]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;5]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;6]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;7]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;8]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;9]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;10]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;11]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;12]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;13]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;14]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;15]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;16]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;17]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;18]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;19]" time="0.037" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;20]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;21]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;22]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;23]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;24]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;25]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;26]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;27]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;28]" time="0.044" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;29]" time="0.038" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;30]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;31]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;32]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;33]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;34]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;35]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;36]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;37]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;38]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;39]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;40]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;41]" time="0.024" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;42]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;43]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;44]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;45]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_neg[&lt;lambda&gt;46]" time="0.027" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;0]" time="0.072" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;1]" time="0.048" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;2]" time="0.048" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;3]" time="0.047" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;4]" time="0.106" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;5]" time="0.109" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;6]" time="0.110" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;7]" time="0.109" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;8]" time="0.171" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;9]" time="0.107" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;10]" time="0.082" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;11]" time="0.075" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;12]" time="0.181" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;13]" time="0.119" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;14]" time="0.070" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;15]" time="0.062" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;16]" time="0.068" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;17]" time="0.061" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;18]" time="0.074" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;19]" time="0.067" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;20]" time="0.073" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;21]" time="0.064" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;22]" time="0.075" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;23]" time="0.069" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;24]" time="0.071" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;25]" time="0.065" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;26]" time="0.076" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;27]" time="0.072" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;28]" time="0.076" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;29]" time="0.069" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;30]" time="0.169" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;31]" time="0.107" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;32]" time="0.059" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;33]" time="0.053" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;34]" time="0.058" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;35]" time="0.071" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;36]" time="0.102" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;37]" time="0.055" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;38]" time="0.054" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;39]" time="0.055" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;40]" time="0.119" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;41]" time="0.199" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;42]" time="0.124" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;43]" time="0.110" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;44]" time="0.064" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;45]" time="0.168" /><testcase classname="src.pymortests.operators.operators" name="test_apply2[&lt;lambda&gt;46]" time="0.056" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;0]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;1]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;2]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;3]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;4]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;5]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;6]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;7]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;8]" time="0.051" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;9]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;10]" time="0.046" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;11]" time="0.038" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;12]" time="0.051" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;13]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;14]" time="0.044" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;15]" time="0.038" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;16]" time="0.044" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;17]" time="0.037" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;18]" time="0.044" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;19]" time="0.037" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;20]" time="0.044" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;21]" time="0.037" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;22]" time="0.045" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;23]" time="0.039" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;24]" time="0.045" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;25]" time="0.038" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;26]" time="0.045" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;27]" time="0.038" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;28]" time="0.045" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;29]" time="0.038" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;30]" time="0.051" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;31]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;32]" time="0.026" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;33]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;34]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;35]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;36]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;37]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;38]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;39]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;40]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;41]" time="0.032" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;42]" time="0.026" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;43]" time="0.025" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;44]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;45]" time="0.032" /><testcase classname="src.pymortests.operators.operators" name="test_pairwise_apply2[&lt;lambda&gt;46]" time="0.025" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;0]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;1]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;2]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;3]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;4]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;5]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;6]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;7]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;8]" time="0.053" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;9]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;10]" time="0.047" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;11]" time="0.039" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;12]" time="0.056" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;13]" time="0.044" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;14]" time="0.044" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;15]" time="0.037" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;16]" time="0.044" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;17]" time="0.037" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;18]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;19]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;20]" time="0.045" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;21]" time="0.038" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;22]" time="0.044" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;23]" time="0.037" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;24]" time="0.044" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;25]" time="0.037" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;26]" time="0.044" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;27]" time="0.037" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;28]" time="0.044" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;29]" time="0.038" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;30]" time="0.055" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;31]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;32]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;33]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;34]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;35]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;36]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;37]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;38]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;39]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;40]" time="0.028" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;41]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;42]" time="0.026" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;43]" time="0.028" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;44]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;45]" time="0.024" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint[&lt;lambda&gt;46]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;0]" time="0.037" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;1]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;2]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;3]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;4]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;5]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;6]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;7]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;8]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;9]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;10]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;11]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;12]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;13]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;14]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;15]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;16]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;17]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;18]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;19]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;20]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;21]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;22]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;23]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;24]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;25]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;26]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;27]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;28]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;29]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;30]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;31]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;32]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;33]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;34]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;35]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;36]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;37]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;38]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;39]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;40]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;41]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;42]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;43]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;44]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;45]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_apply_adjoint_2[&lt;lambda&gt;46]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;0]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;1]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;2]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;3]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;4]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;5]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;6]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;7]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;8]" time="0.044" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;9]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;10]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;11]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;12]" time="0.045" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;13]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;14]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;15]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;16]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;17]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;18]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;19]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;20]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;21]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;22]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;23]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;24]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;25]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;26]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;27]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;28]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;29]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;30]" time="0.044" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;31]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;32]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;33]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;34]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;35]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;36]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;37]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;38]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;39]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;40]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;41]" time="0.032" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;42]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;43]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;44]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;45]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_H[&lt;lambda&gt;46]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;0]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;1]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;2]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;3]" time="0.026" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;4]" time="0.029" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;5]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;6]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;7]" time="0.030" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;8]" time="0.065" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;9]" time="0.049" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;10]" time="0.045" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;11]" time="0.038" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;12]" time="0.060" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;13]" time="0.050" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;14]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;15]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;16]" time="0.039" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;17]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;18]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;19]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;20]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;21]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;22]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;23]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;24]" time="0.039" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;25]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;26]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;27]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;28]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;29]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;30]" time="0.064" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;31]" time="0.048" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;32]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;33]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;34]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;35]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;36]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;37]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;38]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;39]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;40]" time="0.030" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;41]" time="0.059" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;42]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;43]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;44]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;45]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse[&lt;lambda&gt;46]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;0]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;1]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;2]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;3]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;4]" time="0.026" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;5]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;6]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;7]" time="0.031" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;8]" time="0.071" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;9]" time="0.052" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;10]" time="0.052" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;11]" time="0.045" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;12]" time="0.078" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;13]" time="0.059" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;14]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;15]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;16]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;17]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;18]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;19]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;20]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;21]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;22]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;23]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;24]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;25]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;26]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;27]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;28]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;29]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;30]" time="0.070" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;31]" time="0.052" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;32]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;33]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;34]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;35]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;36]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;37]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;38]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;39]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;40]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;41]" time="0.062" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;42]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;43]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;44]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;45]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_apply_inverse_adjoint[&lt;lambda&gt;46]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;0]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;1]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;2]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;3]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;4]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;5]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;6]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;7]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;8]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;9]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;10]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;11]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;12]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;13]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;14]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;15]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;16]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;17]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;18]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;19]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;20]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;21]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;22]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;23]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;24]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;25]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;26]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;27]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;28]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;29]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;30]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;31]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;32]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;33]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;34]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;35]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;36]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;37]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;38]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;39]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;40]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;41]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;42]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;43]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;44]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;45]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_jacobian[&lt;lambda&gt;46]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;0]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;1]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;2]" time="0.024" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;3]" time="0.030" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;4]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;5]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;6]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;7]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;8]" time="0.048" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;9]" time="0.038" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;10]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;11]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;12]" time="0.049" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;13]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;14]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;15]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;16]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;17]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;18]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;19]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;20]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;21]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;22]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;23]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;24]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;25]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;26]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;27]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;28]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;29]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;30]" time="0.049" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;31]" time="0.039" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;32]" time="0.024" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;33]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;34]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;35]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;36]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;37]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;38]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;39]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;40]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;41]" time="0.032" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;42]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;43]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;44]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;45]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_assemble[&lt;lambda&gt;46]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;0]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;1]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;2]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;3]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;4]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;5]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;6]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;7]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;8]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;9]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;10]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;11]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;12]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;13]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;14]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;15]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;16]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;17]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;18]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;19]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;20]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;21]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;22]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;23]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;24]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;25]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;26]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;27]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;28]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;29]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;30]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;31]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;32]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;33]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;34]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;35]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;36]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;37]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;38]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;39]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;40]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;41]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;42]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;43]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;44]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;45]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_restricted[&lt;lambda&gt;46]" time="0.021" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;0]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;1]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;2]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;3]" time="0.031" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;4]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;5]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;6]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;7]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;8]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;9]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;10]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;11]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;12]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;13]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;14]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;15]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;16]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;17]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;18]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;19]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;20]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;21]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;22]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;23]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;24]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;25]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;26]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;27]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;28]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;29]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;30]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;31]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;32]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;33]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;34]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;35]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;36]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;37]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;38]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;39]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;40]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;41]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;42]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;43]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;44]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;45]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_restricted_jacobian[&lt;lambda&gt;46]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;0]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;1]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;2]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;3]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;4]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;5]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;6]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;7]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;8]" time="0.049" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;9]" time="0.039" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;10]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;11]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;12]" time="0.049" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;13]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;14]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;15]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;16]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;17]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;18]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;19]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;20]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;21]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;22]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;23]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;24]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;25]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;26]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;27]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;28]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;29]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;30]" time="0.048" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;31]" time="0.038" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;32]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;33]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;34]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;35]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;36]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;37]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;38]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;39]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;40]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;41]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;42]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;43]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;44]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;45]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_InverseOperator[&lt;lambda&gt;46]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;0]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;1]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;2]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;3]" time="0.024" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;4]" time="0.025" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;5]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;6]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;7]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;8]" time="0.053" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;9]" time="0.039" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;10]" time="0.043" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;11]" time="0.036" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;12]" time="0.049" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;13]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;14]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;15]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;16]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;17]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;18]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;19]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;20]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;21]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;22]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;23]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;24]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;25]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;26]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;27]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;28]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;29]" time="0.035" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;30]" time="0.049" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;31]" time="0.039" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;32]" time="0.024" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;33]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;34]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;35]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;36]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;37]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;38]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;39]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;40]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;41]" time="0.032" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;42]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;43]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;44]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;45]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_InverseAdjointOperator[&lt;lambda&gt;46]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_vectorarray_op_apply_inverse" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_vectorarray_op_apply_inverse_lstsq" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_adjoint_vectorarray_op_apply_inverse_lstsq" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;0]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;1]" time="0.023" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;2]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;3]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;4]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;5]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;6]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;7]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;8]" time="0.042" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;9]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;10]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;11]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;12]" time="0.041" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;13]" time="0.034" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;14]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;15]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;16]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;17]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;18]" time="0.039" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;19]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;20]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;21]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;22]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;23]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;24]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;25]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;26]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;27]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;28]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;29]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;30]" time="0.040" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;31]" time="0.033" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;32]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;33]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;34]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;35]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;36]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;37]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;38]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;39]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;40]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;41]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;42]" time="0.019" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;43]" time="0.018" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;44]" time="0.016" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;45]" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_as_range_array[&lt;lambda&gt;46]" time="0.022" /><testcase classname="src.pymortests.operators.operators" name="test_issue_1276" time="0.017" /><testcase classname="src.pymortests.operators.operators" name="test_hankel_operator[False]" time="0.020" /><testcase classname="src.pymortests.operators.operators" name="test_hankel_operator[True]" time="0.019" /><testcase classname="src.pymortests.parameters.min_max_theta_functionals" name="test_min_theta_parameter_functional" time="0.017" /><testcase classname="src.pymortests.parameters.min_max_theta_functionals" name="test_min_theta_parameter_functional_fails_for_wrong_input" time="0.017" /><testcase classname="src.pymortests.parameters.min_max_theta_functionals" name="test_max_theta_parameter_functional" time="0.017" /><testcase classname="src.pymortests.parameters.min_max_theta_functionals" name="test_base_max_theta_parameter_functional" time="0.017" /><testcase classname="src.pymortests.parameters.mu_derivatives" name="test_ProjectionParameterFunctional" time="0.016" /><testcase classname="src.pymortests.parameters.mu_derivatives" name="test_ExpressionParameterFunctional" time="0.020" /><testcase classname="src.pymortests.parameters.mu_derivatives" name="test_simple_ProductParameterFunctional" time="0.018" /><testcase classname="src.pymortests.parameters.mu_derivatives" name="test_ProductParameterFunctional" time="0.020" /><testcase classname="src.pymortests.parameters.mu_derivatives" name="test_d_mu_of_LincombOperator" time="0.022" /><testcase classname="src.pymortests.parameters.mu_derivatives" name="test_output_d_mu" time="1.977" /><testcase classname="src.pymortests.parameters.parameter_functionals" name="test_LincombParameterFunctional" time="0.021" /><testcase classname="src.pymortests.parameters.parameters" name="test_uniform[space0]" time="0.019" /><testcase classname="src.pymortests.parameters.parameters" name="test_randomly[space0]" time="0.019" /><testcase classname="src.pymortests.parameters.parameters" name="test_randomly_without_count[space0]" time="0.016" /><testcase classname="src.pymortests.parameters.parameters" name="test_clip[space0]" time="0.016" /><testcase classname="src.pymortests.parameters.parameters" name="test_uniform[space1]" time="0.295" /><testcase classname="src.pymortests.parameters.parameters" name="test_randomly[space1]" time="0.020" /><testcase classname="src.pymortests.parameters.parameters" name="test_randomly_without_count[space1]" time="0.016" /><testcase classname="src.pymortests.parameters.parameters" name="test_clip[space1]" time="0.016" /><testcase classname="src.pymortests.parameters.parameters" name="test_uniform[space2]" time="0.463" /><testcase classname="src.pymortests.parameters.parameters" name="test_randomly[space2]" time="0.022" /><testcase classname="src.pymortests.parameters.parameters" name="test_randomly_without_count[space2]" time="0.016" /><testcase classname="src.pymortests.parameters.parameters" name="test_clip[space2]" time="0.017" /><testcase classname="src.pymortests.parameters.parameters" name="test_parse_parameter" time="0.016" /><testcase classname="src.pymortests.parameters.parameters" name="test_parse_mu" time="0.077" /><testcase classname="src.pymortests.parameters.parameters" name="test_mu_parameters" time="0.068" /><testcase classname="src.pymortests.parameters.parameters" name="test_mu_values" time="0.073" /><testcase classname="src.pymortests.parameters.parameters" name="test_mu_time_dependent" time="0.072" /><testcase classname="src.pymortests.parameters.parameters" name="test_mu_with_changed_time" time="0.067" /><testcase classname="src.pymortests.parameters.parameters" name="test_mu_to_numpy" time="0.071" /><testcase classname="src.pymortests.parameters.parameters" name="test_mu_t_wrong_value" time="0.017" /><testcase classname="src.pymortests.reductors.h2" name="test_irka" time="0.072" /></testsuite></testsuites>